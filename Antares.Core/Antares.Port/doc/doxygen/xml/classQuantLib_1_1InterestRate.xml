<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classQuantLib_1_1InterestRate" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::InterestRate</compoundname>
    <includes refid="interestrate_8hpp" local="no">interestrate.hpp</includes>
    <sectiondef kind="user-defined">
      <header>equivalent rate calculations</header>
      <memberdef kind="variable" id="classQuantLib_1_1InterestRate_1ad840d875417ade16982f31aeb30163b3" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceQuantLib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::InterestRate::r_</definition>
        <argsstring></argsstring>
        <name>r_</name>
        <qualifiedname>QuantLib::InterestRate::r_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/interestrate.hpp" line="181" column="14" bodyfile="ql/interestrate.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1InterestRate_1a9be31de6d45f55c01acd171d2085c98f" prot="private" static="no" mutable="no">
        <type><ref refid="classQuantLib_1_1DayCounter" kindref="compound">DayCounter</ref></type>
        <definition>DayCounter QuantLib::InterestRate::dc_</definition>
        <argsstring></argsstring>
        <name>dc_</name>
        <qualifiedname>QuantLib::InterestRate::dc_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/interestrate.hpp" line="182" column="20" bodyfile="ql/interestrate.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1InterestRate_1a56146316f6cb1f188539bc1b8a5bd052" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceQuantLib_1a1d1b94285bc6741279c70fac8b34265b" kindref="member">Compounding</ref></type>
        <definition>Compounding QuantLib::InterestRate::comp_</definition>
        <argsstring></argsstring>
        <name>comp_</name>
        <qualifiedname>QuantLib::InterestRate::comp_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/interestrate.hpp" line="183" column="21" bodyfile="ql/interestrate.hpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1InterestRate_1a607a2e784b471f48fbe51f60de025541" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::InterestRate::freqMakesSense_</definition>
        <argsstring></argsstring>
        <name>freqMakesSense_</name>
        <qualifiedname>QuantLib::InterestRate::freqMakesSense_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/interestrate.hpp" line="184" column="14" bodyfile="ql/interestrate.hpp" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1InterestRate_1a29d729e784314eebe7141b1abe67bf10" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::InterestRate::freq_</definition>
        <argsstring></argsstring>
        <name>freq_</name>
        <qualifiedname>QuantLib::InterestRate::freq_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/interestrate.hpp" line="185" column="14" bodyfile="ql/interestrate.hpp" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1InterestRate_1ad14a6bce9c94be8dc3adcdf0d2e34e57" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQuantLib_1_1InterestRate" kindref="compound">InterestRate</ref></type>
        <definition>InterestRate QuantLib::InterestRate::equivalentRate</definition>
        <argsstring>(Compounding comp, Frequency freq, Time t) const</argsstring>
        <name>equivalentRate</name>
        <qualifiedname>QuantLib::InterestRate::equivalentRate</qualifiedname>
        <param>
          <type><ref refid="namespaceQuantLib_1a1d1b94285bc6741279c70fac8b34265b" kindref="member">Compounding</ref></type>
          <declname>comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
          <declname>freq</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>equivalent interest rate for a compounding period t. </para>
        </briefdescription>
        <detaileddescription>
<para>The resulting <ref refid="classQuantLib_1_1InterestRate" kindref="compound">InterestRate</ref> shares the same implicit day-counting rule of the original <ref refid="classQuantLib_1_1InterestRate" kindref="compound">InterestRate</ref> instance.</para>
<para><simplesect kind="warning"><para>Time must be measured using the <ref refid="classQuantLib_1_1InterestRate" kindref="compound">InterestRate</ref>&apos;s own day counter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/interestrate.hpp" line="155" column="22" bodyfile="ql/interestrate.hpp" bodystart="155" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1InterestRate_1a895d79a99c0bfd39a1a4cbe8cfd0704d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQuantLib_1_1InterestRate" kindref="compound">InterestRate</ref></type>
        <definition>InterestRate QuantLib::InterestRate::equivalentRate</definition>
        <argsstring>(const DayCounter &amp;resultDC, Compounding comp, Frequency freq, Date d1, Date d2, const Date &amp;refStart=Date(), const Date &amp;refEnd=Date()) const</argsstring>
        <name>equivalentRate</name>
        <qualifiedname>QuantLib::InterestRate::equivalentRate</qualifiedname>
        <param>
          <type>const <ref refid="classQuantLib_1_1DayCounter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>resultDC</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1a1d1b94285bc6741279c70fac8b34265b" kindref="member">Compounding</ref></type>
          <declname>comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
          <declname>freq</declname>
        </param>
        <param>
          <type><ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref></type>
          <declname>d1</declname>
        </param>
        <param>
          <type><ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref></type>
          <declname>d2</declname>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref> &amp;</type>
          <declname>refStart</declname>
          <defval><ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref> &amp;</type>
          <declname>refEnd</declname>
          <defval><ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref>()</defval>
        </param>
        <briefdescription>
<para>equivalent rate for a compounding period between two dates </para>
        </briefdescription>
        <detaileddescription>
<para>The resulting rate is calculated taking the required day-counting rule into account. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/interestrate.hpp" line="165" column="22" bodyfile="ql/interestrate.hpp" bodystart="165" bodyend="178"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>constructors</header>
      <memberdef kind="function" id="classQuantLib_1_1InterestRate_1afa5e647c1e700c8a9fa94aa42513e4bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::InterestRate::InterestRate</definition>
        <argsstring>()</argsstring>
        <name>InterestRate</name>
        <qualifiedname>QuantLib::InterestRate::InterestRate</qualifiedname>
        <briefdescription>
<para><ref refid="structQuantLib_1_1Default" kindref="compound">Default</ref> constructor returning a null interest rate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/interestrate.hpp" line="45" column="9" bodyfile="ql/interestrate.cpp" bodystart="30" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1InterestRate_1ae323912ae205b3657d133493652767a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::InterestRate::InterestRate</definition>
        <argsstring>(Rate r, DayCounter dc, Compounding comp, Frequency freq)</argsstring>
        <name>InterestRate</name>
        <qualifiedname>QuantLib::InterestRate::InterestRate</qualifiedname>
        <param>
          <type><ref refid="namespaceQuantLib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="classQuantLib_1_1DayCounter" kindref="compound">DayCounter</ref></type>
          <declname>dc</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1a1d1b94285bc6741279c70fac8b34265b" kindref="member">Compounding</ref></type>
          <declname>comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
          <declname>freq</declname>
        </param>
        <briefdescription>
<para>Standard constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/interestrate.hpp" line="47" column="9" bodyfile="ql/interestrate.cpp" bodystart="33" bodyend="42"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>conversions</header>
      <memberdef kind="function" id="classQuantLib_1_1InterestRate_1a10468d6d61ba5c7339d23047cd8f01ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::InterestRate::operator Rate</definition>
        <argsstring>() const</argsstring>
        <name>operator Rate</name>
        <qualifiedname>QuantLib::InterestRate::operator Rate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/interestrate.hpp" line="51" column="9" bodyfile="ql/interestrate.hpp" bodystart="51" bodyend="51"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>inspectors</header>
      <memberdef kind="function" id="classQuantLib_1_1InterestRate_1a43c50ea03526a92ff0caec35112d7166" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceQuantLib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::InterestRate::rate</definition>
        <argsstring>() const</argsstring>
        <name>rate</name>
        <qualifiedname>QuantLib::InterestRate::rate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/interestrate.hpp" line="55" column="14" bodyfile="ql/interestrate.hpp" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1InterestRate_1adbb7ab6184c6c16ddadd05274c81128a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classQuantLib_1_1DayCounter" kindref="compound">DayCounter</ref> &amp;</type>
        <definition>const DayCounter &amp; QuantLib::InterestRate::dayCounter</definition>
        <argsstring>() const</argsstring>
        <name>dayCounter</name>
        <qualifiedname>QuantLib::InterestRate::dayCounter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/interestrate.hpp" line="56" column="26" bodyfile="ql/interestrate.hpp" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1InterestRate_1acd804d055f2cbfd7fae736d4f43e859a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceQuantLib_1a1d1b94285bc6741279c70fac8b34265b" kindref="member">Compounding</ref></type>
        <definition>Compounding QuantLib::InterestRate::compounding</definition>
        <argsstring>() const</argsstring>
        <name>compounding</name>
        <qualifiedname>QuantLib::InterestRate::compounding</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/interestrate.hpp" line="57" column="21" bodyfile="ql/interestrate.hpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1InterestRate_1a2163860d87b87fd2ed543e9e95d5f85b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceQuantLib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
        <definition>Frequency QuantLib::InterestRate::frequency</definition>
        <argsstring>() const</argsstring>
        <name>frequency</name>
        <qualifiedname>QuantLib::InterestRate::frequency</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/interestrate.hpp" line="58" column="19" bodyfile="ql/interestrate.hpp" bodystart="58" bodyend="60"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>discount/compound factor calculations</header>
      <memberdef kind="function" id="classQuantLib_1_1InterestRate_1aea246ef5abff4b2f73c15d550bc8f024" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceQuantLib_1a05e8e288a4bdedfe5b4e16d8cec14f1c" kindref="member">DiscountFactor</ref></type>
        <definition>DiscountFactor QuantLib::InterestRate::discountFactor</definition>
        <argsstring>(Time t) const</argsstring>
        <name>discountFactor</name>
        <qualifiedname>QuantLib::InterestRate::discountFactor</qualifiedname>
        <param>
          <type><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>discount factor implied by the rate compounded at time t. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Time must be measured using <ref refid="classQuantLib_1_1InterestRate" kindref="compound">InterestRate</ref>&apos;s own day counter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/interestrate.hpp" line="69" column="24" bodyfile="ql/interestrate.hpp" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1InterestRate_1ae4ef40d024b173e2bbdf4b3d1ad6e99b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceQuantLib_1a05e8e288a4bdedfe5b4e16d8cec14f1c" kindref="member">DiscountFactor</ref></type>
        <definition>DiscountFactor QuantLib::InterestRate::discountFactor</definition>
        <argsstring>(const Date &amp;d1, const Date &amp;d2, const Date &amp;refStart=Date(), const Date &amp;refEnd=Date()) const</argsstring>
        <name>discountFactor</name>
        <qualifiedname>QuantLib::InterestRate::discountFactor</qualifiedname>
        <param>
          <type>const <ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref> &amp;</type>
          <declname>d1</declname>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref> &amp;</type>
          <declname>d2</declname>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref> &amp;</type>
          <declname>refStart</declname>
          <defval><ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref> &amp;</type>
          <declname>refEnd</declname>
          <defval><ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref>()</defval>
        </param>
        <briefdescription>
<para>discount factor implied by the rate compounded between two dates </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/interestrate.hpp" line="74" column="24" bodyfile="ql/interestrate.hpp" bodystart="74" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1InterestRate_1a63015e4832ca6140b98aa4aae27db10f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::InterestRate::compoundFactor</definition>
        <argsstring>(Time t) const</argsstring>
        <name>compoundFactor</name>
        <qualifiedname>QuantLib::InterestRate::compoundFactor</qualifiedname>
        <param>
          <type><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>compound factor implied by the rate compounded at time t. </para>
        </briefdescription>
        <detaileddescription>
<para>returns the compound (a.k.a capitalization) factor implied by the rate compounded at time t.</para>
<para><simplesect kind="warning"><para>Time must be measured using <ref refid="classQuantLib_1_1InterestRate" kindref="compound">InterestRate</ref>&apos;s own day counter. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/interestrate.hpp" line="92" column="14" bodyfile="ql/interestrate.cpp" bodystart="44" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1InterestRate_1aecf2b3605e734e64da0b3cdf74f0028b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::InterestRate::compoundFactor</definition>
        <argsstring>(const Date &amp;d1, const Date &amp;d2, const Date &amp;refStart=Date(), const Date &amp;refEnd=Date()) const</argsstring>
        <name>compoundFactor</name>
        <qualifiedname>QuantLib::InterestRate::compoundFactor</qualifiedname>
        <param>
          <type>const <ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref> &amp;</type>
          <declname>d1</declname>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref> &amp;</type>
          <declname>d2</declname>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref> &amp;</type>
          <declname>refStart</declname>
          <defval><ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref> &amp;</type>
          <declname>refEnd</declname>
          <defval><ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref>()</defval>
        </param>
        <briefdescription>
<para>compound factor implied by the rate compounded between two dates </para>
        </briefdescription>
        <detaileddescription>
<para>returns the compound (a.k.a capitalization) factor implied by the rate compounded between two dates. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/interestrate.hpp" line="98" column="14" bodyfile="ql/interestrate.hpp" bodystart="98" bodyend="107"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>implied rate calculations</header>
      <memberdef kind="function" id="classQuantLib_1_1InterestRate_1ab655c9085b80eb978756c952f53e2aa4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQuantLib_1_1InterestRate" kindref="compound">InterestRate</ref></type>
        <definition>InterestRate QuantLib::InterestRate::impliedRate</definition>
        <argsstring>(Real compound, const DayCounter &amp;resultDC, Compounding comp, Frequency freq, Time t)</argsstring>
        <name>impliedRate</name>
        <qualifiedname>QuantLib::InterestRate::impliedRate</qualifiedname>
        <param>
          <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>compound</declname>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1DayCounter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>resultDC</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1a1d1b94285bc6741279c70fac8b34265b" kindref="member">Compounding</ref></type>
          <declname>comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
          <declname>freq</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>implied interest rate for a given compound factor at a given time. </para>
        </briefdescription>
        <detaileddescription>
<para>The resulting <ref refid="classQuantLib_1_1InterestRate" kindref="compound">InterestRate</ref> has the day-counter provided as input.</para>
<para><simplesect kind="warning"><para>Time must be measured using the day-counter provided as input. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/interestrate.hpp" line="119" column="29" bodyfile="ql/interestrate.cpp" bodystart="70" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1InterestRate_1ae81ed5373ba5799f82a1da96ae0ffe22" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQuantLib_1_1InterestRate" kindref="compound">InterestRate</ref></type>
        <definition>static InterestRate QuantLib::InterestRate::impliedRate</definition>
        <argsstring>(Real compound, const DayCounter &amp;resultDC, Compounding comp, Frequency freq, const Date &amp;d1, const Date &amp;d2, const Date &amp;refStart=Date(), const Date &amp;refEnd=Date())</argsstring>
        <name>impliedRate</name>
        <qualifiedname>QuantLib::InterestRate::impliedRate</qualifiedname>
        <param>
          <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>compound</declname>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1DayCounter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>resultDC</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1a1d1b94285bc6741279c70fac8b34265b" kindref="member">Compounding</ref></type>
          <declname>comp</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
          <declname>freq</declname>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref> &amp;</type>
          <declname>d1</declname>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref> &amp;</type>
          <declname>d2</declname>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref> &amp;</type>
          <declname>refStart</declname>
          <defval><ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref> &amp;</type>
          <declname>refEnd</declname>
          <defval><ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref>()</defval>
        </param>
        <briefdescription>
<para>implied rate for a given compound factor between two dates. </para>
        </briefdescription>
        <detaileddescription>
<para>The resulting rate is calculated taking the required day-counting rule into account. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/interestrate.hpp" line="129" column="29" bodyfile="ql/interestrate.hpp" bodystart="129" bodyend="142"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="related">
      <memberdef kind="function" id="classQuantLib_1_1InterestRate_1a470e6cf45fe6bf07123c0ba59f292814" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const InterestRate &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>QuantLib::InterestRate::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1InterestRate" kindref="compound">InterestRate</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/interestrate.hpp" line="189" column="5" bodyfile="ql/interestrate.cpp" bodystart="115" bodyend="166" declfile="ql/interestrate.hpp" declline="189" declcolumn="5"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Concrete interest rate class. </para>
    </briefdescription>
    <detaileddescription>
<para>This class encapsulate the interest rate compounding algebra. It manages day-counting conventions, compounding conventions, conversion between different conventions, discount/compound factor calculations, and implied/equivalent rate calculations.</para>
<para><xrefsect id="test_1_test000002"><xreftitle>Test</xreftitle><xrefdescription><para>Converted rates are checked against known good results </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::DayCounter</label>
        <link refid="classQuantLib_1_1DayCounter"/>
      </node>
      <node id="1">
        <label>QuantLib::InterestRate</label>
        <link refid="classQuantLib_1_1InterestRate"/>
        <childnode refid="2" relation="usage">
          <edgelabel>dc_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/interestrate.hpp" line="40" column="5" bodyfile="ql/interestrate.hpp" bodystart="40" bodyend="186"/>
    <listofallmembers>
      <member refid="classQuantLib_1_1InterestRate_1a56146316f6cb1f188539bc1b8a5bd052" prot="private" virt="non-virtual"><scope>QuantLib::InterestRate</scope><name>comp_</name></member>
      <member refid="classQuantLib_1_1InterestRate_1a63015e4832ca6140b98aa4aae27db10f" prot="public" virt="non-virtual"><scope>QuantLib::InterestRate</scope><name>compoundFactor</name></member>
      <member refid="classQuantLib_1_1InterestRate_1aecf2b3605e734e64da0b3cdf74f0028b" prot="public" virt="non-virtual"><scope>QuantLib::InterestRate</scope><name>compoundFactor</name></member>
      <member refid="classQuantLib_1_1InterestRate_1acd804d055f2cbfd7fae736d4f43e859a" prot="public" virt="non-virtual"><scope>QuantLib::InterestRate</scope><name>compounding</name></member>
      <member refid="classQuantLib_1_1InterestRate_1adbb7ab6184c6c16ddadd05274c81128a" prot="public" virt="non-virtual"><scope>QuantLib::InterestRate</scope><name>dayCounter</name></member>
      <member refid="classQuantLib_1_1InterestRate_1a9be31de6d45f55c01acd171d2085c98f" prot="private" virt="non-virtual"><scope>QuantLib::InterestRate</scope><name>dc_</name></member>
      <member refid="classQuantLib_1_1InterestRate_1aea246ef5abff4b2f73c15d550bc8f024" prot="public" virt="non-virtual"><scope>QuantLib::InterestRate</scope><name>discountFactor</name></member>
      <member refid="classQuantLib_1_1InterestRate_1ae4ef40d024b173e2bbdf4b3d1ad6e99b" prot="public" virt="non-virtual"><scope>QuantLib::InterestRate</scope><name>discountFactor</name></member>
      <member refid="classQuantLib_1_1InterestRate_1ad14a6bce9c94be8dc3adcdf0d2e34e57" prot="public" virt="non-virtual"><scope>QuantLib::InterestRate</scope><name>equivalentRate</name></member>
      <member refid="classQuantLib_1_1InterestRate_1a895d79a99c0bfd39a1a4cbe8cfd0704d" prot="public" virt="non-virtual"><scope>QuantLib::InterestRate</scope><name>equivalentRate</name></member>
      <member refid="classQuantLib_1_1InterestRate_1a29d729e784314eebe7141b1abe67bf10" prot="private" virt="non-virtual"><scope>QuantLib::InterestRate</scope><name>freq_</name></member>
      <member refid="classQuantLib_1_1InterestRate_1a607a2e784b471f48fbe51f60de025541" prot="private" virt="non-virtual"><scope>QuantLib::InterestRate</scope><name>freqMakesSense_</name></member>
      <member refid="classQuantLib_1_1InterestRate_1a2163860d87b87fd2ed543e9e95d5f85b" prot="public" virt="non-virtual"><scope>QuantLib::InterestRate</scope><name>frequency</name></member>
      <member refid="classQuantLib_1_1InterestRate_1ab655c9085b80eb978756c952f53e2aa4" prot="public" virt="non-virtual"><scope>QuantLib::InterestRate</scope><name>impliedRate</name></member>
      <member refid="classQuantLib_1_1InterestRate_1ae81ed5373ba5799f82a1da96ae0ffe22" prot="public" virt="non-virtual"><scope>QuantLib::InterestRate</scope><name>impliedRate</name></member>
      <member refid="classQuantLib_1_1InterestRate_1afa5e647c1e700c8a9fa94aa42513e4bb" prot="public" virt="non-virtual"><scope>QuantLib::InterestRate</scope><name>InterestRate</name></member>
      <member refid="classQuantLib_1_1InterestRate_1ae323912ae205b3657d133493652767a2" prot="public" virt="non-virtual"><scope>QuantLib::InterestRate</scope><name>InterestRate</name></member>
      <member refid="classQuantLib_1_1InterestRate_1a10468d6d61ba5c7339d23047cd8f01ec" prot="public" virt="non-virtual"><scope>QuantLib::InterestRate</scope><name>operator Rate</name></member>
      <member refid="classQuantLib_1_1InterestRate_1a470e6cf45fe6bf07123c0ba59f292814" prot="public" virt="non-virtual"><scope>QuantLib::InterestRate</scope><name>operator&lt;&lt;</name></member>
      <member refid="classQuantLib_1_1InterestRate_1ad840d875417ade16982f31aeb30163b3" prot="private" virt="non-virtual"><scope>QuantLib::InterestRate</scope><name>r_</name></member>
      <member refid="classQuantLib_1_1InterestRate_1a43c50ea03526a92ff0caec35112d7166" prot="public" virt="non-virtual"><scope>QuantLib::InterestRate</scope><name>rate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
