<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classQuantLib_1_1FlatForward" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::FlatForward</compoundname>
    <basecompoundref refid="classQuantLib_1_1YieldTermStructure" prot="public" virt="non-virtual">QuantLib::YieldTermStructure</basecompoundref>
    <basecompoundref refid="classQuantLib_1_1LazyObject" prot="public" virt="non-virtual">QuantLib::LazyObject</basecompoundref>
    <includes refid="flatforward_8hpp" local="no">flatforward.hpp</includes>
    <sectiondef kind="user-defined">
      <header>YieldTermStructure implementation</header>
      <memberdef kind="variable" id="classQuantLib_1_1FlatForward_1a1e271fc1ed79b0efc966f94efaa2984c" prot="private" static="no" mutable="no">
        <type><ref refid="classQuantLib_1_1Handle" kindref="compound">Handle</ref>&lt; <ref refid="classQuantLib_1_1Quote" kindref="compound">Quote</ref> &gt;</type>
        <definition>Handle&lt;Quote&gt; QuantLib::FlatForward::forward_</definition>
        <argsstring></argsstring>
        <name>forward_</name>
        <qualifiedname>QuantLib::FlatForward::forward_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/flatforward.hpp" line="89" column="16" bodyfile="ql/termstructures/yield/flatforward.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1FlatForward_1a1a02ef57fc0a463b8484e9c6243cf808" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceQuantLib_1a1d1b94285bc6741279c70fac8b34265b" kindref="member">Compounding</ref></type>
        <definition>Compounding QuantLib::FlatForward::compounding_</definition>
        <argsstring></argsstring>
        <name>compounding_</name>
        <qualifiedname>QuantLib::FlatForward::compounding_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/flatforward.hpp" line="90" column="21" bodyfile="ql/termstructures/yield/flatforward.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1FlatForward_1abe72137786ddecea65c7aacf11995908" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceQuantLib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
        <definition>Frequency QuantLib::FlatForward::frequency_</definition>
        <argsstring></argsstring>
        <name>frequency_</name>
        <qualifiedname>QuantLib::FlatForward::frequency_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/flatforward.hpp" line="91" column="19" bodyfile="ql/termstructures/yield/flatforward.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1FlatForward_1ac7c790bee048748b202994b86fc3d9b2" prot="private" static="no" mutable="yes">
        <type><ref refid="classQuantLib_1_1InterestRate" kindref="compound">InterestRate</ref></type>
        <definition>InterestRate QuantLib::FlatForward::rate_</definition>
        <argsstring></argsstring>
        <name>rate_</name>
        <qualifiedname>QuantLib::FlatForward::rate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/flatforward.hpp" line="92" column="30" bodyfile="ql/termstructures/yield/flatforward.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1FlatForward_1a24c25d14869a0361904afa54cbaca7e6" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceQuantLib_1a05e8e288a4bdedfe5b4e16d8cec14f1c" kindref="member">DiscountFactor</ref></type>
        <definition>DiscountFactor QuantLib::FlatForward::discountImpl</definition>
        <argsstring>(Time) const override</argsstring>
        <name>discountImpl</name>
        <qualifiedname>QuantLib::FlatForward::discountImpl</qualifiedname>
        <reimplements refid="classQuantLib_1_1YieldTermStructure_1a5c8dd504b1ed73f96c61dce6d8bfed81">discountImpl</reimplements>
        <param>
          <type><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        </param>
        <briefdescription>
<para>discount factor calculation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/flatforward.hpp" line="86" column="24" bodyfile="ql/termstructures/yield/flatforward.hpp" bodystart="102" bodyend="105"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Constructors</header>
      <memberdef kind="function" id="classQuantLib_1_1FlatForward_1a4cdced99008d3f2d714f51b10cfbca41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FlatForward::FlatForward</definition>
        <argsstring>(const Date &amp;referenceDate, Handle&lt; Quote &gt; forward, const DayCounter &amp;dayCounter, Compounding compounding=Continuous, Frequency frequency=Annual)</argsstring>
        <name>FlatForward</name>
        <qualifiedname>QuantLib::FlatForward::FlatForward</qualifiedname>
        <param>
          <type>const <ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref> &amp;</type>
          <declname>referenceDate</declname>
        </param>
        <param>
          <type><ref refid="classQuantLib_1_1Handle" kindref="compound">Handle</ref>&lt; <ref refid="classQuantLib_1_1Quote" kindref="compound">Quote</ref> &gt;</type>
          <declname>forward</declname>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1DayCounter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1a1d1b94285bc6741279c70fac8b34265b" kindref="member">Compounding</ref></type>
          <declname>compounding</declname>
          <defval><ref refid="namespaceQuantLib_1a1d1b94285bc6741279c70fac8b34265baae77494393cf12a7dd3634b002d4ffda" kindref="member">Continuous</ref></defval>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
          <declname>frequency</declname>
          <defval><ref refid="namespaceQuantLib_1abfa020992bcf412e2bc99f56d4381b4aac6003519ba84c016466307b35221e4cf" kindref="member">Annual</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/flatforward.hpp" line="41" column="9" bodyfile="ql/termstructures/yield/flatforward.cpp" bodystart="27" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1FlatForward_1ad3d1b4ac8ff4f09ddf62b5397256847f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FlatForward::FlatForward</definition>
        <argsstring>(const Date &amp;referenceDate, Rate forward, const DayCounter &amp;dayCounter, Compounding compounding=Continuous, Frequency frequency=Annual)</argsstring>
        <name>FlatForward</name>
        <qualifiedname>QuantLib::FlatForward::FlatForward</qualifiedname>
        <param>
          <type>const <ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref> &amp;</type>
          <declname>referenceDate</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>forward</declname>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1DayCounter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1a1d1b94285bc6741279c70fac8b34265b" kindref="member">Compounding</ref></type>
          <declname>compounding</declname>
          <defval><ref refid="namespaceQuantLib_1a1d1b94285bc6741279c70fac8b34265baae77494393cf12a7dd3634b002d4ffda" kindref="member">Continuous</ref></defval>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
          <declname>frequency</declname>
          <defval><ref refid="namespaceQuantLib_1abfa020992bcf412e2bc99f56d4381b4aac6003519ba84c016466307b35221e4cf" kindref="member">Annual</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/flatforward.hpp" line="46" column="9" bodyfile="ql/termstructures/yield/flatforward.cpp" bodystart="37" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1FlatForward_1a08d48e3ed1b8ab0ec45449ec113750e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FlatForward::FlatForward</definition>
        <argsstring>(Natural settlementDays, const Calendar &amp;calendar, Handle&lt; Quote &gt; forward, const DayCounter &amp;dayCounter, Compounding compounding=Continuous, Frequency frequency=Annual)</argsstring>
        <name>FlatForward</name>
        <qualifiedname>QuantLib::FlatForward::FlatForward</qualifiedname>
        <param>
          <type><ref refid="namespaceQuantLib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>settlementDays</declname>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1Calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>calendar</declname>
        </param>
        <param>
          <type><ref refid="classQuantLib_1_1Handle" kindref="compound">Handle</ref>&lt; <ref refid="classQuantLib_1_1Quote" kindref="compound">Quote</ref> &gt;</type>
          <declname>forward</declname>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1DayCounter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1a1d1b94285bc6741279c70fac8b34265b" kindref="member">Compounding</ref></type>
          <declname>compounding</declname>
          <defval><ref refid="namespaceQuantLib_1a1d1b94285bc6741279c70fac8b34265baae77494393cf12a7dd3634b002d4ffda" kindref="member">Continuous</ref></defval>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
          <declname>frequency</declname>
          <defval><ref refid="namespaceQuantLib_1abfa020992bcf412e2bc99f56d4381b4aac6003519ba84c016466307b35221e4cf" kindref="member">Annual</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/flatforward.hpp" line="51" column="9" bodyfile="ql/termstructures/yield/flatforward.cpp" bodystart="46" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1FlatForward_1afe5d3bce3e154b99d1a1b61a45f5f00f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FlatForward::FlatForward</definition>
        <argsstring>(Natural settlementDays, const Calendar &amp;calendar, Rate forward, const DayCounter &amp;dayCounter, Compounding compounding=Continuous, Frequency frequency=Annual)</argsstring>
        <name>FlatForward</name>
        <qualifiedname>QuantLib::FlatForward::FlatForward</qualifiedname>
        <param>
          <type><ref refid="namespaceQuantLib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>settlementDays</declname>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1Calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>calendar</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>forward</declname>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1DayCounter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1a1d1b94285bc6741279c70fac8b34265b" kindref="member">Compounding</ref></type>
          <declname>compounding</declname>
          <defval><ref refid="namespaceQuantLib_1a1d1b94285bc6741279c70fac8b34265baae77494393cf12a7dd3634b002d4ffda" kindref="member">Continuous</ref></defval>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
          <declname>frequency</declname>
          <defval><ref refid="namespaceQuantLib_1abfa020992bcf412e2bc99f56d4381b4aac6003519ba84c016466307b35221e4cf" kindref="member">Annual</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/flatforward.hpp" line="57" column="9" bodyfile="ql/termstructures/yield/flatforward.cpp" bodystart="57" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1FlatForward_1a2b19516f938f79bd7e6b50ec08704c96" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceQuantLib_1a1d1b94285bc6741279c70fac8b34265b" kindref="member">Compounding</ref></type>
        <definition>Compounding QuantLib::FlatForward::compounding</definition>
        <argsstring>() const</argsstring>
        <name>compounding</name>
        <qualifiedname>QuantLib::FlatForward::compounding</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/flatforward.hpp" line="66" column="21" bodyfile="ql/termstructures/yield/flatforward.hpp" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1FlatForward_1a53c6c756a31a6b39a14de67986515b44" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceQuantLib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
        <definition>Frequency QuantLib::FlatForward::compoundingFrequency</definition>
        <argsstring>() const</argsstring>
        <name>compoundingFrequency</name>
        <qualifiedname>QuantLib::FlatForward::compoundingFrequency</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/flatforward.hpp" line="67" column="19" bodyfile="ql/termstructures/yield/flatforward.hpp" bodystart="67" bodyend="67"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>TermStructure interface</header>
      <memberdef kind="function" id="classQuantLib_1_1FlatForward_1aea8ce266e8f72a8a303d45a6b2228014" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classQuantLib_1_1Date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::FlatForward::maxDate</definition>
        <argsstring>() const override</argsstring>
        <name>maxDate</name>
        <qualifiedname>QuantLib::FlatForward::maxDate</qualifiedname>
        <reimplements refid="classQuantLib_1_1TermStructure_1ae9af756bbddc15962711f77f514f08fa">maxDate</reimplements>
        <briefdescription>
<para>the latest date for which the curve can return values </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/flatforward.hpp" line="71" column="14" bodyfile="ql/termstructures/yield/flatforward.hpp" bodystart="71" bodyend="71"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Observer interface</header>
      <memberdef kind="function" id="classQuantLib_1_1FlatForward_1ad0118ca51b2656c16548de488db9ddd7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FlatForward::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::FlatForward::update</qualifiedname>
        <reimplements refid="classQuantLib_1_1Observer_1a07905c55dca858470fcf4a1aea0005aa">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must be implemented in derived classes. An instance of Observer does not call this method directly: instead, it will be called by the observables the instance registered with when they need to notify any changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/flatforward.hpp" line="76" column="14" bodyfile="ql/termstructures/yield/flatforward.hpp" bodystart="97" bodyend="100"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>LazyObject interface</header>
      <memberdef kind="function" id="classQuantLib_1_1FlatForward_1a3c2ab008747a3011b2d2f19ba2104fc3" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FlatForward::performCalculations</definition>
        <argsstring>() const override</argsstring>
        <name>performCalculations</name>
        <qualifiedname>QuantLib::FlatForward::performCalculations</qualifiedname>
        <reimplements refid="classQuantLib_1_1LazyObject_1aafa5583a3743d9f93fa40da5b62e1ff8">performCalculations</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must implement any calculations which must be (re)done in order to calculate the desired results. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/flatforward.hpp" line="81" column="14" bodyfile="ql/termstructures/yield/flatforward.hpp" bodystart="107" bodyend="110"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Flat interest-rate curve. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6">
        <label>QuantLib::Extrapolator</label>
        <link refid="classQuantLib_1_1Extrapolator"/>
      </node>
      <node id="1">
        <label>QuantLib::FlatForward</label>
        <link refid="classQuantLib_1_1FlatForward"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::LazyObject</label>
        <link refid="classQuantLib_1_1LazyObject"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="classQuantLib_1_1Observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="classQuantLib_1_1Observer"/>
      </node>
      <node id="3">
        <label>QuantLib::TermStructure</label>
        <link refid="classQuantLib_1_1TermStructure"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::YieldTermStructure</label>
        <link refid="classQuantLib_1_1YieldTermStructure"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11">
        <label>QuantLib::Handle&lt; QuantLib::Quote &gt;</label>
        <link refid="classQuantLib_1_1Handle"/>
      </node>
      <node id="7">
        <label>QuantLib::Calendar</label>
        <link refid="classQuantLib_1_1Calendar"/>
      </node>
      <node id="8">
        <label>QuantLib::Date</label>
        <link refid="classQuantLib_1_1Date"/>
      </node>
      <node id="9">
        <label>QuantLib::DayCounter</label>
        <link refid="classQuantLib_1_1DayCounter"/>
      </node>
      <node id="6">
        <label>QuantLib::Extrapolator</label>
        <link refid="classQuantLib_1_1Extrapolator"/>
      </node>
      <node id="1">
        <label>QuantLib::FlatForward</label>
        <link refid="classQuantLib_1_1FlatForward"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>forward_</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>rate_</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>QuantLib::InterestRate</label>
        <link refid="classQuantLib_1_1InterestRate"/>
        <childnode refid="9" relation="usage">
          <edgelabel>dc_</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::LazyObject</label>
        <link refid="classQuantLib_1_1LazyObject"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="classQuantLib_1_1Observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="classQuantLib_1_1Observer"/>
      </node>
      <node id="3">
        <label>QuantLib::TermStructure</label>
        <link refid="classQuantLib_1_1TermStructure"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>calendar_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>referenceDate_</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>dayCounter_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::YieldTermStructure</label>
        <link refid="classQuantLib_1_1YieldTermStructure"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>latestReference_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/termstructures/yield/flatforward.hpp" line="36" column="5" bodyfile="ql/termstructures/yield/flatforward.hpp" bodystart="37" bodyend="93"/>
    <listofallmembers>
      <member refid="classQuantLib_1_1Extrapolator_1ab3936a9b5b5c163d3e511437c16c1d9e" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>allowsExtrapolation</name></member>
      <member refid="classQuantLib_1_1LazyObject_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>alwaysForward_</name></member>
      <member refid="classQuantLib_1_1LazyObject_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>alwaysForwardNotifications</name></member>
      <member refid="classQuantLib_1_1LazyObject_1a5244c7f83592375a0ea9048296435fd1" prot="protected" virt="virtual"><scope>QuantLib::FlatForward</scope><name>calculate</name></member>
      <member refid="classQuantLib_1_1LazyObject_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>calculated_</name></member>
      <member refid="classQuantLib_1_1TermStructure_1ac4ea5cbce495c9a47a44eeaedf7a9d45" prot="public" virt="virtual"><scope>QuantLib::FlatForward</scope><name>calendar</name></member>
      <member refid="classQuantLib_1_1TermStructure_1a0a09e3fa8cdfbc9aa9685da0c35ccb90" prot="protected" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>calendar_</name></member>
      <member refid="classQuantLib_1_1TermStructure_1aa7297742ffbeeb0c7611f90a0f7d15bf" prot="protected" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>checkRange</name></member>
      <member refid="classQuantLib_1_1TermStructure_1a4d246bcb13b7518a75088bf7cf01ea75" prot="protected" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>checkRange</name></member>
      <member refid="classQuantLib_1_1FlatForward_1a2b19516f938f79bd7e6b50ec08704c96" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>compounding</name></member>
      <member refid="classQuantLib_1_1FlatForward_1a1a02ef57fc0a463b8484e9c6243cf808" prot="private" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>compounding_</name></member>
      <member refid="classQuantLib_1_1FlatForward_1a53c6c756a31a6b39a14de67986515b44" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>compoundingFrequency</name></member>
      <member refid="classQuantLib_1_1TermStructure_1ac03e725e4e0685b209caa626b00924ca" prot="public" virt="virtual"><scope>QuantLib::FlatForward</scope><name>dayCounter</name></member>
      <member refid="classQuantLib_1_1TermStructure_1ab7dbb0cc1b2a4c5b5ee840b4822dc55e" prot="private" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>dayCounter_</name></member>
      <member refid="classQuantLib_1_1Observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::FlatForward</scope><name>deepUpdate</name></member>
      <member refid="classQuantLib_1_1Extrapolator_1a6af69387d5cae0fe84d6a0c858406218" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>disableExtrapolation</name></member>
      <member refid="classQuantLib_1_1YieldTermStructure_1ae7ebb1a52720c8275b40752e505834b8" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>discount</name></member>
      <member refid="classQuantLib_1_1YieldTermStructure_1a0f98239d6aa04b7bb905da1f36e93f05" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>discount</name></member>
      <member refid="classQuantLib_1_1FlatForward_1a24c25d14869a0361904afa54cbaca7e6" prot="private" virt="virtual"><scope>QuantLib::FlatForward</scope><name>discountImpl</name></member>
      <member refid="classQuantLib_1_1Extrapolator_1a5f7b5650a44d6c63095bc739470c8bfb" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>enableExtrapolation</name></member>
      <member refid="classQuantLib_1_1Extrapolator_1a9a45b840a003c411ad1c2b71578e329a" prot="private" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>extrapolate_</name></member>
      <member refid="classQuantLib_1_1Extrapolator_1af1c3adaccdfaf07d3d07edaa234444f7" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>Extrapolator</name></member>
      <member refid="classQuantLib_1_1FlatForward_1a4cdced99008d3f2d714f51b10cfbca41" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>FlatForward</name></member>
      <member refid="classQuantLib_1_1FlatForward_1ad3d1b4ac8ff4f09ddf62b5397256847f" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>FlatForward</name></member>
      <member refid="classQuantLib_1_1FlatForward_1a08d48e3ed1b8ab0ec45449ec113750e4" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>FlatForward</name></member>
      <member refid="classQuantLib_1_1FlatForward_1afe5d3bce3e154b99d1a1b61a45f5f00f" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>FlatForward</name></member>
      <member refid="classQuantLib_1_1FlatForward_1a1e271fc1ed79b0efc966f94efaa2984c" prot="private" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>forward_</name></member>
      <member refid="classQuantLib_1_1LazyObject_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="classQuantLib_1_1YieldTermStructure_1a1e1ae6ff3486bb692f6a27a00c88deb0" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>forwardRate</name></member>
      <member refid="classQuantLib_1_1YieldTermStructure_1a54d4939c63eae4aa5c96cdc50a6384b5" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>forwardRate</name></member>
      <member refid="classQuantLib_1_1YieldTermStructure_1a5d109bba7336c36026652266be7abd0c" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>forwardRate</name></member>
      <member refid="classQuantLib_1_1LazyObject_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>freeze</name></member>
      <member refid="classQuantLib_1_1FlatForward_1abe72137786ddecea65c7aacf11995908" prot="private" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>frequency_</name></member>
      <member refid="classQuantLib_1_1LazyObject_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>frozen_</name></member>
      <member refid="classQuantLib_1_1LazyObject_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>isCalculated</name></member>
      <member refid="classQuantLib_1_1Observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FlatForward</scope><name>iterator</name></member>
      <member refid="classQuantLib_1_1YieldTermStructure_1a1121c8d1e731832496182bda33ba8d45" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>jumpDates</name></member>
      <member refid="classQuantLib_1_1YieldTermStructure_1abb0dd012c9c0fb492ad683ec69e93a40" prot="private" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>jumpDates_</name></member>
      <member refid="classQuantLib_1_1YieldTermStructure_1a695c29e6164bddd6cc0db183dd1e9649" prot="private" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>jumps_</name></member>
      <member refid="classQuantLib_1_1YieldTermStructure_1ae34149edb2c2f604b0f1469b2268e517" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>jumpTimes</name></member>
      <member refid="classQuantLib_1_1YieldTermStructure_1a4fdef8c6b55317cd8604ecf9115d0a64" prot="private" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>jumpTimes_</name></member>
      <member refid="classQuantLib_1_1YieldTermStructure_1ac090b5d7653dd28dfae598627f36aff9" prot="private" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>latestReference_</name></member>
      <member refid="classQuantLib_1_1LazyObject_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>LazyObject</name></member>
      <member refid="classQuantLib_1_1FlatForward_1aea8ce266e8f72a8a303d45a6b2228014" prot="public" virt="virtual"><scope>QuantLib::FlatForward</scope><name>maxDate</name></member>
      <member refid="classQuantLib_1_1TermStructure_1a2f820c32e198e1046d97ca3dd9a807c5" prot="public" virt="virtual"><scope>QuantLib::FlatForward</scope><name>maxTime</name></member>
      <member refid="classQuantLib_1_1TermStructure_1a8319e5c2c37b09a825d61210c9cb8e2a" prot="protected" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>moving_</name></member>
      <member refid="classQuantLib_1_1YieldTermStructure_1ac7ae5be010c465ff793d9508711c3559" prot="private" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>nJumps_</name></member>
      <member refid="classQuantLib_1_1Observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>notifyObservers</name></member>
      <member refid="classQuantLib_1_1Observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>Observable</name></member>
      <member refid="classQuantLib_1_1Observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>Observable</name></member>
      <member refid="classQuantLib_1_1Observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>Observable</name></member>
      <member refid="classQuantLib_1_1Observer_1a85e3adb273b706155ea7e8bd98ee460b" prot="private" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>observables_</name></member>
      <member refid="classQuantLib_1_1Observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FlatForward</scope><name>Observer</name></member>
      <member refid="classQuantLib_1_1Observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FlatForward</scope><name>Observer</name></member>
      <member refid="classQuantLib_1_1Observable_1a4da6017619203dcb570d5f4174f0beea" prot="private" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>observers_</name></member>
      <member refid="classQuantLib_1_1Observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FlatForward</scope><name>operator=</name></member>
      <member refid="classQuantLib_1_1Observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::FlatForward</scope><name>operator=</name></member>
      <member refid="classQuantLib_1_1Observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::FlatForward</scope><name>operator=</name></member>
      <member refid="classQuantLib_1_1FlatForward_1a3c2ab008747a3011b2d2f19ba2104fc3" prot="private" virt="virtual"><scope>QuantLib::FlatForward</scope><name>performCalculations</name></member>
      <member refid="classQuantLib_1_1FlatForward_1ac7c790bee048748b202994b86fc3d9b2" prot="private" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>rate_</name></member>
      <member refid="classQuantLib_1_1LazyObject_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>recalculate</name></member>
      <member refid="classQuantLib_1_1TermStructure_1accbf3d4af41db0333d456eb5616c4e1e" prot="public" virt="virtual"><scope>QuantLib::FlatForward</scope><name>referenceDate</name></member>
      <member refid="classQuantLib_1_1TermStructure_1ae710961574841a314aaee208cd8fd9d2" prot="private" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>referenceDate_</name></member>
      <member refid="classQuantLib_1_1Observable_1a1eb87a03e7e1fd43377bce32e0c21bce" prot="private" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>registerObserver</name></member>
      <member refid="classQuantLib_1_1Observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>registerWith</name></member>
      <member refid="classQuantLib_1_1Observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>registerWithObservables</name></member>
      <member refid="classQuantLib_1_1Observer_1a3dcd7d8542d1142f29da8326919e863f" prot="private" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FlatForward</scope><name>set_type</name></member>
      <member refid="classQuantLib_1_1YieldTermStructure_1ae2c9e322b272582ee6456fb7e83c0066" prot="private" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>setJumps</name></member>
      <member refid="classQuantLib_1_1TermStructure_1abeb79eefda70a9414f206ca9e70ced0f" prot="public" virt="virtual"><scope>QuantLib::FlatForward</scope><name>settlementDays</name></member>
      <member refid="classQuantLib_1_1TermStructure_1aaf8d92d98e6e398e43eb57cd29248ee9" prot="private" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>settlementDays_</name></member>
      <member refid="classQuantLib_1_1TermStructure_1ac8365997e6d41134b4e0998fe6b4e949" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>TermStructure</name></member>
      <member refid="classQuantLib_1_1TermStructure_1a95764a49e0368b653eadbe619d9ef334" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>TermStructure</name></member>
      <member refid="classQuantLib_1_1TermStructure_1aab73d2acafdc8fbdf9336e7084bd88a1" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>TermStructure</name></member>
      <member refid="classQuantLib_1_1TermStructure_1ac8da61eb0f06ae07a35e8e4bbe7146b0" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>timeFromReference</name></member>
      <member refid="classQuantLib_1_1LazyObject_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>unfreeze</name></member>
      <member refid="classQuantLib_1_1Observable_1abd81ef8b87594aa6f9d2a5bd5de3e628" prot="private" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>unregisterObserver</name></member>
      <member refid="classQuantLib_1_1Observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>unregisterWith</name></member>
      <member refid="classQuantLib_1_1Observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>unregisterWithAll</name></member>
      <member refid="classQuantLib_1_1FlatForward_1ad0118ca51b2656c16548de488db9ddd7" prot="public" virt="virtual"><scope>QuantLib::FlatForward</scope><name>update</name></member>
      <member refid="classQuantLib_1_1TermStructure_1a2fcf1c78e57786ad5c123f52dbf619e8" prot="protected" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>updated_</name></member>
      <member refid="classQuantLib_1_1LazyObject_1ae2c605a452787b38d6a64cf20395a075" prot="private" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>updating_</name></member>
      <member refid="classQuantLib_1_1YieldTermStructure_1a2f77f6a92f1e48450c801debadd6c5d1" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>YieldTermStructure</name></member>
      <member refid="classQuantLib_1_1YieldTermStructure_1a1512e59ec18b51681936cd84c1381b28" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>YieldTermStructure</name></member>
      <member refid="classQuantLib_1_1YieldTermStructure_1a1c4ed273e8b8b8631139fc784edb399c" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>YieldTermStructure</name></member>
      <member refid="classQuantLib_1_1YieldTermStructure_1a2c3ff5cd67f7a14b9d917fbe6491c096" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>zeroRate</name></member>
      <member refid="classQuantLib_1_1YieldTermStructure_1a081055025072ce474e54ba29a250c786" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>zeroRate</name></member>
      <member refid="classQuantLib_1_1Extrapolator_1af0ca0156436ffbce159183198eb27e2e" prot="public" virt="virtual"><scope>QuantLib::FlatForward</scope><name>~Extrapolator</name></member>
      <member refid="classQuantLib_1_1LazyObject_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>~LazyObject</name></member>
      <member refid="classQuantLib_1_1Observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::FlatForward</scope><name>~Observable</name></member>
      <member refid="classQuantLib_1_1Observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::FlatForward</scope><name>~Observer</name></member>
      <member refid="classQuantLib_1_1TermStructure_1ad202ddcc14fc4a6c16686d6164d7b36c" prot="public" virt="non-virtual"><scope>QuantLib::FlatForward</scope><name>~TermStructure</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
