<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classQuantLib_1_1BiCGstab" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::BiCGstab</compoundname>
    <includes refid="bicgstab_8hpp" local="no">bicgstab.hpp</includes>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classQuantLib_1_1BiCGstab_1a086b6017f4e2499a6fa578e82a4c67cc" prot="public" static="no">
        <type>std::function&lt; <ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref>(const <ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref> &amp;)&gt;</type>
        <definition>typedef std::function&lt;Array(const Array&amp;)&gt; QuantLib::BiCGstab::MatrixMult</definition>
        <argsstring></argsstring>
        <name>MatrixMult</name>
        <qualifiedname>QuantLib::BiCGstab::MatrixMult</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/bicgstab.hpp" line="41" column="31" bodyfile="ql/math/matrixutilities/bicgstab.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classQuantLib_1_1BiCGstab_1a54549db906a4bd484b7d7033e2592937" prot="protected" static="no" mutable="no">
        <type>const <ref refid="classQuantLib_1_1BiCGstab_1a086b6017f4e2499a6fa578e82a4c67cc" kindref="member">MatrixMult</ref></type>
        <definition>const MatrixMult QuantLib::BiCGstab::A_</definition>
        <argsstring></argsstring>
        <name>A_</name>
        <qualifiedname>QuantLib::BiCGstab::A_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/bicgstab.hpp" line="48" column="26" bodyfile="ql/math/matrixutilities/bicgstab.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1BiCGstab_1a75635b95b468ec16c0441d57675c4237" prot="protected" static="no" mutable="no">
        <type>const <ref refid="classQuantLib_1_1BiCGstab_1a086b6017f4e2499a6fa578e82a4c67cc" kindref="member">MatrixMult</ref></type>
        <definition>const MatrixMult QuantLib::BiCGstab::M_</definition>
        <argsstring></argsstring>
        <name>M_</name>
        <qualifiedname>QuantLib::BiCGstab::M_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/bicgstab.hpp" line="48" column="29" bodyfile="ql/math/matrixutilities/bicgstab.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1BiCGstab_1a1e74926255ee49df51a23b39341d5c2b" prot="protected" static="no" mutable="no">
        <type>const <ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::BiCGstab::maxIter_</definition>
        <argsstring></argsstring>
        <name>maxIter_</name>
        <qualifiedname>QuantLib::BiCGstab::maxIter_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/bicgstab.hpp" line="49" column="20" bodyfile="ql/math/matrixutilities/bicgstab.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1BiCGstab_1a9e1c9b70704f489e672f089c6d449991" prot="protected" static="no" mutable="no">
        <type>const <ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::BiCGstab::relTol_</definition>
        <argsstring></argsstring>
        <name>relTol_</name>
        <qualifiedname>QuantLib::BiCGstab::relTol_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/bicgstab.hpp" line="50" column="20" bodyfile="ql/math/matrixutilities/bicgstab.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classQuantLib_1_1BiCGstab_1a42aeda54fa8da6e7210562c6213bf81a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::BiCGstab::BiCGstab</definition>
        <argsstring>(MatrixMult A, Size maxIter, Real relTol, MatrixMult preConditioner=MatrixMult())</argsstring>
        <name>BiCGstab</name>
        <qualifiedname>QuantLib::BiCGstab::BiCGstab</qualifiedname>
        <param>
          <type><ref refid="classQuantLib_1_1BiCGstab_1a086b6017f4e2499a6fa578e82a4c67cc" kindref="member">MatrixMult</ref></type>
          <declname>A</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxIter</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>relTol</declname>
        </param>
        <param>
          <type><ref refid="classQuantLib_1_1BiCGstab_1a086b6017f4e2499a6fa578e82a4c67cc" kindref="member">MatrixMult</ref></type>
          <declname>preConditioner</declname>
          <defval><ref refid="classQuantLib_1_1BiCGstab_1a086b6017f4e2499a6fa578e82a4c67cc" kindref="member">MatrixMult</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/bicgstab.hpp" line="43" column="9" bodyfile="ql/math/matrixutilities/bicgstab.cpp" bodystart="31" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1BiCGstab_1a4ef0e12a8c55ee62d644828f0e28658c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structQuantLib_1_1BiCGStabResult" kindref="compound">BiCGStabResult</ref></type>
        <definition>BiCGStabResult QuantLib::BiCGstab::solve</definition>
        <argsstring>(const Array &amp;b, const Array &amp;x0=Array()) const</argsstring>
        <name>solve</name>
        <qualifiedname>QuantLib::BiCGstab::solve</qualifiedname>
        <param>
          <type>const <ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref> &amp;</type>
          <declname>x0</declname>
          <defval><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/bicgstab.hpp" line="45" column="24" bodyfile="ql/math/matrixutilities/bicgstab.cpp" bodystart="37" bodyend="92"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/math/matrixutilities/bicgstab.hpp" line="39" column="5" bodyfile="ql/math/matrixutilities/bicgstab.hpp" bodystart="39" bodyend="51"/>
    <listofallmembers>
      <member refid="classQuantLib_1_1BiCGstab_1a54549db906a4bd484b7d7033e2592937" prot="protected" virt="non-virtual"><scope>QuantLib::BiCGstab</scope><name>A_</name></member>
      <member refid="classQuantLib_1_1BiCGstab_1a42aeda54fa8da6e7210562c6213bf81a" prot="public" virt="non-virtual"><scope>QuantLib::BiCGstab</scope><name>BiCGstab</name></member>
      <member refid="classQuantLib_1_1BiCGstab_1a75635b95b468ec16c0441d57675c4237" prot="protected" virt="non-virtual"><scope>QuantLib::BiCGstab</scope><name>M_</name></member>
      <member refid="classQuantLib_1_1BiCGstab_1a086b6017f4e2499a6fa578e82a4c67cc" prot="public" virt="non-virtual"><scope>QuantLib::BiCGstab</scope><name>MatrixMult</name></member>
      <member refid="classQuantLib_1_1BiCGstab_1a1e74926255ee49df51a23b39341d5c2b" prot="protected" virt="non-virtual"><scope>QuantLib::BiCGstab</scope><name>maxIter_</name></member>
      <member refid="classQuantLib_1_1BiCGstab_1a9e1c9b70704f489e672f089c6d449991" prot="protected" virt="non-virtual"><scope>QuantLib::BiCGstab</scope><name>relTol_</name></member>
      <member refid="classQuantLib_1_1BiCGstab_1a4ef0e12a8c55ee62d644828f0e28658c" prot="public" virt="non-virtual"><scope>QuantLib::BiCGstab</scope><name>solve</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
