<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classQuantLib_1_1TimeGrid" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::TimeGrid</compoundname>
    <includes refid="timegrid_8hpp" local="no">timegrid.hpp</includes>
    <sectiondef kind="user-defined">
      <header>sequence interface</header>
      <memberdef kind="typedef" id="classQuantLib_1_1TimeGrid_1ab8bf260154547bec92ccb8a5decb4777" prot="public" static="no">
        <type>std::vector&lt; <ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;::const_iterator</type>
        <definition>typedef std::vector&lt;Time&gt;::const_iterator QuantLib::TimeGrid::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <qualifiedname>QuantLib::TimeGrid::const_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/timegrid.hpp" line="163" column="46" bodyfile="ql/timegrid.hpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classQuantLib_1_1TimeGrid_1a611645e046baaac99d9982af249c0cbd" prot="public" static="no">
        <type>std::vector&lt; <ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;::const_reverse_iterator</type>
        <definition>typedef std::vector&lt;Time&gt;::const_reverse_iterator QuantLib::TimeGrid::const_reverse_iterator</definition>
        <argsstring></argsstring>
        <name>const_reverse_iterator</name>
        <qualifiedname>QuantLib::TimeGrid::const_reverse_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/timegrid.hpp" line="165" column="43" bodyfile="ql/timegrid.hpp" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1TimeGrid_1a98e857470faa1cdb20a9aa9e284225ab" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
        <definition>std::vector&lt;Time&gt; QuantLib::TimeGrid::times_</definition>
        <argsstring></argsstring>
        <name>times_</name>
        <qualifiedname>QuantLib::TimeGrid::times_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/timegrid.hpp" line="179" column="21" bodyfile="ql/timegrid.hpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1TimeGrid_1a1cd90b8dfe10dbee3874d31bfb62ca59" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
        <definition>std::vector&lt;Time&gt; QuantLib::TimeGrid::dt_</definition>
        <argsstring></argsstring>
        <name>dt_</name>
        <qualifiedname>QuantLib::TimeGrid::dt_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/timegrid.hpp" line="180" column="21" bodyfile="ql/timegrid.hpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
        <definition>std::vector&lt;Time&gt; QuantLib::TimeGrid::mandatoryTimes_</definition>
        <argsstring></argsstring>
        <name>mandatoryTimes_</name>
        <qualifiedname>QuantLib::TimeGrid::mandatoryTimes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/timegrid.hpp" line="181" column="21" bodyfile="ql/timegrid.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TimeGrid_1ab5bbb09fa2033be7b3abde674c12384a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::TimeGrid::operator[]</definition>
        <argsstring>(Size i) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>QuantLib::TimeGrid::operator[]</qualifiedname>
        <param>
          <type><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/timegrid.hpp" line="167" column="14" bodyfile="ql/timegrid.hpp" bodystart="167" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TimeGrid_1acc2f018f12e4462f1b7ee27ea1301ea4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::TimeGrid::at</definition>
        <argsstring>(Size i) const</argsstring>
        <name>at</name>
        <qualifiedname>QuantLib::TimeGrid::at</qualifiedname>
        <param>
          <type><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/timegrid.hpp" line="168" column="14" bodyfile="ql/timegrid.hpp" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TimeGrid_1a8a43e86086987f90809dffda7a6405b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::TimeGrid::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>QuantLib::TimeGrid::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/timegrid.hpp" line="169" column="14" bodyfile="ql/timegrid.hpp" bodystart="169" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TimeGrid_1ae2410ba8a3cef87a5a3c91716a1dfcea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::TimeGrid::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>QuantLib::TimeGrid::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/timegrid.hpp" line="170" column="14" bodyfile="ql/timegrid.hpp" bodystart="170" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TimeGrid_1a89303535849d55a1ee593d8cf984881c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQuantLib_1_1TimeGrid_1ab8bf260154547bec92ccb8a5decb4777" kindref="member">const_iterator</ref></type>
        <definition>const_iterator QuantLib::TimeGrid::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <qualifiedname>QuantLib::TimeGrid::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/timegrid.hpp" line="171" column="24" bodyfile="ql/timegrid.hpp" bodystart="171" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TimeGrid_1a3a0f0e49f49a35822bede8b716781bf9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQuantLib_1_1TimeGrid_1ab8bf260154547bec92ccb8a5decb4777" kindref="member">const_iterator</ref></type>
        <definition>const_iterator QuantLib::TimeGrid::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <qualifiedname>QuantLib::TimeGrid::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/timegrid.hpp" line="172" column="24" bodyfile="ql/timegrid.hpp" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TimeGrid_1a8b0c00bfa719704b98879f1f1ab85442" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQuantLib_1_1TimeGrid_1a611645e046baaac99d9982af249c0cbd" kindref="member">const_reverse_iterator</ref></type>
        <definition>const_reverse_iterator QuantLib::TimeGrid::rbegin</definition>
        <argsstring>() const</argsstring>
        <name>rbegin</name>
        <qualifiedname>QuantLib::TimeGrid::rbegin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/timegrid.hpp" line="173" column="32" bodyfile="ql/timegrid.hpp" bodystart="173" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TimeGrid_1ab122216ebd6971e2903ff08be851bac7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQuantLib_1_1TimeGrid_1a611645e046baaac99d9982af249c0cbd" kindref="member">const_reverse_iterator</ref></type>
        <definition>const_reverse_iterator QuantLib::TimeGrid::rend</definition>
        <argsstring>() const</argsstring>
        <name>rend</name>
        <qualifiedname>QuantLib::TimeGrid::rend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/timegrid.hpp" line="174" column="32" bodyfile="ql/timegrid.hpp" bodystart="174" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TimeGrid_1a73af48730fb1ce06375b002602e47fb5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::TimeGrid::front</definition>
        <argsstring>() const</argsstring>
        <name>front</name>
        <qualifiedname>QuantLib::TimeGrid::front</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/timegrid.hpp" line="175" column="14" bodyfile="ql/timegrid.hpp" bodystart="175" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TimeGrid_1a9789a98d3d3a08645fd99e48a1d563d1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::TimeGrid::back</definition>
        <argsstring>() const</argsstring>
        <name>back</name>
        <qualifiedname>QuantLib::TimeGrid::back</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/timegrid.hpp" line="176" column="14" bodyfile="ql/timegrid.hpp" bodystart="176" bodyend="176"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Constructors</header>
      <memberdef kind="function" id="classQuantLib_1_1TimeGrid_1a66bd9108eb08da6249cc443fd02fcdee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::TimeGrid::TimeGrid</definition>
        <argsstring>()=default</argsstring>
        <name>TimeGrid</name>
        <qualifiedname>QuantLib::TimeGrid::TimeGrid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/timegrid.hpp" line="47" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TimeGrid_1a44520a9852a1511f45d66f4255887d14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::TimeGrid::TimeGrid</definition>
        <argsstring>(Time end, Size steps)</argsstring>
        <name>TimeGrid</name>
        <qualifiedname>QuantLib::TimeGrid::TimeGrid</qualifiedname>
        <param>
          <type><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>steps</declname>
        </param>
        <briefdescription>
<para>Regularly spaced time-grid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/timegrid.hpp" line="49" column="9" bodyfile="ql/timegrid.cpp" bodystart="26" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TimeGrid_1ad08acee76ee9ad24d19cbaabc3760df5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Iterator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>QuantLib::TimeGrid::TimeGrid</definition>
        <argsstring>(Iterator begin, Iterator end)</argsstring>
        <name>TimeGrid</name>
        <qualifiedname>QuantLib::TimeGrid::TimeGrid</qualifiedname>
        <param>
          <type>Iterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>Iterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Time grid with mandatory time points. </para>
        </briefdescription>
        <detaileddescription>
<para>Mandatory points are guaranteed to belong to the grid. No additional points are added. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/timegrid.hpp" line="55" column="9" bodyfile="ql/timegrid.hpp" bodystart="55" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TimeGrid_1a7f5715c4aea6c0a7319961a08297eb57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Iterator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>QuantLib::TimeGrid::TimeGrid</definition>
        <argsstring>(Iterator begin, Iterator end, Size steps)</argsstring>
        <name>TimeGrid</name>
        <qualifiedname>QuantLib::TimeGrid::TimeGrid</qualifiedname>
        <param>
          <type>Iterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>Iterator</type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>steps</declname>
        </param>
        <briefdescription>
<para>Time grid with mandatory time points. </para>
        </briefdescription>
        <detaileddescription>
<para>Mandatory points are guaranteed to belong to the grid. Additional points are then added with regular spacing between pairs of mandatory times in order to reach the desired number of steps. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/timegrid.hpp" line="86" column="9" bodyfile="ql/timegrid.hpp" bodystart="86" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TimeGrid_1a1b7889ee766b7f7d76e1761f53e421c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::TimeGrid::TimeGrid</definition>
        <argsstring>(std::initializer_list&lt; Time &gt; times)</argsstring>
        <name>TimeGrid</name>
        <qualifiedname>QuantLib::TimeGrid::TimeGrid</qualifiedname>
        <param>
          <type>std::initializer_list&lt; <ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
          <declname>times</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/timegrid.hpp" line="141" column="9" bodyfile="ql/timegrid.hpp" bodystart="141" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TimeGrid_1a5be3a69959ac0cd5483709a85cf94c4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::TimeGrid::TimeGrid</definition>
        <argsstring>(std::initializer_list&lt; Time &gt; times, Size steps)</argsstring>
        <name>TimeGrid</name>
        <qualifiedname>QuantLib::TimeGrid::TimeGrid</qualifiedname>
        <param>
          <type>std::initializer_list&lt; <ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
          <declname>times</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/timegrid.hpp" line="143" column="9" bodyfile="ql/timegrid.hpp" bodystart="143" bodyend="144"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Time grid interface</header>
      <memberdef kind="function" id="classQuantLib_1_1TimeGrid_1ac95c7456057a0627560e9c9a7548939e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::TimeGrid::index</definition>
        <argsstring>(Time t) const</argsstring>
        <name>index</name>
        <qualifiedname>QuantLib::TimeGrid::index</qualifiedname>
        <param>
          <type><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>returns the index i such that grid[i] = t </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/timegrid.hpp" line="149" column="14" bodyfile="ql/timegrid.cpp" bodystart="43" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TimeGrid_1a9f6ed6633abef8fb220c07e97a94c337" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::TimeGrid::closestIndex</definition>
        <argsstring>(Time t) const</argsstring>
        <name>closestIndex</name>
        <qualifiedname>QuantLib::TimeGrid::closestIndex</qualifiedname>
        <param>
          <type><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>returns the index i such that grid[i] is closest to t </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/timegrid.hpp" line="151" column="14" bodyfile="ql/timegrid.cpp" bodystart="80" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TimeGrid_1a14155bfd9f9355e7a1c77e207ed71bd7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::TimeGrid::closestTime</definition>
        <argsstring>(Time t) const</argsstring>
        <name>closestTime</name>
        <qualifiedname>QuantLib::TimeGrid::closestTime</qualifiedname>
        <param>
          <type><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>returns the time on the grid closest to the given t </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/timegrid.hpp" line="153" column="14" bodyfile="ql/timegrid.hpp" bodystart="153" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TimeGrid_1a85e68f438095e3400ff76a875a788a5c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Time &gt; &amp; QuantLib::TimeGrid::mandatoryTimes</definition>
        <argsstring>() const</argsstring>
        <name>mandatoryTimes</name>
        <qualifiedname>QuantLib::TimeGrid::mandatoryTimes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/timegrid.hpp" line="156" column="27" bodyfile="ql/timegrid.hpp" bodystart="156" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TimeGrid_1a449ce5eb258510a4f936d9ebc4088f6a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::TimeGrid::dt</definition>
        <argsstring>(Size i) const</argsstring>
        <name>dt</name>
        <qualifiedname>QuantLib::TimeGrid::dt</qualifiedname>
        <param>
          <type><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/timegrid.hpp" line="159" column="14" bodyfile="ql/timegrid.hpp" bodystart="159" bodyend="159"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>time grid class </para>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="todo_1_todo000010"><xreftitle>Todo</xreftitle><xrefdescription><para>what was the rationale for limiting the grid to positive times? Investigate and see whether we can use it for negative ones as well. </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <location file="ql/timegrid.hpp" line="43" column="5" bodyfile="ql/timegrid.hpp" bodystart="43" bodyend="182"/>
    <listofallmembers>
      <member refid="classQuantLib_1_1TimeGrid_1acc2f018f12e4462f1b7ee27ea1301ea4" prot="public" virt="non-virtual"><scope>QuantLib::TimeGrid</scope><name>at</name></member>
      <member refid="classQuantLib_1_1TimeGrid_1a9789a98d3d3a08645fd99e48a1d563d1" prot="public" virt="non-virtual"><scope>QuantLib::TimeGrid</scope><name>back</name></member>
      <member refid="classQuantLib_1_1TimeGrid_1a89303535849d55a1ee593d8cf984881c" prot="public" virt="non-virtual"><scope>QuantLib::TimeGrid</scope><name>begin</name></member>
      <member refid="classQuantLib_1_1TimeGrid_1a9f6ed6633abef8fb220c07e97a94c337" prot="public" virt="non-virtual"><scope>QuantLib::TimeGrid</scope><name>closestIndex</name></member>
      <member refid="classQuantLib_1_1TimeGrid_1a14155bfd9f9355e7a1c77e207ed71bd7" prot="public" virt="non-virtual"><scope>QuantLib::TimeGrid</scope><name>closestTime</name></member>
      <member refid="classQuantLib_1_1TimeGrid_1ab8bf260154547bec92ccb8a5decb4777" prot="public" virt="non-virtual"><scope>QuantLib::TimeGrid</scope><name>const_iterator</name></member>
      <member refid="classQuantLib_1_1TimeGrid_1a611645e046baaac99d9982af249c0cbd" prot="public" virt="non-virtual"><scope>QuantLib::TimeGrid</scope><name>const_reverse_iterator</name></member>
      <member refid="classQuantLib_1_1TimeGrid_1a449ce5eb258510a4f936d9ebc4088f6a" prot="public" virt="non-virtual"><scope>QuantLib::TimeGrid</scope><name>dt</name></member>
      <member refid="classQuantLib_1_1TimeGrid_1a1cd90b8dfe10dbee3874d31bfb62ca59" prot="private" virt="non-virtual"><scope>QuantLib::TimeGrid</scope><name>dt_</name></member>
      <member refid="classQuantLib_1_1TimeGrid_1ae2410ba8a3cef87a5a3c91716a1dfcea" prot="public" virt="non-virtual"><scope>QuantLib::TimeGrid</scope><name>empty</name></member>
      <member refid="classQuantLib_1_1TimeGrid_1a3a0f0e49f49a35822bede8b716781bf9" prot="public" virt="non-virtual"><scope>QuantLib::TimeGrid</scope><name>end</name></member>
      <member refid="classQuantLib_1_1TimeGrid_1a73af48730fb1ce06375b002602e47fb5" prot="public" virt="non-virtual"><scope>QuantLib::TimeGrid</scope><name>front</name></member>
      <member refid="classQuantLib_1_1TimeGrid_1ac95c7456057a0627560e9c9a7548939e" prot="public" virt="non-virtual"><scope>QuantLib::TimeGrid</scope><name>index</name></member>
      <member refid="classQuantLib_1_1TimeGrid_1a85e68f438095e3400ff76a875a788a5c" prot="public" virt="non-virtual"><scope>QuantLib::TimeGrid</scope><name>mandatoryTimes</name></member>
      <member refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" prot="private" virt="non-virtual"><scope>QuantLib::TimeGrid</scope><name>mandatoryTimes_</name></member>
      <member refid="classQuantLib_1_1TimeGrid_1ab5bbb09fa2033be7b3abde674c12384a" prot="public" virt="non-virtual"><scope>QuantLib::TimeGrid</scope><name>operator[]</name></member>
      <member refid="classQuantLib_1_1TimeGrid_1a8b0c00bfa719704b98879f1f1ab85442" prot="public" virt="non-virtual"><scope>QuantLib::TimeGrid</scope><name>rbegin</name></member>
      <member refid="classQuantLib_1_1TimeGrid_1ab122216ebd6971e2903ff08be851bac7" prot="public" virt="non-virtual"><scope>QuantLib::TimeGrid</scope><name>rend</name></member>
      <member refid="classQuantLib_1_1TimeGrid_1a8a43e86086987f90809dffda7a6405b9" prot="public" virt="non-virtual"><scope>QuantLib::TimeGrid</scope><name>size</name></member>
      <member refid="classQuantLib_1_1TimeGrid_1a66bd9108eb08da6249cc443fd02fcdee" prot="public" virt="non-virtual"><scope>QuantLib::TimeGrid</scope><name>TimeGrid</name></member>
      <member refid="classQuantLib_1_1TimeGrid_1a44520a9852a1511f45d66f4255887d14" prot="public" virt="non-virtual"><scope>QuantLib::TimeGrid</scope><name>TimeGrid</name></member>
      <member refid="classQuantLib_1_1TimeGrid_1ad08acee76ee9ad24d19cbaabc3760df5" prot="public" virt="non-virtual"><scope>QuantLib::TimeGrid</scope><name>TimeGrid</name></member>
      <member refid="classQuantLib_1_1TimeGrid_1a7f5715c4aea6c0a7319961a08297eb57" prot="public" virt="non-virtual"><scope>QuantLib::TimeGrid</scope><name>TimeGrid</name></member>
      <member refid="classQuantLib_1_1TimeGrid_1a1b7889ee766b7f7d76e1761f53e421c9" prot="public" virt="non-virtual"><scope>QuantLib::TimeGrid</scope><name>TimeGrid</name></member>
      <member refid="classQuantLib_1_1TimeGrid_1a5be3a69959ac0cd5483709a85cf94c4a" prot="public" virt="non-virtual"><scope>QuantLib::TimeGrid</scope><name>TimeGrid</name></member>
      <member refid="classQuantLib_1_1TimeGrid_1a98e857470faa1cdb20a9aa9e284225ab" prot="private" virt="non-virtual"><scope>QuantLib::TimeGrid</scope><name>times_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
