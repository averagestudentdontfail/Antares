<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classQuantLib_1_1CuriouslyRecurringTemplate" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::CuriouslyRecurringTemplate</compoundname>
    <derivedcompoundref refid="classQuantLib_1_1Solver1D" prot="public" virt="non-virtual">QuantLib::Solver1D&lt; Brent &gt;</derivedcompoundref>
    <derivedcompoundref refid="classQuantLib_1_1Solver1D" prot="public" virt="non-virtual">QuantLib::Solver1D&lt; Newton &gt;</derivedcompoundref>
    <derivedcompoundref refid="classQuantLib_1_1Solver1D" prot="public" virt="non-virtual">QuantLib::Solver1D&lt; NewtonSafe &gt;</derivedcompoundref>
    <derivedcompoundref refid="classQuantLib_1_1Solver1D" prot="public" virt="non-virtual">QuantLib::Solver1D&lt; Ridder &gt;</derivedcompoundref>
    <derivedcompoundref refid="classQuantLib_1_1Solver1D" prot="public" virt="non-virtual">QuantLib::Solver1D&lt; Impl &gt;</derivedcompoundref>
    <includes refid="curiouslyrecurring_8hpp" local="no">curiouslyrecurring.hpp</includes>
    <templateparamlist>
      <param>
        <type>class Impl</type>
      </param>
    </templateparamlist>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="classQuantLib_1_1CuriouslyRecurringTemplate_1ac51e69d7c3e616686e8777fcabebf954" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CuriouslyRecurringTemplate&lt; Impl &gt;::CuriouslyRecurringTemplate</definition>
        <argsstring>()=default</argsstring>
        <name>CuriouslyRecurringTemplate</name>
        <qualifiedname>QuantLib::CuriouslyRecurringTemplate::CuriouslyRecurringTemplate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/patterns/curiouslyrecurring.hpp" line="42" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1CuriouslyRecurringTemplate_1ae22b4353d3c05a5aad5f5b8769392b05" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CuriouslyRecurringTemplate&lt; Impl &gt;::~CuriouslyRecurringTemplate</definition>
        <argsstring>()=default</argsstring>
        <name>~CuriouslyRecurringTemplate</name>
        <qualifiedname>QuantLib::CuriouslyRecurringTemplate::~CuriouslyRecurringTemplate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/patterns/curiouslyrecurring.hpp" line="43" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1CuriouslyRecurringTemplate_1a72c11590c74c9d0085fd43f17cdfe96e" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Impl &amp;</type>
        <definition>Impl &amp; QuantLib::CuriouslyRecurringTemplate&lt; Impl &gt;::impl</definition>
        <argsstring>()</argsstring>
        <name>impl</name>
        <qualifiedname>QuantLib::CuriouslyRecurringTemplate::impl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/patterns/curiouslyrecurring.hpp" line="45" column="14" bodyfile="ql/patterns/curiouslyrecurring.hpp" bodystart="45" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1CuriouslyRecurringTemplate_1a9efaa4c38bfca1e148ed265a809ed220" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Impl &amp;</type>
        <definition>const Impl &amp; QuantLib::CuriouslyRecurringTemplate&lt; Impl &gt;::impl</definition>
        <argsstring>() const</argsstring>
        <name>impl</name>
        <qualifiedname>QuantLib::CuriouslyRecurringTemplate::impl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/patterns/curiouslyrecurring.hpp" line="48" column="20" bodyfile="ql/patterns/curiouslyrecurring.hpp" bodystart="48" bodyend="50"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Support for the curiously recurring template pattern. </para>
    </briefdescription>
    <detaileddescription>
<para>See James O. Coplien. A Curiously Recurring Template Pattern. In Stanley B. Lippman, editor, C++ Gems, 135-144. Cambridge University Press, New York, New York, 1996. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::Brent</label>
        <link refid="classQuantLib_1_1Brent"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::CuriouslyRecurringTemplate&lt; Impl &gt;</label>
        <link refid="classQuantLib_1_1CuriouslyRecurringTemplate"/>
      </node>
      <node id="5">
        <label>QuantLib::Newton</label>
        <link refid="classQuantLib_1_1Newton"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::NewtonSafe</label>
        <link refid="classQuantLib_1_1NewtonSafe"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::Ridder</label>
        <link refid="classQuantLib_1_1Ridder"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::Solver1D&lt; Impl &gt;</label>
        <link refid="classQuantLib_1_1Solver1D"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Solver1D&lt; Brent &gt;</label>
        <link refid="classQuantLib_1_1Solver1D"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Solver1D&lt; Newton &gt;</label>
        <link refid="classQuantLib_1_1Solver1D"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Solver1D&lt; NewtonSafe &gt;</label>
        <link refid="classQuantLib_1_1Solver1D"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::Solver1D&lt; Ridder &gt;</label>
        <link refid="classQuantLib_1_1Solver1D"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="ql/patterns/curiouslyrecurring.hpp" line="39" column="5" bodyfile="ql/patterns/curiouslyrecurring.hpp" bodystart="39" bodyend="51"/>
    <listofallmembers>
      <member refid="classQuantLib_1_1CuriouslyRecurringTemplate_1ac51e69d7c3e616686e8777fcabebf954" prot="protected" virt="non-virtual"><scope>QuantLib::CuriouslyRecurringTemplate</scope><name>CuriouslyRecurringTemplate</name></member>
      <member refid="classQuantLib_1_1CuriouslyRecurringTemplate_1a72c11590c74c9d0085fd43f17cdfe96e" prot="protected" virt="non-virtual"><scope>QuantLib::CuriouslyRecurringTemplate</scope><name>impl</name></member>
      <member refid="classQuantLib_1_1CuriouslyRecurringTemplate_1a9efaa4c38bfca1e148ed265a809ed220" prot="protected" virt="non-virtual"><scope>QuantLib::CuriouslyRecurringTemplate</scope><name>impl</name></member>
      <member refid="classQuantLib_1_1CuriouslyRecurringTemplate_1ae22b4353d3c05a5aad5f5b8769392b05" prot="protected" virt="non-virtual"><scope>QuantLib::CuriouslyRecurringTemplate</scope><name>~CuriouslyRecurringTemplate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
