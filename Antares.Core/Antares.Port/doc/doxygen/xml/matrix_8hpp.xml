<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="matrix_8hpp" kind="file" language="C++">
    <compoundname>matrix.hpp</compoundname>
    <includes refid="array_8hpp" local="no">ql/math/array.hpp</includes>
    <includes refid="steppingiterator_8hpp" local="no">ql/utilities/steppingiterator.hpp</includes>
    <includes local="no">initializer_list</includes>
    <includes local="no">iterator</includes>
    <includedby refid="cubicinterpolation_8hpp" local="no">ql/math/interpolations/cubicinterpolation.hpp</includedby>
    <includedby refid="matrix_8cpp" local="no">ql/math/matrix.cpp</includedby>
    <includedby refid="qrdecomposition_8hpp" local="no">ql/math/matrixutilities/qrdecomposition.hpp</includedby>
    <includedby refid="symmetricschurdecomposition_8hpp" local="no">ql/math/matrixutilities/symmetricschurdecomposition.hpp</includedby>
    <includedby refid="tqreigendecomposition_8hpp" local="no">ql/math/matrixutilities/tqreigendecomposition.hpp</includedby>
    <includedby refid="fdm1dimsolver_8hpp" local="no">ql/methods/finitedifferences/solvers/fdm1dimsolver.hpp</includedby>
    <includedby refid="stochasticprocess_8hpp" local="no">ql/stochasticprocess.hpp</includedby>
    <incdepgraph>
      <node id="7">
        <label>ql/config.ansi.hpp</label>
        <link refid="config_8ansi_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>ql/errors.hpp</label>
        <link refid="errors_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ql/math/array.hpp</label>
        <link refid="array_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ql/math/matrix.hpp</label>
        <link refid="matrix_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ql/mathconstants.hpp</label>
        <link refid="mathconstants_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ql/qldefines.hpp</label>
        <link refid="qldefines_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ql/shared_ptr.hpp</label>
        <link refid="shared__ptr_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ql/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ql/userconfig.hpp</label>
        <link refid="userconfig_8hpp"/>
      </node>
      <node id="23">
        <label>ql/utilities/null.hpp</label>
        <link refid="null_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>ql/utilities/steppingiterator.hpp</label>
        <link refid="steppingiterator_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>algorithm</label>
      </node>
      <node id="18">
        <label>boost/assert.hpp</label>
      </node>
      <node id="5">
        <label>boost/config.hpp</label>
      </node>
      <node id="19">
        <label>boost/current_function.hpp</label>
      </node>
      <node id="17">
        <label>boost/enable_shared_from_this.hpp</label>
      </node>
      <node id="16">
        <label>boost/make_shared.hpp</label>
      </node>
      <node id="15">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="6">
        <label>boost/version.hpp</label>
      </node>
      <node id="10">
        <label>cmath</label>
      </node>
      <node id="12">
        <label>cstddef</label>
      </node>
      <node id="20">
        <label>exception</label>
      </node>
      <node id="26">
        <label>functional</label>
      </node>
      <node id="30">
        <label>initializer_list</label>
      </node>
      <node id="31">
        <label>iomanip</label>
      </node>
      <node id="25">
        <label>iterator</label>
      </node>
      <node id="11">
        <label>limits</label>
      </node>
      <node id="32">
        <label>memory</label>
      </node>
      <node id="28">
        <label>numeric</label>
      </node>
      <node id="21">
        <label>sstream</label>
      </node>
      <node id="22">
        <label>string</label>
      </node>
      <node id="24">
        <label>type_traits</label>
      </node>
      <node id="29">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="19">
        <label>ql/instruments/impliedvolatility.cpp</label>
        <link refid="impliedvolatility_8cpp"/>
      </node>
      <node id="18">
        <label>ql/instruments/impliedvolatility.hpp</label>
        <link refid="impliedvolatility_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ql/instruments/multiassetoption.cpp</label>
        <link refid="multiassetoption_8cpp"/>
      </node>
      <node id="20">
        <label>ql/instruments/vanillaoption.cpp</label>
        <link refid="vanillaoption_8cpp"/>
      </node>
      <node id="9">
        <label>ql/math/integrals/gaussianquadratures.cpp</label>
        <link refid="gaussianquadratures_8cpp"/>
      </node>
      <node id="2">
        <label>ql/math/interpolations/cubicinterpolation.hpp</label>
        <link refid="cubicinterpolation_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ql/math/matrix.cpp</label>
        <link refid="matrix_8cpp"/>
      </node>
      <node id="1">
        <label>ql/math/matrix.hpp</label>
        <link refid="matrix_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>ql/math/matrixutilities/gmres.cpp</label>
        <link refid="gmres_8cpp"/>
      </node>
      <node id="7">
        <label>ql/math/matrixutilities/qrdecomposition.cpp</label>
        <link refid="qrdecomposition_8cpp"/>
      </node>
      <node id="5">
        <label>ql/math/matrixutilities/qrdecomposition.hpp</label>
        <link refid="qrdecomposition_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ql/math/matrixutilities/symmetricschurdecomposition.cpp</label>
        <link refid="symmetricschurdecomposition_8cpp"/>
      </node>
      <node id="8">
        <label>ql/math/matrixutilities/symmetricschurdecomposition.hpp</label>
        <link refid="symmetricschurdecomposition_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ql/math/matrixutilities/tqreigendecomposition.cpp</label>
        <link refid="tqreigendecomposition_8cpp"/>
      </node>
      <node id="11">
        <label>ql/math/matrixutilities/tqreigendecomposition.hpp</label>
        <link refid="tqreigendecomposition_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>ql/methods/finitedifferences/meshers/fdmblackscholesmesher.cpp</label>
        <link refid="fdmblackscholesmesher_8cpp"/>
      </node>
      <node id="23">
        <label>ql/methods/finitedifferences/operators/fdmblackscholesop.cpp</label>
        <link refid="fdmblackscholesop_8cpp"/>
      </node>
      <node id="22">
        <label>ql/methods/finitedifferences/operators/fdmblackscholesop.hpp</label>
        <link refid="fdmblackscholesop_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ql/methods/finitedifferences/solvers/fdm1dimsolver.cpp</label>
        <link refid="fdm1dimsolver_8cpp"/>
      </node>
      <node id="13">
        <label>ql/methods/finitedifferences/solvers/fdm1dimsolver.hpp</label>
        <link refid="fdm1dimsolver_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ql/methods/finitedifferences/solvers/fdmblackscholessolver.cpp</label>
        <link refid="fdmblackscholessolver_8cpp"/>
      </node>
      <node id="25">
        <label>ql/pricingengines/vanilla/analyticdividendeuropeanengine.cpp</label>
        <link refid="analyticdividendeuropeanengine_8cpp"/>
      </node>
      <node id="24">
        <label>ql/pricingengines/vanilla/analyticdividendeuropeanengine.hpp</label>
        <link refid="analyticdividendeuropeanengine_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>ql/pricingengines/vanilla/analyticeuropeanengine.cpp</label>
        <link refid="analyticeuropeanengine_8cpp"/>
      </node>
      <node id="26">
        <label>ql/pricingengines/vanilla/analyticeuropeanengine.hpp</label>
        <link refid="analyticeuropeanengine_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>ql/pricingengines/vanilla/fdblackscholesvanillaengine.cpp</label>
        <link refid="fdblackscholesvanillaengine_8cpp"/>
      </node>
      <node id="31">
        <label>ql/pricingengines/vanilla/qdfpamericanengine.cpp</label>
        <link refid="qdfpamericanengine_8cpp"/>
      </node>
      <node id="30">
        <label>ql/pricingengines/vanilla/qdfpamericanengine.hpp</label>
        <link refid="qdfpamericanengine_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>ql/pricingengines/vanilla/qdplusamericanengine.cpp</label>
        <link refid="qdplusamericanengine_8cpp"/>
      </node>
      <node id="29">
        <label>ql/pricingengines/vanilla/qdplusamericanengine.hpp</label>
        <link refid="qdplusamericanengine_8hpp"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>ql/processes/blackscholesprocess.cpp</label>
        <link refid="blackscholesprocess_8cpp"/>
      </node>
      <node id="17">
        <label>ql/processes/blackscholesprocess.hpp</label>
        <link refid="blackscholesprocess_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>ql/processes/eulerdiscretization.cpp</label>
        <link refid="eulerdiscretization_8cpp"/>
      </node>
      <node id="34">
        <label>ql/processes/eulerdiscretization.hpp</label>
        <link refid="eulerdiscretization_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>ql/stochasticprocess.cpp</label>
        <link refid="stochasticprocess_8cpp"/>
      </node>
      <node id="15">
        <label>ql/stochasticprocess.hpp</label>
        <link refid="stochasticprocess_8hpp"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classQuantLib_1_1Matrix" prot="public">QuantLib::Matrix</innerclass>
    <innernamespace refid="namespaceQuantLib">QuantLib</innernamespace>
    <briefdescription>
<para>matrix used in linear algebra. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>c++;<sp/>tab-width:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil;<sp/>c-basic-offset:<sp/>4<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2000,<sp/>2001,<sp/>2002,<sp/>2003<sp/>RiskMap<sp/>srl</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2003,<sp/>2004,<sp/>2005,<sp/>2006<sp/>StatPro<sp/>Italia<sp/>srl</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2003,<sp/>2004<sp/>Ferdinando<sp/>Ametrano</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2015<sp/>Michael<sp/>von<sp/>den<sp/>Driesch</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>QuantLib,<sp/>a<sp/>free-software/open-source<sp/>library</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>for<sp/>financial<sp/>quantitative<sp/>analysts<sp/>and<sp/>developers<sp/>-<sp/>http://quantlib.org/</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>QuantLib<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>QuantLib<sp/>license.<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>copy<sp/>of<sp/>the<sp/>license<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>please<sp/>email</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>&lt;quantlib-dev@lists.sf.net&gt;.<sp/>The<sp/>license<sp/>is<sp/>also<sp/>available<sp/>online<sp/>at</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>&lt;http://quantlib.org/license.shtml&gt;.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>license<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>quantlib_matrix_hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>quantlib_matrix_hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="array_8hpp" kindref="compound">ql/math/array.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="steppingiterator_8hpp" kindref="compound">ql/utilities/steppingiterator.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;initializer_list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceQuantLib" kindref="compound">QuantLib</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classQuantLib_1_1Matrix" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a4807dee0afc0f073191d0e9ba9b77c27" kindref="member">Matrix</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a4807dee0afc0f073191d0e9ba9b77c27" kindref="member">Matrix</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>,<sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a4807dee0afc0f073191d0e9ba9b77c27" kindref="member">Matrix</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>,<sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>,<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>value);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Iterator&gt;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a4807dee0afc0f073191d0e9ba9b77c27" kindref="member">Matrix</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>,<sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>,<sp/>Iterator<sp/><ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>,<sp/>Iterator<sp/><ref refid="classQuantLib_1_1Matrix_1a8cf900b0ba813ec8a7cd399db01771b0" kindref="member">end</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a4807dee0afc0f073191d0e9ba9b77c27" kindref="member">Matrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a4807dee0afc0f073191d0e9ba9b77c27" kindref="member">Matrix</ref>(<ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a4807dee0afc0f073191d0e9ba9b77c27" kindref="member">Matrix</ref>(std::initializer_list&lt;std::initializer_list&lt;Real&gt;&gt;);</highlight></codeline>
<codeline lineno="61" refid="classQuantLib_1_1Matrix_1a7683d030aa2b17605dd7618595537056" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a7683d030aa2b17605dd7618595537056" kindref="member">~Matrix</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/><ref refid="classQuantLib_1_1Matrix_1ae72b2d8b76e2b6604a986ffadecaa16d" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/><ref refid="classQuantLib_1_1Matrix_1ae72b2d8b76e2b6604a986ffadecaa16d" kindref="member">operator=</ref>(<ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;)<sp/>noexcept;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;)<sp/>const;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;)<sp/>const;</highlight></codeline>
<codeline lineno="69"></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>operator+=(const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>operator-=(const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>operator*=(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>operator/=(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classQuantLib_1_1Matrix_1a32b20b09f948423c3cd2ac1c2a40a8fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>*<sp/><ref refid="classQuantLib_1_1Matrix_1a32b20b09f948423c3cd2ac1c2a40a8fd" kindref="member">iterator</ref>;</highlight></codeline>
<codeline lineno="82" refid="classQuantLib_1_1Matrix_1a2a4ff22c93fe60f21f1bbb57fe703ee8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>const<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>*<sp/><ref refid="classQuantLib_1_1Matrix_1a2a4ff22c93fe60f21f1bbb57fe703ee8" kindref="member">const_iterator</ref>;</highlight></codeline>
<codeline lineno="83" refid="classQuantLib_1_1Matrix_1a1b11e5c2c4450b4a56d6bca30c779400" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/><ref refid="namespacestd" kindref="compound">std</ref>::<ref refid="classQuantLib_1_1Matrix_1a1b11e5c2c4450b4a56d6bca30c779400" kindref="member">reverse_iterator</ref>&lt;<ref refid="classQuantLib_1_1Matrix_1a32b20b09f948423c3cd2ac1c2a40a8fd" kindref="member">iterator</ref>&gt;<sp/><ref refid="classQuantLib_1_1Matrix_1a1b11e5c2c4450b4a56d6bca30c779400" kindref="member">reverse_iterator</ref>;</highlight></codeline>
<codeline lineno="84" refid="classQuantLib_1_1Matrix_1aa8a1afd1c51325c7664039348fa9ab64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/><ref refid="namespacestd" kindref="compound">std</ref>::<ref refid="classQuantLib_1_1Matrix_1a1b11e5c2c4450b4a56d6bca30c779400" kindref="member">reverse_iterator</ref>&lt;<ref refid="classQuantLib_1_1Matrix_1a2a4ff22c93fe60f21f1bbb57fe703ee8" kindref="member">const_iterator</ref>&gt;<sp/><ref refid="classQuantLib_1_1Matrix_1aa8a1afd1c51325c7664039348fa9ab64" kindref="member">const_reverse_iterator</ref>;</highlight></codeline>
<codeline lineno="85" refid="classQuantLib_1_1Matrix_1ad05c3c11c9d6fdf7c279f12ea54fbc63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>*<sp/><ref refid="classQuantLib_1_1Matrix_1ad05c3c11c9d6fdf7c279f12ea54fbc63" kindref="member">row_iterator</ref>;</highlight></codeline>
<codeline lineno="86" refid="classQuantLib_1_1Matrix_1a9e4cb308ca69bbffe9216e8105a38a67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/>const<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>*<sp/><ref refid="classQuantLib_1_1Matrix_1a9e4cb308ca69bbffe9216e8105a38a67" kindref="member">const_row_iterator</ref>;</highlight></codeline>
<codeline lineno="87" refid="classQuantLib_1_1Matrix_1a4530032d031c544ae178211f034300fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/><ref refid="namespacestd" kindref="compound">std</ref>::<ref refid="classQuantLib_1_1Matrix_1a1b11e5c2c4450b4a56d6bca30c779400" kindref="member">reverse_iterator</ref>&lt;<ref refid="classQuantLib_1_1Matrix_1ad05c3c11c9d6fdf7c279f12ea54fbc63" kindref="member">row_iterator</ref>&gt;<sp/><ref refid="classQuantLib_1_1Matrix_1a4530032d031c544ae178211f034300fc" kindref="member">reverse_row_iterator</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/><ref refid="namespacestd" kindref="compound">std</ref>::<ref refid="classQuantLib_1_1Matrix_1a1b11e5c2c4450b4a56d6bca30c779400" kindref="member">reverse_iterator</ref>&lt;<ref refid="classQuantLib_1_1Matrix_1a9e4cb308ca69bbffe9216e8105a38a67" kindref="member">const_row_iterator</ref>&gt;</highlight></codeline>
<codeline lineno="89" refid="classQuantLib_1_1Matrix_1a3136da9235df4b2e7fd89085c83caf23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a3136da9235df4b2e7fd89085c83caf23" kindref="member">const_reverse_row_iterator</ref>;</highlight></codeline>
<codeline lineno="90" refid="classQuantLib_1_1Matrix_1ad9456d64e6906c707fadd4672da27c8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/><ref refid="classQuantLib_1_1step__iterator" kindref="compound">step_iterator</ref>&lt;<ref refid="classQuantLib_1_1Matrix_1a32b20b09f948423c3cd2ac1c2a40a8fd" kindref="member">iterator</ref>&gt;<sp/><ref refid="classQuantLib_1_1Matrix_1ad9456d64e6906c707fadd4672da27c8d" kindref="member">column_iterator</ref>;</highlight></codeline>
<codeline lineno="91" refid="classQuantLib_1_1Matrix_1a5754d03aa0d348cb8440858f6cde9310" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/><ref refid="classQuantLib_1_1step__iterator" kindref="compound">step_iterator</ref>&lt;<ref refid="classQuantLib_1_1Matrix_1a2a4ff22c93fe60f21f1bbb57fe703ee8" kindref="member">const_iterator</ref>&gt;<sp/><ref refid="classQuantLib_1_1Matrix_1a5754d03aa0d348cb8440858f6cde9310" kindref="member">const_column_iterator</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/><ref refid="namespacestd" kindref="compound">std</ref>::<ref refid="classQuantLib_1_1Matrix_1a1b11e5c2c4450b4a56d6bca30c779400" kindref="member">reverse_iterator</ref>&lt;<ref refid="classQuantLib_1_1Matrix_1ad9456d64e6906c707fadd4672da27c8d" kindref="member">column_iterator</ref>&gt;</highlight></codeline>
<codeline lineno="93" refid="classQuantLib_1_1Matrix_1a2f23ae3d20cdc81e5fee7e2411b28497" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a2f23ae3d20cdc81e5fee7e2411b28497" kindref="member">reverse_column_iterator</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typedef<sp/><ref refid="namespacestd" kindref="compound">std</ref>::<ref refid="classQuantLib_1_1Matrix_1a1b11e5c2c4450b4a56d6bca30c779400" kindref="member">reverse_iterator</ref>&lt;<ref refid="classQuantLib_1_1Matrix_1a5754d03aa0d348cb8440858f6cde9310" kindref="member">const_column_iterator</ref>&gt;</highlight></codeline>
<codeline lineno="95" refid="classQuantLib_1_1Matrix_1a125dc89fa60a753b025e93c13d8c6481" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a125dc89fa60a753b025e93c13d8c6481" kindref="member">const_reverse_column_iterator</ref>;</highlight></codeline>
<codeline lineno="97"></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a2a4ff22c93fe60f21f1bbb57fe703ee8" kindref="member">const_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>()<sp/>const;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a32b20b09f948423c3cd2ac1c2a40a8fd" kindref="member">iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a2a4ff22c93fe60f21f1bbb57fe703ee8" kindref="member">const_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a8cf900b0ba813ec8a7cd399db01771b0" kindref="member">end</ref>()<sp/>const;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a32b20b09f948423c3cd2ac1c2a40a8fd" kindref="member">iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a8cf900b0ba813ec8a7cd399db01771b0" kindref="member">end</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1aa8a1afd1c51325c7664039348fa9ab64" kindref="member">const_reverse_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a507ef570bd84f8274c2785972a379423" kindref="member">rbegin</ref>()<sp/>const;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a1b11e5c2c4450b4a56d6bca30c779400" kindref="member">reverse_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a507ef570bd84f8274c2785972a379423" kindref="member">rbegin</ref>();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1aa8a1afd1c51325c7664039348fa9ab64" kindref="member">const_reverse_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a5f5b406233d2f9f3a13dceb6613cd9e6" kindref="member">rend</ref>()<sp/>const;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a1b11e5c2c4450b4a56d6bca30c779400" kindref="member">reverse_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a5f5b406233d2f9f3a13dceb6613cd9e6" kindref="member">rend</ref>();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a9e4cb308ca69bbffe9216e8105a38a67" kindref="member">const_row_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1acd97a2e48512e73aea59e8d0dc4ff2ae" kindref="member">row_begin</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)<sp/>const;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1ad05c3c11c9d6fdf7c279f12ea54fbc63" kindref="member">row_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1acd97a2e48512e73aea59e8d0dc4ff2ae" kindref="member">row_begin</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a9e4cb308ca69bbffe9216e8105a38a67" kindref="member">const_row_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1af522bd12b0f1ce562fbaf4e5e78276ee" kindref="member">row_end</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)<sp/>const;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1ad05c3c11c9d6fdf7c279f12ea54fbc63" kindref="member">row_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1af522bd12b0f1ce562fbaf4e5e78276ee" kindref="member">row_end</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a3136da9235df4b2e7fd89085c83caf23" kindref="member">const_reverse_row_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a4aba53c799d337de985cac42346350b3" kindref="member">row_rbegin</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)<sp/>const;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a4530032d031c544ae178211f034300fc" kindref="member">reverse_row_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a4aba53c799d337de985cac42346350b3" kindref="member">row_rbegin</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a3136da9235df4b2e7fd89085c83caf23" kindref="member">const_reverse_row_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a639ddb9a700d73e7faa8f77dc78bbbe7" kindref="member">row_rend</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)<sp/>const;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a4530032d031c544ae178211f034300fc" kindref="member">reverse_row_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a639ddb9a700d73e7faa8f77dc78bbbe7" kindref="member">row_rend</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a5754d03aa0d348cb8440858f6cde9310" kindref="member">const_column_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a1dd719d7441163127cd5ac3359f739d6" kindref="member">column_begin</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)<sp/>const;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1ad9456d64e6906c707fadd4672da27c8d" kindref="member">column_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a1dd719d7441163127cd5ac3359f739d6" kindref="member">column_begin</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a5754d03aa0d348cb8440858f6cde9310" kindref="member">const_column_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a7766b61f6fa232fe9a8614d9491f9f80" kindref="member">column_end</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)<sp/>const;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1ad9456d64e6906c707fadd4672da27c8d" kindref="member">column_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a7766b61f6fa232fe9a8614d9491f9f80" kindref="member">column_end</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a125dc89fa60a753b025e93c13d8c6481" kindref="member">const_reverse_column_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1abd5cfce2c2913866e6ed268efd2c30b3" kindref="member">column_rbegin</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)<sp/>const;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a2f23ae3d20cdc81e5fee7e2411b28497" kindref="member">reverse_column_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1abd5cfce2c2913866e6ed268efd2c30b3" kindref="member">column_rbegin</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a125dc89fa60a753b025e93c13d8c6481" kindref="member">const_reverse_column_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1af37cbdf4f94865845a81f60f31e73e2c" kindref="member">column_rend</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)<sp/>const;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a2f23ae3d20cdc81e5fee7e2411b28497" kindref="member">reverse_column_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1af37cbdf4f94865845a81f60f31e73e2c" kindref="member">column_rend</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i);</highlight></codeline>
<codeline lineno="123"></codeline>
<codeline lineno="125"></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a9e4cb308ca69bbffe9216e8105a38a67" kindref="member">const_row_iterator</ref><sp/>operator[](<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>)<sp/>const;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a9e4cb308ca69bbffe9216e8105a38a67" kindref="member">const_row_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1aab96cfc8adfd651765e6be8b1d67cff3" kindref="member">at</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>)<sp/>const;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1ad05c3c11c9d6fdf7c279f12ea54fbc63" kindref="member">row_iterator</ref><sp/>operator[](<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1ad05c3c11c9d6fdf7c279f12ea54fbc63" kindref="member">row_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1aab96cfc8adfd651765e6be8b1d67cff3" kindref="member">at</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref><sp/><ref refid="classQuantLib_1_1Matrix_1af694a09462cda80967fa8f3cac5d1d80" kindref="member">diagonal</ref>()<sp/>const;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>&amp;<sp/>operator()(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i,<sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>j)<sp/>const;</highlight></codeline>
<codeline lineno="133"></codeline>
<codeline lineno="135"></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>()<sp/>const;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>()<sp/>const;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1aa1efbf2a22de29eb644aee84a4cf3e65" kindref="member">empty</ref>()<sp/>const;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a3492fe04d4ebdc5f5fa7079c9be76084" kindref="member">size1</ref>()<sp/>const;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a795208978ef4c02ce26e5797415a11ed" kindref="member">size2</ref>()<sp/>const;</highlight></codeline>
<codeline lineno="142"></codeline>
<codeline lineno="144"></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1af7abd58ce86c26ee85bca2534a229a2b" kindref="member">swap</ref>(<ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;)<sp/>noexcept;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>private:</highlight></codeline>
<codeline lineno="148" refid="classQuantLib_1_1Matrix_1a95fe7a9011578a216823c95fbeb26b6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacestd" kindref="compound">std</ref>::unique_ptr&lt;<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>[]&gt;<sp/><ref refid="classQuantLib_1_1Matrix_1a95fe7a9011578a216823c95fbeb26b6b" kindref="member">data_</ref>;</highlight></codeline>
<codeline lineno="149" refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref><sp/>=<sp/>0,<sp/><ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>algebraic<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>operator+(const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;,<sp/>const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>operator+(const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;,<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>operator+(<ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;,<sp/>const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>operator+(<ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;,<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>operator-(const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>operator-(<ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>operator-(const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;,<sp/>const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>operator-(const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;,<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>operator-(<ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;,<sp/>const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>operator-(<ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;,<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>operator*(const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;,<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>operator*(<ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;,<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>operator*(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>,<sp/>const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>operator*(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>,<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>operator/(const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;,<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>operator/(<ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;,<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vectorial<sp/>products</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref><sp/>operator*(const<sp/><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref>&amp;,<sp/>const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref><sp/>operator*(const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;,<sp/>const<sp/><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref>&amp;);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>operator*(const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;,<sp/>const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>misc.<sp/>operations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a3297a42dbd41b49b268e8ec866876504" kindref="member">transpose</ref>(const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a8cfa733053832db6990ca195cdab38db" kindref="member">outerProduct</ref>(const<sp/><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref>&amp;<sp/>v1,<sp/>const<sp/><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref>&amp;<sp/>v2);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>Iterator1,<sp/>class<sp/>Iterator2&gt;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a8cfa733053832db6990ca195cdab38db" kindref="member">outerProduct</ref>(Iterator1<sp/>v1begin,<sp/>Iterator1<sp/>v1end,<sp/>Iterator2<sp/>v2begin,<sp/>Iterator2<sp/>v2end);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1af7abd58ce86c26ee85bca2534a229a2b" kindref="member">swap</ref>(<ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;,<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;)<sp/>noexcept;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacestd" kindref="compound">std</ref>::ostream&amp;<sp/>operator&lt;&lt;(<ref refid="namespacestd" kindref="compound">std</ref>::ostream&amp;,<sp/>const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/><ref refid="classQuantLib_1_1Matrix_1aff21cecb1b3c4d8e3f3d525edebd7d5c" kindref="member">inverse</ref>(const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>m);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1Matrix_1afd66b122c895badf4e5d31d7e250b100" kindref="member">determinant</ref>(const<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>m);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inline<sp/>definitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="classQuantLib_1_1Matrix_1a4807dee0afc0f073191d0e9ba9b77c27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>inline<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>::<ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>()<sp/>:<sp/><ref refid="classQuantLib_1_1Matrix_1a95fe7a9011578a216823c95fbeb26b6b" kindref="member">data_</ref>((<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>*)</highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="classQuantLib_1_1Matrix_1ab1124204775d95bb885e6fea322e4302" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a4807dee0afc0f073191d0e9ba9b77c27" kindref="member">Matrix::Matrix</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>,<sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classQuantLib_1_1Matrix_1a95fe7a9011578a216823c95fbeb26b6b" kindref="member">data_</ref>(<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref><sp/>*<sp/><ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref><sp/>&gt;<sp/>0<sp/>?<sp/>new<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>[<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref><sp/>*<sp/><ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>]<sp/>:<sp/>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>*)nullptr),<sp/><ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref>(<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>),</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref>(<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="classQuantLib_1_1Matrix_1a6cb322de4ff87ce5a483794f3ef99c89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a4807dee0afc0f073191d0e9ba9b77c27" kindref="member">Matrix::Matrix</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>rows,<sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>columns,<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>value)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>data_(rows<sp/>*<sp/>columns<sp/>&gt;<sp/>0<sp/>?<sp/>new<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>[rows<sp/>*<sp/>columns]<sp/>:<sp/>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>*)nullptr),<sp/>rows_(rows),</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>columns_(columns)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::fill(<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<ref refid="classQuantLib_1_1Matrix_1a8cf900b0ba813ec8a7cd399db01771b0" kindref="member">end</ref>(),value);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Iterator&gt;</highlight></codeline>
<codeline lineno="235" refid="classQuantLib_1_1Matrix_1a798b3df0df0a022987aa518cc5b7b42c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a4807dee0afc0f073191d0e9ba9b77c27" kindref="member">Matrix::Matrix</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>rows,<sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>columns,<sp/>Iterator<sp/>begin,<sp/>Iterator<sp/>end)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>data_(rows<sp/>*<sp/>columns<sp/>&gt;<sp/>0<sp/>?<sp/>new<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>[rows<sp/>*<sp/>columns]<sp/>:<sp/>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>*)nullptr),<sp/>rows_(rows),</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>columns_(columns)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>,<sp/><ref refid="classQuantLib_1_1Matrix_1a8cf900b0ba813ec8a7cd399db01771b0" kindref="member">end</ref>,<sp/>this-&gt;<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="classQuantLib_1_1Matrix_1a0fb410e6f6562b7c20c759c07fccc2e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a4807dee0afc0f073191d0e9ba9b77c27" kindref="member">Matrix::Matrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>from)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>data_(!from.empty()<sp/>?<sp/>new<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>[from.rows_<sp/>*<sp/>from.columns_]<sp/>:<sp/>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>*)nullptr),</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rows_(from.rows_),<sp/>columns_(from.columns_)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(QL_PATCH_MSVC)<sp/>&amp;&amp;<sp/>defined(QL_DEBUG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!from.<ref refid="classQuantLib_1_1Matrix_1aa1efbf2a22de29eb644aee84a4cf3e65" kindref="member">empty</ref>())</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(from.<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),from.<ref refid="classQuantLib_1_1Matrix_1a8cf900b0ba813ec8a7cd399db01771b0" kindref="member">end</ref>(),<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="classQuantLib_1_1Matrix_1a1131f44bda1499c40171384be8b9382c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a4807dee0afc0f073191d0e9ba9b77c27" kindref="member">Matrix::Matrix</ref>(<ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;<sp/>from)<sp/>noexcept</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>data_((<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>*)</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1abf7c7f13964ae2a6c277bc0b84e6f943" kindref="member">swap</ref>(from);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="classQuantLib_1_1Matrix_1a1078c3a8e5b638ede2c0a82fec502c46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a4807dee0afc0f073191d0e9ba9b77c27" kindref="member">Matrix::Matrix</ref>(std::initializer_list&lt;std::initializer_list&lt;Real&gt;&gt;<sp/>data)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>data_(data.size()<sp/>==<sp/>0<sp/>||<sp/>data.begin()-&gt;size()<sp/>==<sp/>0<sp/>?</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>*)nullptr<sp/>:<sp/>new<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>[data.size()<sp/>*<sp/>data.begin()-&gt;size()]),</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rows_(data.size()),<sp/>columns_(data.size()<sp/>==<sp/>0<sp/>?<sp/>0<sp/>:<sp/>data.begin()-&gt;size())<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=0;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>row<sp/>:<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(QL_EXTRA_SAFETY_CHECKS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(row.size()<sp/>==<sp/><ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref>,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;a<sp/>matrix<sp/>needs<sp/>the<sp/>same<sp/>number<sp/>of<sp/>elements<sp/>for<sp/>each<sp/>row&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(row.begin(),<sp/>row.end(),<sp/><ref refid="classQuantLib_1_1Matrix_1acd97a2e48512e73aea59e8d0dc4ff2ae" kindref="member">row_begin</ref>(i));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="classQuantLib_1_1Matrix_1ae72b2d8b76e2b6604a986ffadecaa16d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/><ref refid="classQuantLib_1_1Matrix_1ae72b2d8b76e2b6604a986ffadecaa16d" kindref="member">Matrix::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>from)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>strong<sp/>guarantee</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>temp(from);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1af7abd58ce86c26ee85bca2534a229a2b" kindref="member">swap</ref>(temp);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="classQuantLib_1_1Matrix_1aa7a8e2f761cea78be0eeb8aaed1a0c45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/><ref refid="classQuantLib_1_1Matrix_1ae72b2d8b76e2b6604a986ffadecaa16d" kindref="member">Matrix::operator=</ref>(<ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;<sp/>from)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1abf7c7f13964ae2a6c277bc0b84e6f943" kindref="member">swap</ref>(from);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="classQuantLib_1_1Matrix_1acd9d23463fa668e5268af884f379ebbe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1acd9d23463fa668e5268af884f379ebbe" kindref="member">Matrix::operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>to)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref><sp/>==<sp/>to.<ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref><sp/>&amp;&amp;<sp/><ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref><sp/>==<sp/>to.<ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::equal(<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/><ref refid="classQuantLib_1_1Matrix_1a8cf900b0ba813ec8a7cd399db01771b0" kindref="member">end</ref>(),<sp/>to.<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="classQuantLib_1_1Matrix_1a78a65f6da49fcfdfd8cb1c8446f49ddb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a78a65f6da49fcfdfd8cb1c8446f49ddb" kindref="member">Matrix::operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>to)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!this-&gt;<ref refid="classQuantLib_1_1Matrix_1acd9d23463fa668e5268af884f379ebbe" kindref="member">operator==</ref>(to);<sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="classQuantLib_1_1Matrix_1af7abd58ce86c26ee85bca2534a229a2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1af7abd58ce86c26ee85bca2534a229a2b" kindref="member">Matrix::swap</ref>(<ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>from)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_.swap(from.data_);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(rows_,<sp/>from.rows_);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(columns_,<sp/>from.columns_);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="classQuantLib_1_1Matrix_1acd174ae5e504af26ffe6c53b9fee208d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/><ref refid="classQuantLib_1_1Matrix_1acd174ae5e504af26ffe6c53b9fee208d" kindref="member">Matrix::operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(<ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref><sp/>==<sp/>m.<ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref><sp/>&amp;&amp;<sp/><ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref><sp/>==<sp/>m.<ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref>,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;matrices<sp/>with<sp/>different<sp/>sizes<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.<ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m.<ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>cannot<sp/>be<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;added&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::transform(<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/><ref refid="classQuantLib_1_1Matrix_1a8cf900b0ba813ec8a7cd399db01771b0" kindref="member">end</ref>(),<sp/>m.<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/><ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/>std::plus&lt;&gt;());</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="classQuantLib_1_1Matrix_1a7bf76fa577dfbaf8586208533a504505" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/><ref refid="classQuantLib_1_1Matrix_1a7bf76fa577dfbaf8586208533a504505" kindref="member">Matrix::operator-=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(<ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref><sp/>==<sp/>m.<ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref><sp/>&amp;&amp;<sp/><ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref><sp/>==<sp/>m.<ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref>,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;matrices<sp/>with<sp/>different<sp/>sizes<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.<ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m.<ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>cannot<sp/>be<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;subtracted&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::transform(<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/><ref refid="classQuantLib_1_1Matrix_1a8cf900b0ba813ec8a7cd399db01771b0" kindref="member">end</ref>(),<sp/>m.<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/><ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/>std::minus&lt;&gt;());</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="classQuantLib_1_1Matrix_1a9551a645dd666828981ec80ff5ce0e20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/><ref refid="classQuantLib_1_1Matrix_1a9551a645dd666828981ec80ff5ce0e20" kindref="member">Matrix::operator*=</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::transform(<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/><ref refid="classQuantLib_1_1Matrix_1a8cf900b0ba813ec8a7cd399db01771b0" kindref="member">end</ref>(),<sp/><ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/>[=](<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>y)<sp/>-&gt;<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y<sp/>*<sp/>x;<sp/>});</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="classQuantLib_1_1Matrix_1a150360a860e99c3158dbe6ebb4d59060" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/><ref refid="classQuantLib_1_1Matrix_1a150360a860e99c3158dbe6ebb4d59060" kindref="member">Matrix::operator/=</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::transform(<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<ref refid="classQuantLib_1_1Matrix_1a8cf900b0ba813ec8a7cd399db01771b0" kindref="member">end</ref>(),<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/>[=](<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>y)<sp/>-&gt;<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y<sp/>/<sp/>x;<sp/>});</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a2a4ff22c93fe60f21f1bbb57fe703ee8" kindref="member">Matrix::const_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">Matrix::begin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a95fe7a9011578a216823c95fbeb26b6b" kindref="member">data_</ref>.get();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="classQuantLib_1_1Matrix_1a145ff0e675dd5ac08460ffa6a71fb743" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a32b20b09f948423c3cd2ac1c2a40a8fd" kindref="member">Matrix::iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">Matrix::begin</ref>()<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a95fe7a9011578a216823c95fbeb26b6b" kindref="member">data_</ref>.get();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="classQuantLib_1_1Matrix_1a8cf900b0ba813ec8a7cd399db01771b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a2a4ff22c93fe60f21f1bbb57fe703ee8" kindref="member">Matrix::const_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a8cf900b0ba813ec8a7cd399db01771b0" kindref="member">Matrix::end</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a95fe7a9011578a216823c95fbeb26b6b" kindref="member">data_</ref>.get()+<ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref>*<ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339" refid="classQuantLib_1_1Matrix_1aa5a9cebec23d65c51dd4cce76cff74b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a32b20b09f948423c3cd2ac1c2a40a8fd" kindref="member">Matrix::iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a8cf900b0ba813ec8a7cd399db01771b0" kindref="member">Matrix::end</ref>()<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a95fe7a9011578a216823c95fbeb26b6b" kindref="member">data_</ref>.get()+<ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref>*<ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="classQuantLib_1_1Matrix_1a507ef570bd84f8274c2785972a379423" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1aa8a1afd1c51325c7664039348fa9ab64" kindref="member">Matrix::const_reverse_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a507ef570bd84f8274c2785972a379423" kindref="member">Matrix::rbegin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1aa8a1afd1c51325c7664039348fa9ab64" kindref="member">const_reverse_iterator</ref>(<ref refid="classQuantLib_1_1Matrix_1a8cf900b0ba813ec8a7cd399db01771b0" kindref="member">end</ref>());</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="classQuantLib_1_1Matrix_1ae021ff9a3d5e03cd92656ba592ce74cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a1b11e5c2c4450b4a56d6bca30c779400" kindref="member">Matrix::reverse_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a507ef570bd84f8274c2785972a379423" kindref="member">Matrix::rbegin</ref>()<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a1b11e5c2c4450b4a56d6bca30c779400" kindref="member">reverse_iterator</ref>(<ref refid="classQuantLib_1_1Matrix_1a8cf900b0ba813ec8a7cd399db01771b0" kindref="member">end</ref>());</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="classQuantLib_1_1Matrix_1a5f5b406233d2f9f3a13dceb6613cd9e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1aa8a1afd1c51325c7664039348fa9ab64" kindref="member">Matrix::const_reverse_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a5f5b406233d2f9f3a13dceb6613cd9e6" kindref="member">Matrix::rend</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1aa8a1afd1c51325c7664039348fa9ab64" kindref="member">const_reverse_iterator</ref>(<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="classQuantLib_1_1Matrix_1af5baff62d2517c05ec55e0034c257672" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a1b11e5c2c4450b4a56d6bca30c779400" kindref="member">Matrix::reverse_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a5f5b406233d2f9f3a13dceb6613cd9e6" kindref="member">Matrix::rend</ref>()<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a1b11e5c2c4450b4a56d6bca30c779400" kindref="member">reverse_iterator</ref>(<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>());</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a9e4cb308ca69bbffe9216e8105a38a67" kindref="member">Matrix::const_row_iterator</ref></highlight></codeline>
<codeline lineno="360" refid="classQuantLib_1_1Matrix_1acd97a2e48512e73aea59e8d0dc4ff2ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1acd97a2e48512e73aea59e8d0dc4ff2ae" kindref="member">Matrix::row_begin</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(QL_EXTRA_SAFETY_CHECKS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(i&lt;<ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref>,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;row<sp/>index<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>must<sp/>be<sp/>less<sp/>than<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;:<sp/>matrix<sp/>cannot<sp/>be<sp/>accessed<sp/>out<sp/>of<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a95fe7a9011578a216823c95fbeb26b6b" kindref="member">data_</ref>.get()+<ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref>*i;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="classQuantLib_1_1Matrix_1a1477f3c97cdfbf6f4425d43bc66c51bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1ad05c3c11c9d6fdf7c279f12ea54fbc63" kindref="member">Matrix::row_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1acd97a2e48512e73aea59e8d0dc4ff2ae" kindref="member">Matrix::row_begin</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(QL_EXTRA_SAFETY_CHECKS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(i&lt;<ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref>,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;row<sp/>index<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>must<sp/>be<sp/>less<sp/>than<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;:<sp/>matrix<sp/>cannot<sp/>be<sp/>accessed<sp/>out<sp/>of<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a95fe7a9011578a216823c95fbeb26b6b" kindref="member">data_</ref>.get()+<ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref>*i;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="classQuantLib_1_1Matrix_1af522bd12b0f1ce562fbaf4e5e78276ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a9e4cb308ca69bbffe9216e8105a38a67" kindref="member">Matrix::const_row_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1af522bd12b0f1ce562fbaf4e5e78276ee" kindref="member">Matrix::row_end</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(QL_EXTRA_SAFETY_CHECKS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(i&lt;<ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref>,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;row<sp/>index<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>must<sp/>be<sp/>less<sp/>than<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;:<sp/>matrix<sp/>cannot<sp/>be<sp/>accessed<sp/>out<sp/>of<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a95fe7a9011578a216823c95fbeb26b6b" kindref="member">data_</ref>.get()+<ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref>*(i+1);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="classQuantLib_1_1Matrix_1af17ccff5653d88a886086879420d52fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1ad05c3c11c9d6fdf7c279f12ea54fbc63" kindref="member">Matrix::row_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1af522bd12b0f1ce562fbaf4e5e78276ee" kindref="member">Matrix::row_end</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(QL_EXTRA_SAFETY_CHECKS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(i&lt;<ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref>,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;row<sp/>index<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>must<sp/>be<sp/>less<sp/>than<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;:<sp/>matrix<sp/>cannot<sp/>be<sp/>accessed<sp/>out<sp/>of<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a95fe7a9011578a216823c95fbeb26b6b" kindref="member">data_</ref>.get()+<ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref>*(i+1);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a3136da9235df4b2e7fd89085c83caf23" kindref="member">Matrix::const_reverse_row_iterator</ref></highlight></codeline>
<codeline lineno="397" refid="classQuantLib_1_1Matrix_1a4aba53c799d337de985cac42346350b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a4aba53c799d337de985cac42346350b3" kindref="member">Matrix::row_rbegin</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a3136da9235df4b2e7fd89085c83caf23" kindref="member">const_reverse_row_iterator</ref>(<ref refid="classQuantLib_1_1Matrix_1af522bd12b0f1ce562fbaf4e5e78276ee" kindref="member">row_end</ref>(i));</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401" refid="classQuantLib_1_1Matrix_1a2e54d5e361eed0566269ecf70a56774a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a4530032d031c544ae178211f034300fc" kindref="member">Matrix::reverse_row_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a4aba53c799d337de985cac42346350b3" kindref="member">Matrix::row_rbegin</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a4530032d031c544ae178211f034300fc" kindref="member">reverse_row_iterator</ref>(<ref refid="classQuantLib_1_1Matrix_1af522bd12b0f1ce562fbaf4e5e78276ee" kindref="member">row_end</ref>(i));</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a3136da9235df4b2e7fd89085c83caf23" kindref="member">Matrix::const_reverse_row_iterator</ref></highlight></codeline>
<codeline lineno="406" refid="classQuantLib_1_1Matrix_1a639ddb9a700d73e7faa8f77dc78bbbe7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a639ddb9a700d73e7faa8f77dc78bbbe7" kindref="member">Matrix::row_rend</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a3136da9235df4b2e7fd89085c83caf23" kindref="member">const_reverse_row_iterator</ref>(<ref refid="classQuantLib_1_1Matrix_1acd97a2e48512e73aea59e8d0dc4ff2ae" kindref="member">row_begin</ref>(i));</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="classQuantLib_1_1Matrix_1aaada45a94d4bb0f700ac8c602cdbb584" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a4530032d031c544ae178211f034300fc" kindref="member">Matrix::reverse_row_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a639ddb9a700d73e7faa8f77dc78bbbe7" kindref="member">Matrix::row_rend</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a4530032d031c544ae178211f034300fc" kindref="member">reverse_row_iterator</ref>(<ref refid="classQuantLib_1_1Matrix_1acd97a2e48512e73aea59e8d0dc4ff2ae" kindref="member">row_begin</ref>(i));</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a5754d03aa0d348cb8440858f6cde9310" kindref="member">Matrix::const_column_iterator</ref></highlight></codeline>
<codeline lineno="415" refid="classQuantLib_1_1Matrix_1a1dd719d7441163127cd5ac3359f739d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a1dd719d7441163127cd5ac3359f739d6" kindref="member">Matrix::column_begin</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(QL_EXTRA_SAFETY_CHECKS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(i&lt;<ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref>,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;column<sp/>index<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>must<sp/>be<sp/>less<sp/>than<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;:<sp/>matrix<sp/>cannot<sp/>be<sp/>accessed<sp/>out<sp/>of<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a5754d03aa0d348cb8440858f6cde9310" kindref="member">const_column_iterator</ref>(<ref refid="classQuantLib_1_1Matrix_1a95fe7a9011578a216823c95fbeb26b6b" kindref="member">data_</ref>.get()+i,<ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref>);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424" refid="classQuantLib_1_1Matrix_1a6acfdca2b92dfc6a22eb35d8d660e9a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1ad9456d64e6906c707fadd4672da27c8d" kindref="member">Matrix::column_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a1dd719d7441163127cd5ac3359f739d6" kindref="member">Matrix::column_begin</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(QL_EXTRA_SAFETY_CHECKS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(i&lt;<ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref>,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;column<sp/>index<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>must<sp/>be<sp/>less<sp/>than<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;:<sp/>matrix<sp/>cannot<sp/>be<sp/>accessed<sp/>out<sp/>of<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1ad9456d64e6906c707fadd4672da27c8d" kindref="member">column_iterator</ref>(<ref refid="classQuantLib_1_1Matrix_1a95fe7a9011578a216823c95fbeb26b6b" kindref="member">data_</ref>.get()+i,<ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref>);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a5754d03aa0d348cb8440858f6cde9310" kindref="member">Matrix::const_column_iterator</ref></highlight></codeline>
<codeline lineno="434" refid="classQuantLib_1_1Matrix_1a7766b61f6fa232fe9a8614d9491f9f80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1a7766b61f6fa232fe9a8614d9491f9f80" kindref="member">Matrix::column_end</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(QL_EXTRA_SAFETY_CHECKS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(i&lt;<ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref>,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;column<sp/>index<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>must<sp/>be<sp/>less<sp/>than<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;:<sp/>matrix<sp/>cannot<sp/>be<sp/>accessed<sp/>out<sp/>of<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a5754d03aa0d348cb8440858f6cde9310" kindref="member">const_column_iterator</ref>(<ref refid="classQuantLib_1_1Matrix_1a95fe7a9011578a216823c95fbeb26b6b" kindref="member">data_</ref>.get()+i+<ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref>*<ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref>,<ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref>);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="classQuantLib_1_1Matrix_1aa2eb43f110df9b12330221198b903b88" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1ad9456d64e6906c707fadd4672da27c8d" kindref="member">Matrix::column_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a7766b61f6fa232fe9a8614d9491f9f80" kindref="member">Matrix::column_end</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(QL_EXTRA_SAFETY_CHECKS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(i&lt;<ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref>,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;column<sp/>index<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>must<sp/>be<sp/>less<sp/>than<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;:<sp/>matrix<sp/>cannot<sp/>be<sp/>accessed<sp/>out<sp/>of<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1ad9456d64e6906c707fadd4672da27c8d" kindref="member">column_iterator</ref>(<ref refid="classQuantLib_1_1Matrix_1a95fe7a9011578a216823c95fbeb26b6b" kindref="member">data_</ref>.get()+i+<ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref>*<ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref>,<ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a125dc89fa60a753b025e93c13d8c6481" kindref="member">Matrix::const_reverse_column_iterator</ref></highlight></codeline>
<codeline lineno="453" refid="classQuantLib_1_1Matrix_1abd5cfce2c2913866e6ed268efd2c30b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1abd5cfce2c2913866e6ed268efd2c30b3" kindref="member">Matrix::column_rbegin</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a125dc89fa60a753b025e93c13d8c6481" kindref="member">const_reverse_column_iterator</ref>(<ref refid="classQuantLib_1_1Matrix_1a7766b61f6fa232fe9a8614d9491f9f80" kindref="member">column_end</ref>(i));</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a2f23ae3d20cdc81e5fee7e2411b28497" kindref="member">Matrix::reverse_column_iterator</ref></highlight></codeline>
<codeline lineno="458" refid="classQuantLib_1_1Matrix_1a86aa0dd0004a494559aa35cf26d87789" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1abd5cfce2c2913866e6ed268efd2c30b3" kindref="member">Matrix::column_rbegin</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a2f23ae3d20cdc81e5fee7e2411b28497" kindref="member">reverse_column_iterator</ref>(<ref refid="classQuantLib_1_1Matrix_1a7766b61f6fa232fe9a8614d9491f9f80" kindref="member">column_end</ref>(i));</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a125dc89fa60a753b025e93c13d8c6481" kindref="member">Matrix::const_reverse_column_iterator</ref></highlight></codeline>
<codeline lineno="463" refid="classQuantLib_1_1Matrix_1af37cbdf4f94865845a81f60f31e73e2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1af37cbdf4f94865845a81f60f31e73e2c" kindref="member">Matrix::column_rend</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a125dc89fa60a753b025e93c13d8c6481" kindref="member">const_reverse_column_iterator</ref>(<ref refid="classQuantLib_1_1Matrix_1a1dd719d7441163127cd5ac3359f739d6" kindref="member">column_begin</ref>(i));</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a2f23ae3d20cdc81e5fee7e2411b28497" kindref="member">Matrix::reverse_column_iterator</ref></highlight></codeline>
<codeline lineno="468" refid="classQuantLib_1_1Matrix_1a7f713840a5505f33fe6eae8ac2689cad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1af37cbdf4f94865845a81f60f31e73e2c" kindref="member">Matrix::column_rend</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a2f23ae3d20cdc81e5fee7e2411b28497" kindref="member">reverse_column_iterator</ref>(<ref refid="classQuantLib_1_1Matrix_1a1dd719d7441163127cd5ac3359f739d6" kindref="member">column_begin</ref>(i));</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a9e4cb308ca69bbffe9216e8105a38a67" kindref="member">Matrix::const_row_iterator</ref></highlight></codeline>
<codeline lineno="473" refid="classQuantLib_1_1Matrix_1ac971bf07f0ded2022bfa95b8f8c7464d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1ac971bf07f0ded2022bfa95b8f8c7464d" kindref="member">Matrix::operator[]</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1acd97a2e48512e73aea59e8d0dc4ff2ae" kindref="member">row_begin</ref>(i);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a9e4cb308ca69bbffe9216e8105a38a67" kindref="member">Matrix::const_row_iterator</ref></highlight></codeline>
<codeline lineno="478" refid="classQuantLib_1_1Matrix_1aab96cfc8adfd651765e6be8b1d67cff3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix_1aab96cfc8adfd651765e6be8b1d67cff3" kindref="member">Matrix::at</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(i<sp/>&lt;<sp/><ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref>,<sp/></highlight><highlight class="stringliteral">&quot;matrix<sp/>access<sp/>out<sp/>of<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1acd97a2e48512e73aea59e8d0dc4ff2ae" kindref="member">row_begin</ref>(i);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="classQuantLib_1_1Matrix_1a938903cfb99b5f41091ac9f1624fb739" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1ad05c3c11c9d6fdf7c279f12ea54fbc63" kindref="member">Matrix::row_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1ac971bf07f0ded2022bfa95b8f8c7464d" kindref="member">Matrix::operator[]</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1acd97a2e48512e73aea59e8d0dc4ff2ae" kindref="member">row_begin</ref>(i);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487" refid="classQuantLib_1_1Matrix_1ae57167d1e71f850b6ba08c7e46215555" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1ad05c3c11c9d6fdf7c279f12ea54fbc63" kindref="member">Matrix::row_iterator</ref><sp/><ref refid="classQuantLib_1_1Matrix_1aab96cfc8adfd651765e6be8b1d67cff3" kindref="member">Matrix::at</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(i<sp/>&lt;<sp/><ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref>,<sp/></highlight><highlight class="stringliteral">&quot;matrix<sp/>access<sp/>out<sp/>of<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1acd97a2e48512e73aea59e8d0dc4ff2ae" kindref="member">row_begin</ref>(i);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="classQuantLib_1_1Matrix_1af694a09462cda80967fa8f3cac5d1d80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref><sp/><ref refid="classQuantLib_1_1Matrix_1af694a09462cda80967fa8f3cac5d1d80" kindref="member">Matrix::diagonal</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>arraySize<sp/>=<sp/>std::min&lt;Size&gt;(<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>(),<sp/><ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>());</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref><sp/>tmp(arraySize);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>arraySize;<sp/>i++)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp[i]<sp/>=<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[i][i];</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500" refid="classQuantLib_1_1Matrix_1a6792d4febf2e3edc627bcf5f1a45d95d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>&amp;<ref refid="classQuantLib_1_1Matrix_1a6792d4febf2e3edc627bcf5f1a45d95d" kindref="member">Matrix::operator()</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i,<sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>j)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a95fe7a9011578a216823c95fbeb26b6b" kindref="member">data_</ref>[i*<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>()+j];</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504" refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">Matrix::rows</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref>;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508" refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">Matrix::columns</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref>;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="classQuantLib_1_1Matrix_1a3492fe04d4ebdc5f5fa7079c9be76084" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a3492fe04d4ebdc5f5fa7079c9be76084" kindref="member">Matrix::size1</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>();</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516" refid="classQuantLib_1_1Matrix_1a795208978ef4c02ce26e5797415a11ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1Matrix_1a795208978ef4c02ce26e5797415a11ed" kindref="member">Matrix::size2</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>();</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520" refid="classQuantLib_1_1Matrix_1aa1efbf2a22de29eb644aee84a4cf3e65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1aa1efbf2a22de29eb644aee84a4cf3e65" kindref="member">Matrix::empty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix_1a65f186f35e6b4e90f07557c9cd8fb782" kindref="member">rows_</ref><sp/>==<sp/>0<sp/>||<sp/><ref refid="classQuantLib_1_1Matrix_1a23c5052c1cf3a57bf5a449e086404a8b" kindref="member">columns_</ref><sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524" refid="classQuantLib_1_1Matrix_1a6d11ed998cc31f97481d26e07afa66d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/><ref refid="namespaceQuantLib_1a29236f635fb647688f496b36335974ce" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>m1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>m2)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(m1.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>()<sp/>==<sp/>m2.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>()<sp/>==<sp/>m2.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>(),</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;matrices<sp/>with<sp/>different<sp/>sizes<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m1.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m2.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>cannot<sp/>be<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;added&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>temp(m1.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>(),m1.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>());</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::transform(m1.<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/>m1.<ref refid="classQuantLib_1_1Matrix_1a8cf900b0ba813ec8a7cd399db01771b0" kindref="member">end</ref>(),<sp/>m2.<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/>temp.<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/>std::plus&lt;&gt;());</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536" refid="classQuantLib_1_1Matrix_1a9be7abc59883cec4b0c984a64b58638f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/><ref refid="namespaceQuantLib_1a29236f635fb647688f496b36335974ce" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>m1,<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;<sp/>m2)<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(m1.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>()<sp/>==<sp/>m2.rows()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>()<sp/>==<sp/>m2.columns(),</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;matrices<sp/>with<sp/>different<sp/>sizes<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m1.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m2.columns()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>cannot<sp/>be<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;added&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::transform(m1.<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/>m1.<ref refid="classQuantLib_1_1Matrix_1a8cf900b0ba813ec8a7cd399db01771b0" kindref="member">end</ref>(),<sp/>m2.begin(),<sp/>m2.begin(),<sp/>std::plus&lt;&gt;());</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(m2);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547" refid="classQuantLib_1_1Matrix_1a440cf4673c9d7be9ccdc21de74a51c48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/><ref refid="namespaceQuantLib_1a29236f635fb647688f496b36335974ce" kindref="member">operator+</ref>(<ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;<sp/>m1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>m2)<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(m1.rows()<sp/>==<sp/>m2.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1.columns()<sp/>==<sp/>m2.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>(),</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;matrices<sp/>with<sp/>different<sp/>sizes<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m1.columns()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m2.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>cannot<sp/>be<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;added&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::transform(m1.begin(),<sp/>m1.end(),<sp/>m2.<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/>m1.begin(),<sp/>std::plus&lt;&gt;());</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(m1);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558" refid="classQuantLib_1_1Matrix_1a4a93663169247c36f8440c599f998fd4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/><ref refid="namespaceQuantLib_1a29236f635fb647688f496b36335974ce" kindref="member">operator+</ref>(<ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;<sp/>m1,<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;<sp/>m2)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>NOLINT(cppcoreguidelines-rvalue-reference-param-not-moved)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(m1.rows()<sp/>==<sp/>m2.rows()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1.columns()<sp/>==<sp/>m2.columns(),</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;matrices<sp/>with<sp/>different<sp/>sizes<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m1.columns()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m2.columns()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>cannot<sp/>be<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;added&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::transform(m1.begin(),<sp/>m1.end(),<sp/>m2.begin(),<sp/>m1.begin(),<sp/>std::plus&lt;&gt;());</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(m1);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569" refid="classQuantLib_1_1Matrix_1ac8f923ecad5d2312f5331e94fb4b319e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/><ref refid="namespaceQuantLib_1ac138544e5cf2ccb42b8cacdb055d511a" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>m1)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>temp(m1.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>(),<sp/>m1.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>());</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::transform(m1.<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/>m1.<ref refid="classQuantLib_1_1Matrix_1a8cf900b0ba813ec8a7cd399db01771b0" kindref="member">end</ref>(),<sp/>temp.<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/>std::negate&lt;&gt;());</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575" refid="classQuantLib_1_1Matrix_1aedbcf21aed7999d7273fbd2f9128ab2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/><ref refid="namespaceQuantLib_1ac138544e5cf2ccb42b8cacdb055d511a" kindref="member">operator-</ref>(<ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;<sp/>m1)<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::transform(m1.begin(),<sp/>m1.end(),<sp/>m1.begin(),<sp/>std::negate&lt;&gt;());</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(m1);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580" refid="classQuantLib_1_1Matrix_1a9ed5b2e849ee4b8282934405339fd7a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/><ref refid="namespaceQuantLib_1ac138544e5cf2ccb42b8cacdb055d511a" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>m1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>m2)<sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(m1.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>()<sp/>==<sp/>m2.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>()<sp/>==<sp/>m2.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>(),</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;matrices<sp/>with<sp/>different<sp/>sizes<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m1.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m2.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>cannot<sp/>be<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;subtracted&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>temp(m1.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>(),m1.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>());</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::transform(m1.<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/>m1.<ref refid="classQuantLib_1_1Matrix_1a8cf900b0ba813ec8a7cd399db01771b0" kindref="member">end</ref>(),<sp/>m2.<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/>temp.<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/>std::minus&lt;&gt;());</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592" refid="classQuantLib_1_1Matrix_1ae01e5ae892add153a84648832f2a0125" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/><ref refid="namespaceQuantLib_1ac138544e5cf2ccb42b8cacdb055d511a" kindref="member">operator-</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>m1,<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;<sp/>m2)<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(m1.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>()<sp/>==<sp/>m2.rows()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>()<sp/>==<sp/>m2.columns(),</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;matrices<sp/>with<sp/>different<sp/>sizes<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m1.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m2.columns()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>cannot<sp/>be<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;subtracted&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::transform(m1.<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/>m1.<ref refid="classQuantLib_1_1Matrix_1a8cf900b0ba813ec8a7cd399db01771b0" kindref="member">end</ref>(),<sp/>m2.begin(),<sp/>m2.begin(),<sp/>std::minus&lt;&gt;());</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(m2);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603" refid="classQuantLib_1_1Matrix_1ad02b00e124f0c7326d59563706ab233a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/><ref refid="namespaceQuantLib_1ac138544e5cf2ccb42b8cacdb055d511a" kindref="member">operator-</ref>(<ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;<sp/>m1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>m2)<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(m1.rows()<sp/>==<sp/>m2.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1.columns()<sp/>==<sp/>m2.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>(),</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;matrices<sp/>with<sp/>different<sp/>sizes<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m1.columns()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m2.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>cannot<sp/>be<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;subtracted&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::transform(m1.begin(),<sp/>m1.end(),<sp/>m2.<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/>m1.begin(),<sp/>std::minus&lt;&gt;());</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(m1);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614" refid="classQuantLib_1_1Matrix_1adb6628536e8af77c5c51853e6907da43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/><ref refid="namespaceQuantLib_1ac138544e5cf2ccb42b8cacdb055d511a" kindref="member">operator-</ref>(<ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;<sp/>m1,<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;<sp/>m2)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>NOLINT(cppcoreguidelines-rvalue-reference-param-not-moved)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(m1.rows()<sp/>==<sp/>m2.rows()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1.columns()<sp/>==<sp/>m2.columns(),</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;matrices<sp/>with<sp/>different<sp/>sizes<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m1.columns()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2.rows()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m2.columns()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>cannot<sp/>be<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;subtracted&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::transform(m1.begin(),<sp/>m1.end(),<sp/>m2.begin(),<sp/>m1.begin(),<sp/>std::minus&lt;&gt;());</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(m1);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625" refid="classQuantLib_1_1Matrix_1a2be283fbe284e22d68989469e096a087" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/><ref refid="namespaceQuantLib_1a2cd51621fd12c13a7049b91c0c92052b" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>m,<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>temp(m.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>(),m.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>());</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::transform(m.<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/>m.<ref refid="classQuantLib_1_1Matrix_1a8cf900b0ba813ec8a7cd399db01771b0" kindref="member">end</ref>(),<sp/>temp.<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/>[=](<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>y)<sp/>-&gt;<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>{<sp/>return<sp/>y<sp/>*<sp/>x;<sp/>});</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631" refid="classQuantLib_1_1Matrix_1a49ee5c03aa781e4a66f9135c639e3d12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/><ref refid="namespaceQuantLib_1a2cd51621fd12c13a7049b91c0c92052b" kindref="member">operator*</ref>(<ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;<sp/>m,<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::transform(m.begin(),<sp/>m.end(),<sp/>m.begin(),<sp/>[=](<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>y)<sp/>-&gt;<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>{<sp/>return<sp/>y<sp/>*<sp/>x;<sp/>});</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(m);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636" refid="classQuantLib_1_1Matrix_1ad5a458a7c80c7d1ec42f66bf369e4567" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/><ref refid="namespaceQuantLib_1a2cd51621fd12c13a7049b91c0c92052b" kindref="member">operator*</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>temp(m.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>(),m.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>());</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::transform(m.<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/>m.<ref refid="classQuantLib_1_1Matrix_1a8cf900b0ba813ec8a7cd399db01771b0" kindref="member">end</ref>(),<sp/>temp.<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/>[=](<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>y)<sp/>-&gt;<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>{<sp/>return<sp/>x<sp/>*<sp/>y;<sp/>});</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642" refid="classQuantLib_1_1Matrix_1a95f70b31fd215df10a1b98fb941f617b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/><ref refid="namespaceQuantLib_1a2cd51621fd12c13a7049b91c0c92052b" kindref="member">operator*</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>x,<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::transform(m.begin(),<sp/>m.end(),<sp/>m.begin(),<sp/>[=](<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>y)<sp/>-&gt;<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>{<sp/>return<sp/>x<sp/>*<sp/>y;<sp/>});</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(m);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647" refid="classQuantLib_1_1Matrix_1ac896775e533619b3b8e74add36f1df3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/><ref refid="namespaceQuantLib_1a052237465c718b089ec0426570c2470e" kindref="member">operator/</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>m,<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>temp(m.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>(),m.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>());</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::transform(m.<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/>m.<ref refid="classQuantLib_1_1Matrix_1a8cf900b0ba813ec8a7cd399db01771b0" kindref="member">end</ref>(),<sp/>temp.<ref refid="classQuantLib_1_1Matrix_1a44b6d59f4074d7a1ba1b2dc14a6abcdb" kindref="member">begin</ref>(),<sp/>[=](<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>y)<sp/>-&gt;<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>{<sp/>return<sp/>y<sp/>/<sp/>x;<sp/>});</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653" refid="classQuantLib_1_1Matrix_1a81a591b83b05aae56b6f35130d06479f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/><ref refid="namespaceQuantLib_1a052237465c718b089ec0426570c2470e" kindref="member">operator/</ref>(<ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;&amp;<sp/>m,<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::transform(m.begin(),<sp/>m.end(),<sp/>m.begin(),<sp/>[=](<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>y)<sp/>-&gt;<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>{<sp/>return<sp/>y<sp/>/<sp/>x;<sp/>});</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(m);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658" refid="classQuantLib_1_1Matrix_1a77cd00ec3ed9c3fbefb8f338e2a2ec34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref><sp/><ref refid="namespaceQuantLib_1a2cd51621fd12c13a7049b91c0c92052b" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref>&amp;<sp/>v,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(v.<ref refid="classQuantLib_1_1Array_1a68ffa4a150e1d8d8bc3b5a212ffc1d35" kindref="member">size</ref>()<sp/>==<sp/>m.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>(),</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vectors<sp/>and<sp/>matrices<sp/>with<sp/>different<sp/>sizes<sp/>(&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>v.<ref refid="classQuantLib_1_1Array_1a68ffa4a150e1d8d8bc3b5a212ffc1d35" kindref="member">size</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>()<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;)<sp/>cannot<sp/>be<sp/>multiplied&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref><sp/>result(m.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>());</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=0;<sp/>i&lt;result.<ref refid="classQuantLib_1_1Array_1a68ffa4a150e1d8d8bc3b5a212ffc1d35" kindref="member">size</ref>();<sp/>i++)</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[i]<sp/>=</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::inner_product(v.<ref refid="classQuantLib_1_1Array_1ac107d1ffe2ddf00bf1b7c2be03beab83" kindref="member">begin</ref>(),v.<ref refid="classQuantLib_1_1Array_1ad27b5de4ada539cb0bd429bf14a5c23b" kindref="member">end</ref>(),</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.<ref refid="classQuantLib_1_1Matrix_1a1dd719d7441163127cd5ac3359f739d6" kindref="member">column_begin</ref>(i),<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>(0.0));</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671" refid="classQuantLib_1_1Matrix_1a0b518bedb379d0b4ef8b4eec806123b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref><sp/><ref refid="namespaceQuantLib_1a2cd51621fd12c13a7049b91c0c92052b" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>m,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref>&amp;<sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(v.<ref refid="classQuantLib_1_1Array_1a68ffa4a150e1d8d8bc3b5a212ffc1d35" kindref="member">size</ref>()<sp/>==<sp/>m.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>(),</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;vectors<sp/>and<sp/>matrices<sp/>with<sp/>different<sp/>sizes<sp/>(&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>v.<ref refid="classQuantLib_1_1Array_1a68ffa4a150e1d8d8bc3b5a212ffc1d35" kindref="member">size</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>()<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;)<sp/>cannot<sp/>be<sp/>multiplied&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref><sp/>result(m.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>());</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=0;<sp/>i&lt;result.<ref refid="classQuantLib_1_1Array_1a68ffa4a150e1d8d8bc3b5a212ffc1d35" kindref="member">size</ref>();<sp/>i++)</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[i]<sp/>=</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::inner_product(v.<ref refid="classQuantLib_1_1Array_1ac107d1ffe2ddf00bf1b7c2be03beab83" kindref="member">begin</ref>(),v.<ref refid="classQuantLib_1_1Array_1ad27b5de4ada539cb0bd429bf14a5c23b" kindref="member">end</ref>(),m.<ref refid="classQuantLib_1_1Matrix_1acd97a2e48512e73aea59e8d0dc4ff2ae" kindref="member">row_begin</ref>(i),<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>(0.0));</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683" refid="classQuantLib_1_1Matrix_1adf38db67cba468ce4b579a29b568aa5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/><ref refid="namespaceQuantLib_1a2cd51621fd12c13a7049b91c0c92052b" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>m1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>m2)<sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(m1.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>()<sp/>==<sp/>m2.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>(),</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;matrices<sp/>with<sp/>different<sp/>sizes<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m1.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m2.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>m2.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>cannot<sp/>be<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;multiplied&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>result(m1.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>(),m2.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>(),0.0);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=0;<sp/>i&lt;result.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>k=0;<sp/>k&lt;m1.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>();<sp/>++k)<sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>j=0;<sp/>j&lt;result.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>();<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[i][j]<sp/>+=<sp/>m1[i][k]*m2[k][j];</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700" refid="classQuantLib_1_1Matrix_1a3297a42dbd41b49b268e8ec866876504" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/><ref refid="namespaceQuantLib_1aebac9d15b12ee006122a611d3d603c48" kindref="member">transpose</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>result(m.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>(),m.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>());</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(QL_PATCH_MSVC)<sp/>&amp;&amp;<sp/>defined(QL_DEBUG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m.<ref refid="classQuantLib_1_1Matrix_1aa1efbf2a22de29eb644aee84a4cf3e65" kindref="member">empty</ref>())</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=0;<sp/>i&lt;m.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>();<sp/>i++)</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(m.<ref refid="classQuantLib_1_1Matrix_1acd97a2e48512e73aea59e8d0dc4ff2ae" kindref="member">row_begin</ref>(i),m.<ref refid="classQuantLib_1_1Matrix_1af522bd12b0f1ce562fbaf4e5e78276ee" kindref="member">row_end</ref>(i),result.<ref refid="classQuantLib_1_1Matrix_1a1dd719d7441163127cd5ac3359f739d6" kindref="member">column_begin</ref>(i));</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710" refid="classQuantLib_1_1Matrix_1a8cfa733053832db6990ca195cdab38db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/><ref refid="namespaceQuantLib_1aff0e93c3e50edc052ff586aa7efc41d4" kindref="member">outerProduct</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref>&amp;<sp/>v1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref>&amp;<sp/>v2)<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1aff0e93c3e50edc052ff586aa7efc41d4" kindref="member">outerProduct</ref>(v1.<ref refid="classQuantLib_1_1Array_1ac107d1ffe2ddf00bf1b7c2be03beab83" kindref="member">begin</ref>(),<sp/>v1.<ref refid="classQuantLib_1_1Array_1ad27b5de4ada539cb0bd429bf14a5c23b" kindref="member">end</ref>(),<sp/>v2.<ref refid="classQuantLib_1_1Array_1ac107d1ffe2ddf00bf1b7c2be03beab83" kindref="member">begin</ref>(),<sp/>v2.<ref refid="classQuantLib_1_1Array_1ad27b5de4ada539cb0bd429bf14a5c23b" kindref="member">end</ref>());</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Iterator1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Iterator2&gt;</highlight></codeline>
<codeline lineno="715" refid="classQuantLib_1_1Matrix_1af44f18eeb6f058a2dc99632ed9c6a447" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/><ref refid="namespaceQuantLib_1aff0e93c3e50edc052ff586aa7efc41d4" kindref="member">outerProduct</ref>(Iterator1<sp/>v1begin,<sp/>Iterator1<sp/>v1end,<sp/>Iterator2<sp/>v2begin,<sp/>Iterator2<sp/>v2end)<sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>size1<sp/>=<sp/>std::distance(v1begin,<sp/>v1end);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(size1&gt;0,<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>first<sp/>vector&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>size2<sp/>=<sp/>std::distance(v2begin,<sp/>v2end);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(size2&gt;0,<sp/></highlight><highlight class="stringliteral">&quot;null<sp/>second<sp/>vector&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>result(size1,<sp/>size2);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=0;<sp/>v1begin!=v1end;<sp/>i++,<sp/>v1begin++)</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::transform(v2begin,<sp/>v2end,<sp/>result.<ref refid="classQuantLib_1_1Matrix_1acd97a2e48512e73aea59e8d0dc4ff2ae" kindref="member">row_begin</ref>(i),</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=](<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>y)<sp/>-&gt;<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>{<sp/>return<sp/>y<sp/>*<sp/>(*v1begin);<sp/>});</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732" refid="classQuantLib_1_1Matrix_1a8473986339e7f202e1800d697456a92b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1abf7c7f13964ae2a6c277bc0b84e6f943" kindref="member">swap</ref>(<ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>m1,<sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>m2)<sp/></highlight><highlight class="keyword">noexcept</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1.<ref refid="classQuantLib_1_1Matrix_1af7abd58ce86c26ee85bca2534a229a2b" kindref="member">swap</ref>(m2);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736" refid="classQuantLib_1_1Matrix_1af0d6a8b04f5a8094992e498ca5a71142" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespaceQuantLib_1aa1f92a20de5394ddf9fe3a49a6ce0d2f" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref>&amp;<sp/>m)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::streamsize<sp/>width<sp/>=<sp/>out.width();</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=0;<sp/>i&lt;m.<ref refid="classQuantLib_1_1Matrix_1a12364ba962091ee32ccb940124c652dc" kindref="member">rows</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>j=0;<sp/>j&lt;m.<ref refid="classQuantLib_1_1Matrix_1ad98690ac09b02b5e5e657a029e388ba3" kindref="member">columns</ref>();<sp/>j++)</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>std::setw(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(width))<sp/>&lt;&lt;<sp/>m[i][j]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="ql/math/matrix.hpp"/>
  </compounddef>
</doxygen>
