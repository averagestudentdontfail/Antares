<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classQuantLib_1_1detail_1_1LinearInterpolationImpl" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::detail::LinearInterpolationImpl</compoundname>
    <basecompoundref refid="classQuantLib_1_1Interpolation_1_1templateImpl" prot="public" virt="non-virtual">QuantLib::Interpolation::templateImpl&lt; I1, I2 &gt;</basecompoundref>
    <includes refid="linearinterpolation_8hpp" local="no">linearinterpolation.hpp</includes>
    <templateparamlist>
      <param>
        <type>class I1</type>
      </param>
      <param>
        <type>class I2</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQuantLib_1_1detail_1_1LinearInterpolationImpl_1a1793e20a0d7d1bd0accba87d8e2ca8bf" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::detail::LinearInterpolationImpl&lt; I1, I2 &gt;::primitiveConst_</definition>
        <argsstring></argsstring>
        <name>primitiveConst_</name>
        <qualifiedname>QuantLib::detail::LinearInterpolationImpl::primitiveConst_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/linearinterpolation.hpp" line="105" column="25" bodyfile="ql/math/interpolations/linearinterpolation.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1detail_1_1LinearInterpolationImpl_1a3e3fbb436fcc092632de496ed4ed33f5" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::detail::LinearInterpolationImpl&lt; I1, I2 &gt;::s_</definition>
        <argsstring></argsstring>
        <name>s_</name>
        <qualifiedname>QuantLib::detail::LinearInterpolationImpl::s_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/linearinterpolation.hpp" line="105" column="41" bodyfile="ql/math/interpolations/linearinterpolation.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classQuantLib_1_1detail_1_1LinearInterpolationImpl_1abab6b049e1a3febe1fee51f4c7464713" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::detail::LinearInterpolationImpl&lt; I1, I2 &gt;::LinearInterpolationImpl</definition>
        <argsstring>(const I1 &amp;xBegin, const I1 &amp;xEnd, const I2 &amp;yBegin)</argsstring>
        <name>LinearInterpolationImpl</name>
        <qualifiedname>QuantLib::detail::LinearInterpolationImpl::LinearInterpolationImpl</qualifiedname>
        <param>
          <type>const I1 &amp;</type>
          <declname>xBegin</declname>
        </param>
        <param>
          <type>const I1 &amp;</type>
          <declname>xEnd</declname>
        </param>
        <param>
          <type>const I2 &amp;</type>
          <declname>yBegin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/linearinterpolation.hpp" line="74" column="13" bodyfile="ql/math/interpolations/linearinterpolation.hpp" bodystart="74" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1detail_1_1LinearInterpolationImpl_1adccc123ded02a76a336320c17fed8ac3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::detail::LinearInterpolationImpl&lt; I1, I2 &gt;::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::detail::LinearInterpolationImpl::update</qualifiedname>
        <reimplements refid="classQuantLib_1_1Interpolation_1_1Impl_1a709278c2ce75ffc2bea488619d4997e6">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/linearinterpolation.hpp" line="79" column="18" bodyfile="ql/math/interpolations/linearinterpolation.hpp" bodystart="79" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1detail_1_1LinearInterpolationImpl_1a63596c75669c68891ed4ce8bb43887c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::detail::LinearInterpolationImpl&lt; I1, I2 &gt;::value</definition>
        <argsstring>(Real x) const override</argsstring>
        <name>value</name>
        <qualifiedname>QuantLib::detail::LinearInterpolationImpl::value</qualifiedname>
        <reimplements refid="classQuantLib_1_1Interpolation_1_1Impl_1ad99198f18adb259c124fd2df7f2c4dea">value</reimplements>
        <param>
          <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/linearinterpolation.hpp" line="88" column="18" bodyfile="ql/math/interpolations/linearinterpolation.hpp" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1detail_1_1LinearInterpolationImpl_1a86fa8be1241c57947b4c96cf78baea24" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::detail::LinearInterpolationImpl&lt; I1, I2 &gt;::primitive</definition>
        <argsstring>(Real x) const override</argsstring>
        <name>primitive</name>
        <qualifiedname>QuantLib::detail::LinearInterpolationImpl::primitive</qualifiedname>
        <reimplements refid="classQuantLib_1_1Interpolation_1_1Impl_1ac7ada137d995e5b5afa466e1ea64f3af">primitive</reimplements>
        <param>
          <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/linearinterpolation.hpp" line="92" column="18" bodyfile="ql/math/interpolations/linearinterpolation.hpp" bodystart="92" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1detail_1_1LinearInterpolationImpl_1aba1ce0f1d924068d76de9c4a8f3dbaf8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::detail::LinearInterpolationImpl&lt; I1, I2 &gt;::derivative</definition>
        <argsstring>(Real x) const override</argsstring>
        <name>derivative</name>
        <qualifiedname>QuantLib::detail::LinearInterpolationImpl::derivative</qualifiedname>
        <reimplements refid="classQuantLib_1_1Interpolation_1_1Impl_1aa3d5009598ca4940c1d1abb87e821c3d">derivative</reimplements>
        <param>
          <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/linearinterpolation.hpp" line="98" column="18" bodyfile="ql/math/interpolations/linearinterpolation.hpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1detail_1_1LinearInterpolationImpl_1a00cd80a08a63eafee6bef5559f225b8c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::detail::LinearInterpolationImpl&lt; I1, I2 &gt;::secondDerivative</definition>
        <argsstring>(Real) const override</argsstring>
        <name>secondDerivative</name>
        <qualifiedname>QuantLib::detail::LinearInterpolationImpl::secondDerivative</qualifiedname>
        <reimplements refid="classQuantLib_1_1Interpolation_1_1Impl_1a6274e96e3ee0da2e2a2d1dfd842932a7">secondDerivative</reimplements>
        <param>
          <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/linearinterpolation.hpp" line="102" column="18" bodyfile="ql/math/interpolations/linearinterpolation.hpp" bodystart="102" bodyend="102"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::Interpolation::Impl</label>
        <link refid="classQuantLib_1_1Interpolation_1_1Impl"/>
      </node>
      <node id="2">
        <label>QuantLib::Interpolation::templateImpl&lt; I1, I2 &gt;</label>
        <link refid="classQuantLib_1_1Interpolation_1_1templateImpl"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::detail::LinearInterpolationImpl&lt; I1, I2 &gt;</label>
        <link refid="classQuantLib_1_1detail_1_1LinearInterpolationImpl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>QuantLib::Interpolation::Impl</label>
        <link refid="classQuantLib_1_1Interpolation_1_1Impl"/>
      </node>
      <node id="2">
        <label>QuantLib::Interpolation::templateImpl&lt; I1, I2 &gt;</label>
        <link refid="classQuantLib_1_1Interpolation_1_1templateImpl"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::detail::LinearInterpolationImpl&lt; I1, I2 &gt;</label>
        <link refid="classQuantLib_1_1detail_1_1LinearInterpolationImpl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/math/interpolations/linearinterpolation.hpp" line="71" column="9" bodyfile="ql/math/interpolations/linearinterpolation.hpp" bodystart="72" bodyend="106"/>
    <listofallmembers>
      <member refid="classQuantLib_1_1detail_1_1LinearInterpolationImpl_1aba1ce0f1d924068d76de9c4a8f3dbaf8" prot="public" virt="virtual"><scope>QuantLib::detail::LinearInterpolationImpl</scope><name>derivative</name></member>
      <member refid="classQuantLib_1_1Interpolation_1_1templateImpl_1aa1a96576884df7179393ce68928a85c2" prot="public" virt="virtual"><scope>QuantLib::detail::LinearInterpolationImpl</scope><name>isInRange</name></member>
      <member refid="classQuantLib_1_1detail_1_1LinearInterpolationImpl_1abab6b049e1a3febe1fee51f4c7464713" prot="public" virt="non-virtual"><scope>QuantLib::detail::LinearInterpolationImpl</scope><name>LinearInterpolationImpl</name></member>
      <member refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a2884268a09723fa87ec7146750d2d46c" prot="protected" virt="non-virtual"><scope>QuantLib::detail::LinearInterpolationImpl</scope><name>locate</name></member>
      <member refid="classQuantLib_1_1detail_1_1LinearInterpolationImpl_1a86fa8be1241c57947b4c96cf78baea24" prot="public" virt="virtual"><scope>QuantLib::detail::LinearInterpolationImpl</scope><name>primitive</name></member>
      <member refid="classQuantLib_1_1detail_1_1LinearInterpolationImpl_1a1793e20a0d7d1bd0accba87d8e2ca8bf" prot="private" virt="non-virtual"><scope>QuantLib::detail::LinearInterpolationImpl</scope><name>primitiveConst_</name></member>
      <member refid="classQuantLib_1_1detail_1_1LinearInterpolationImpl_1a3e3fbb436fcc092632de496ed4ed33f5" prot="private" virt="non-virtual"><scope>QuantLib::detail::LinearInterpolationImpl</scope><name>s_</name></member>
      <member refid="classQuantLib_1_1detail_1_1LinearInterpolationImpl_1a00cd80a08a63eafee6bef5559f225b8c" prot="public" virt="virtual"><scope>QuantLib::detail::LinearInterpolationImpl</scope><name>secondDerivative</name></member>
      <member refid="classQuantLib_1_1Interpolation_1_1templateImpl_1afd70a6545d200055b1e7fd3ac6cc3f45" prot="public" virt="non-virtual"><scope>QuantLib::detail::LinearInterpolationImpl</scope><name>templateImpl</name></member>
      <member refid="classQuantLib_1_1detail_1_1LinearInterpolationImpl_1adccc123ded02a76a336320c17fed8ac3" prot="public" virt="virtual"><scope>QuantLib::detail::LinearInterpolationImpl</scope><name>update</name></member>
      <member refid="classQuantLib_1_1detail_1_1LinearInterpolationImpl_1a63596c75669c68891ed4ce8bb43887c2" prot="public" virt="virtual"><scope>QuantLib::detail::LinearInterpolationImpl</scope><name>value</name></member>
      <member refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" prot="protected" virt="non-virtual"><scope>QuantLib::detail::LinearInterpolationImpl</scope><name>xBegin_</name></member>
      <member refid="classQuantLib_1_1Interpolation_1_1templateImpl_1ae31c6c02580a0b25b0e9c64fad90604a" prot="protected" virt="non-virtual"><scope>QuantLib::detail::LinearInterpolationImpl</scope><name>xEnd_</name></member>
      <member refid="classQuantLib_1_1Interpolation_1_1templateImpl_1af2ee8595e097522bbac466d2e036a536" prot="public" virt="virtual"><scope>QuantLib::detail::LinearInterpolationImpl</scope><name>xMax</name></member>
      <member refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adfc3310f6f3ea269f80c21cbc9cd2480" prot="public" virt="virtual"><scope>QuantLib::detail::LinearInterpolationImpl</scope><name>xMin</name></member>
      <member refid="classQuantLib_1_1Interpolation_1_1templateImpl_1ae58e26280490791d1704b518e4461713" prot="public" virt="virtual"><scope>QuantLib::detail::LinearInterpolationImpl</scope><name>xValues</name></member>
      <member refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adef37d429d0186d836878f1cc9ae3c71" prot="protected" virt="non-virtual"><scope>QuantLib::detail::LinearInterpolationImpl</scope><name>yBegin_</name></member>
      <member refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a745482b424f51c5726caa0cc6412f1a0" prot="public" virt="virtual"><scope>QuantLib::detail::LinearInterpolationImpl</scope><name>yValues</name></member>
      <member refid="classQuantLib_1_1Interpolation_1_1Impl_1aac2065f5fde38ec969bdcb7a99430e92" prot="public" virt="virtual"><scope>QuantLib::detail::LinearInterpolationImpl</scope><name>~Impl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
