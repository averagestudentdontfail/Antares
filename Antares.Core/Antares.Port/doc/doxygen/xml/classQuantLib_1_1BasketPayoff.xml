<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classQuantLib_1_1BasketPayoff" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::BasketPayoff</compoundname>
    <basecompoundref refid="classQuantLib_1_1Payoff" prot="public" virt="non-virtual">QuantLib::Payoff</basecompoundref>
    <derivedcompoundref refid="classQuantLib_1_1AverageBasketPayoff" prot="public" virt="non-virtual">QuantLib::AverageBasketPayoff</derivedcompoundref>
    <derivedcompoundref refid="classQuantLib_1_1MaxBasketPayoff" prot="public" virt="non-virtual">QuantLib::MaxBasketPayoff</derivedcompoundref>
    <derivedcompoundref refid="classQuantLib_1_1MinBasketPayoff" prot="public" virt="non-virtual">QuantLib::MinBasketPayoff</derivedcompoundref>
    <derivedcompoundref refid="classQuantLib_1_1SpreadBasketPayoff" prot="public" virt="non-virtual">QuantLib::SpreadBasketPayoff</derivedcompoundref>
    <includes refid="basketoption_8hpp" local="no">basketoption.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQuantLib_1_1BasketPayoff_1a6bfc908036186c541ad9072bc88af325" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="classQuantLib_1_1Payoff" kindref="compound">Payoff</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;Payoff&gt; QuantLib::BasketPayoff::basePayoff_</definition>
        <argsstring></argsstring>
        <name>basePayoff_</name>
        <qualifiedname>QuantLib::BasketPayoff::basePayoff_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/basketoption.hpp" line="38" column="25" bodyfile="ql/instruments/basketoption.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classQuantLib_1_1BasketPayoff_1aca56f6897d27bc5a1ba5e79cca095c6d" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::BasketPayoff::BasketPayoff</definition>
        <argsstring>(ext::shared_ptr&lt; Payoff &gt; p)</argsstring>
        <name>BasketPayoff</name>
        <qualifiedname>QuantLib::BasketPayoff::BasketPayoff</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="classQuantLib_1_1Payoff" kindref="compound">Payoff</ref> &gt;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/basketoption.hpp" line="40" column="18" bodyfile="ql/instruments/basketoption.hpp" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1BasketPayoff_1a2ab7615bc9409a79eb6d3265bdf023af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::BasketPayoff::~BasketPayoff</definition>
        <argsstring>() override=default</argsstring>
        <name>~BasketPayoff</name>
        <qualifiedname>QuantLib::BasketPayoff::~BasketPayoff</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/basketoption.hpp" line="41" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1BasketPayoff_1a7d5c7a0c081e9e48a74b86efdc535635" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string QuantLib::BasketPayoff::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <qualifiedname>QuantLib::BasketPayoff::name</qualifiedname>
        <reimplements refid="classQuantLib_1_1Payoff_1aceb029d314fb74ab5797d7bc7752d0c8">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This method is used for output and comparison between payoffs. It is <bold>not</bold> meant to be used for writing switch-on-type code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/basketoption.hpp" line="42" column="21" bodyfile="ql/instruments/basketoption.hpp" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1BasketPayoff_1a1de7557061770800c5d321b151a87699" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string QuantLib::BasketPayoff::description</definition>
        <argsstring>() const override</argsstring>
        <name>description</name>
        <qualifiedname>QuantLib::BasketPayoff::description</qualifiedname>
        <reimplements refid="classQuantLib_1_1Payoff_1a0f2a1e491b9cf7411a3759c2fd7ed90e">description</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/basketoption.hpp" line="43" column="21" bodyfile="ql/instruments/basketoption.hpp" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1BasketPayoff_1ab148f1625b9b0df38349a9618e2e38b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::BasketPayoff::operator()</definition>
        <argsstring>(Real price) const override</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::BasketPayoff::operator()</qualifiedname>
        <reimplements refid="classQuantLib_1_1Payoff_1a1b10d7224a8089b21a56eb1fa0562c37">operator()</reimplements>
        <param>
          <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>price</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/basketoption.hpp" line="44" column="14" bodyfile="ql/instruments/basketoption.hpp" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1BasketPayoff_1a11c7d5e06bc4eb3863e9bca116709bcd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::BasketPayoff::operator()</definition>
        <argsstring>(const Array &amp;a) const</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::BasketPayoff::operator()</qualifiedname>
        <param>
          <type>const <ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/basketoption.hpp" line="45" column="22" bodyfile="ql/instruments/basketoption.hpp" bodystart="45" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1BasketPayoff_1ad69caa715fffe7b780c41d8673adad30" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::BasketPayoff::accumulate</definition>
        <argsstring>(const Array &amp;a) const =0</argsstring>
        <name>accumulate</name>
        <qualifiedname>QuantLib::BasketPayoff::accumulate</qualifiedname>
        <reimplementedby refid="classQuantLib_1_1MinBasketPayoff_1a4f51afc25662b008eace8db04245fcda">accumulate</reimplementedby>
        <reimplementedby refid="classQuantLib_1_1MaxBasketPayoff_1a59c62385ef0127e5660e792ccbdc0348">accumulate</reimplementedby>
        <reimplementedby refid="classQuantLib_1_1AverageBasketPayoff_1a8018f262e94874506cad1c9db3704fee">accumulate</reimplementedby>
        <reimplementedby refid="classQuantLib_1_1SpreadBasketPayoff_1a09e42f99a769a0eafa443a0a8f89ea4a">accumulate</reimplementedby>
        <param>
          <type>const <ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/basketoption.hpp" line="48" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1BasketPayoff_1afd326917aeaedf6f7262cedee234a53f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="classQuantLib_1_1Payoff" kindref="compound">Payoff</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; Payoff &gt; QuantLib::BasketPayoff::basePayoff</definition>
        <argsstring>()</argsstring>
        <name>basePayoff</name>
        <qualifiedname>QuantLib::BasketPayoff::basePayoff</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/basketoption.hpp" line="49" column="25" bodyfile="ql/instruments/basketoption.hpp" bodystart="49" bodyend="49"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::AverageBasketPayoff</label>
        <link refid="classQuantLib_1_1AverageBasketPayoff"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::BasketPayoff</label>
        <link refid="classQuantLib_1_1BasketPayoff"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::MaxBasketPayoff</label>
        <link refid="classQuantLib_1_1MaxBasketPayoff"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::MinBasketPayoff</label>
        <link refid="classQuantLib_1_1MinBasketPayoff"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Payoff</label>
        <link refid="classQuantLib_1_1Payoff"/>
      </node>
      <node id="6">
        <label>QuantLib::SpreadBasketPayoff</label>
        <link refid="classQuantLib_1_1SpreadBasketPayoff"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::BasketPayoff</label>
        <link refid="classQuantLib_1_1BasketPayoff"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Payoff</label>
        <link refid="classQuantLib_1_1Payoff"/>
      </node>
    </collaborationgraph>
    <location file="ql/instruments/basketoption.hpp" line="36" column="5" bodyfile="ql/instruments/basketoption.hpp" bodystart="36" bodyend="50"/>
    <listofallmembers>
      <member refid="classQuantLib_1_1Payoff_1ac2902d1c8e84743671f759180fbff190" prot="public" virt="virtual"><scope>QuantLib::BasketPayoff</scope><name>accept</name></member>
      <member refid="classQuantLib_1_1BasketPayoff_1ad69caa715fffe7b780c41d8673adad30" prot="public" virt="pure-virtual"><scope>QuantLib::BasketPayoff</scope><name>accumulate</name></member>
      <member refid="classQuantLib_1_1BasketPayoff_1afd326917aeaedf6f7262cedee234a53f" prot="public" virt="non-virtual"><scope>QuantLib::BasketPayoff</scope><name>basePayoff</name></member>
      <member refid="classQuantLib_1_1BasketPayoff_1a6bfc908036186c541ad9072bc88af325" prot="private" virt="non-virtual"><scope>QuantLib::BasketPayoff</scope><name>basePayoff_</name></member>
      <member refid="classQuantLib_1_1BasketPayoff_1aca56f6897d27bc5a1ba5e79cca095c6d" prot="public" virt="non-virtual"><scope>QuantLib::BasketPayoff</scope><name>BasketPayoff</name></member>
      <member refid="classQuantLib_1_1BasketPayoff_1a1de7557061770800c5d321b151a87699" prot="public" virt="virtual"><scope>QuantLib::BasketPayoff</scope><name>description</name></member>
      <member refid="classQuantLib_1_1BasketPayoff_1a7d5c7a0c081e9e48a74b86efdc535635" prot="public" virt="virtual"><scope>QuantLib::BasketPayoff</scope><name>name</name></member>
      <member refid="classQuantLib_1_1BasketPayoff_1ab148f1625b9b0df38349a9618e2e38b0" prot="public" virt="virtual"><scope>QuantLib::BasketPayoff</scope><name>operator()</name></member>
      <member refid="classQuantLib_1_1BasketPayoff_1a11c7d5e06bc4eb3863e9bca116709bcd" prot="public" virt="virtual"><scope>QuantLib::BasketPayoff</scope><name>operator()</name></member>
      <member refid="classQuantLib_1_1BasketPayoff_1a2ab7615bc9409a79eb6d3265bdf023af" prot="public" virt="non-virtual"><scope>QuantLib::BasketPayoff</scope><name>~BasketPayoff</name></member>
      <member refid="classQuantLib_1_1Payoff_1a7067fc920554af30af0ac5b82d0f4650" prot="public" virt="virtual"><scope>QuantLib::BasketPayoff</scope><name>~Payoff</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
