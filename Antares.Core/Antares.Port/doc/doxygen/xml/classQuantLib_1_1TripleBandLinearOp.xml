<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classQuantLib_1_1TripleBandLinearOp" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::TripleBandLinearOp</compoundname>
    <basecompoundref refid="classQuantLib_1_1FdmLinearOp" prot="public" virt="non-virtual">QuantLib::FdmLinearOp</basecompoundref>
    <derivedcompoundref refid="classQuantLib_1_1FirstDerivativeOp" prot="public" virt="non-virtual">QuantLib::FirstDerivativeOp</derivedcompoundref>
    <derivedcompoundref refid="classQuantLib_1_1SecondDerivativeOp" prot="public" virt="non-virtual">QuantLib::SecondDerivativeOp</derivedcompoundref>
    <includes refid="triplebandlinearop_8hpp" local="no">triplebandlinearop.hpp</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classQuantLib_1_1TripleBandLinearOp_1ab6331fc9efd8b906672ff073b0b35a89" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::TripleBandLinearOp::direction_</definition>
        <argsstring></argsstring>
        <name>direction_</name>
        <qualifiedname>QuantLib::TripleBandLinearOp::direction_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" line="69" column="14" bodyfile="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1TripleBandLinearOp_1a8090712481d0a4804d7c5ae785dd0c55" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>[]&gt;</type>
        <definition>std::unique_ptr&lt;Size[]&gt; QuantLib::TripleBandLinearOp::i0_</definition>
        <argsstring></argsstring>
        <name>i0_</name>
        <qualifiedname>QuantLib::TripleBandLinearOp::i0_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" line="70" column="25" bodyfile="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1TripleBandLinearOp_1ab879ee2a9d5d8a2237dc02a8cc2cb81d" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>[]&gt;</type>
        <definition>std::unique_ptr&lt;Size[]&gt; QuantLib::TripleBandLinearOp::i2_</definition>
        <argsstring></argsstring>
        <name>i2_</name>
        <qualifiedname>QuantLib::TripleBandLinearOp::i2_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" line="70" column="29" bodyfile="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1TripleBandLinearOp_1a3a93e0fc67286fa87306aed07ca5908f" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>[]&gt;</type>
        <definition>std::unique_ptr&lt;Size[]&gt; QuantLib::TripleBandLinearOp::reverseIndex_</definition>
        <argsstring></argsstring>
        <name>reverseIndex_</name>
        <qualifiedname>QuantLib::TripleBandLinearOp::reverseIndex_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" line="71" column="25" bodyfile="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1TripleBandLinearOp_1a648cccc7b34902f7992d21d6b65fec02" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>[]&gt;</type>
        <definition>std::unique_ptr&lt;Real[]&gt; QuantLib::TripleBandLinearOp::lower_</definition>
        <argsstring></argsstring>
        <name>lower_</name>
        <qualifiedname>QuantLib::TripleBandLinearOp::lower_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" line="72" column="25" bodyfile="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1TripleBandLinearOp_1a38e93a18fec7ff6234d04ee8367138d3" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>[]&gt;</type>
        <definition>std::unique_ptr&lt;Real[]&gt; QuantLib::TripleBandLinearOp::diag_</definition>
        <argsstring></argsstring>
        <name>diag_</name>
        <qualifiedname>QuantLib::TripleBandLinearOp::diag_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" line="72" column="32" bodyfile="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1TripleBandLinearOp_1a28f73868dfeecb713b9bc77e0baa5a72" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>[]&gt;</type>
        <definition>std::unique_ptr&lt;Real[]&gt; QuantLib::TripleBandLinearOp::upper_</definition>
        <argsstring></argsstring>
        <name>upper_</name>
        <qualifiedname>QuantLib::TripleBandLinearOp::upper_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" line="72" column="38" bodyfile="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1TripleBandLinearOp_1a17f8b7d866160977b8e6c23aa5aa900e" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="classQuantLib_1_1FdmMesher" kindref="compound">FdmMesher</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;FdmMesher&gt; QuantLib::TripleBandLinearOp::mesher_</definition>
        <argsstring></argsstring>
        <name>mesher_</name>
        <qualifiedname>QuantLib::TripleBandLinearOp::mesher_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" line="74" column="25" bodyfile="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classQuantLib_1_1TripleBandLinearOp_1a5ed4410a838ce48884c93e4b11700483" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::TripleBandLinearOp::TripleBandLinearOp</definition>
        <argsstring>(Size direction, const ext::shared_ptr&lt; FdmMesher &gt; &amp;mesher)</argsstring>
        <name>TripleBandLinearOp</name>
        <qualifiedname>QuantLib::TripleBandLinearOp::TripleBandLinearOp</qualifiedname>
        <param>
          <type><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="classQuantLib_1_1FdmMesher" kindref="compound">FdmMesher</ref> &gt; &amp;</type>
          <declname>mesher</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" line="39" column="9" bodyfile="ql/methods/finitedifferences/operators/triplebandlinearop.cpp" bodystart="30" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TripleBandLinearOp_1a54b660f4c8bec978097f6fea0b41a3a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::TripleBandLinearOp::TripleBandLinearOp</definition>
        <argsstring>(const TripleBandLinearOp &amp;m)</argsstring>
        <name>TripleBandLinearOp</name>
        <qualifiedname>QuantLib::TripleBandLinearOp::TripleBandLinearOp</qualifiedname>
        <param>
          <type>const <ref refid="classQuantLib_1_1TripleBandLinearOp" kindref="compound">TripleBandLinearOp</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" line="42" column="9" bodyfile="ql/methods/finitedifferences/operators/triplebandlinearop.cpp" bodystart="61" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TripleBandLinearOp_1ab32373084c5144ed9543679000b1afbd" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::TripleBandLinearOp::TripleBandLinearOp</definition>
        <argsstring>(TripleBandLinearOp &amp;&amp;m) noexcept</argsstring>
        <name>TripleBandLinearOp</name>
        <qualifiedname>QuantLib::TripleBandLinearOp::TripleBandLinearOp</qualifiedname>
        <param>
          <type><ref refid="classQuantLib_1_1TripleBandLinearOp" kindref="compound">TripleBandLinearOp</ref> &amp;&amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" line="43" column="9" bodyfile="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TripleBandLinearOp_1a7a6ceac87bf5e64a84228863c87bad3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQuantLib_1_1TripleBandLinearOp" kindref="compound">TripleBandLinearOp</ref> &amp;</type>
        <definition>TripleBandLinearOp &amp; QuantLib::TripleBandLinearOp::operator=</definition>
        <argsstring>(const TripleBandLinearOp &amp;m)</argsstring>
        <name>operator=</name>
        <qualifiedname>QuantLib::TripleBandLinearOp::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classQuantLib_1_1TripleBandLinearOp" kindref="compound">TripleBandLinearOp</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" line="44" column="28" bodyfile="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" bodystart="82" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TripleBandLinearOp_1aeef61fdf78ac634db13f299966f39cb9" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classQuantLib_1_1TripleBandLinearOp" kindref="compound">TripleBandLinearOp</ref> &amp;</type>
        <definition>TripleBandLinearOp &amp; QuantLib::TripleBandLinearOp::operator=</definition>
        <argsstring>(TripleBandLinearOp &amp;&amp;m) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>QuantLib::TripleBandLinearOp::operator=</qualifiedname>
        <param>
          <type><ref refid="classQuantLib_1_1TripleBandLinearOp" kindref="compound">TripleBandLinearOp</ref> &amp;&amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" line="45" column="28" bodyfile="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TripleBandLinearOp_1af03d1986e3fc0ce793ec6eb072743879" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::TripleBandLinearOp::~TripleBandLinearOp</definition>
        <argsstring>() override=default</argsstring>
        <name>~TripleBandLinearOp</name>
        <qualifiedname>QuantLib::TripleBandLinearOp::~TripleBandLinearOp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" line="46" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TripleBandLinearOp_1ac88145891f92b2e962c2e231bdc592d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::TripleBandLinearOp::apply</definition>
        <argsstring>(const Array &amp;r) const override</argsstring>
        <name>apply</name>
        <qualifiedname>QuantLib::TripleBandLinearOp::apply</qualifiedname>
        <reimplements refid="classQuantLib_1_1FdmLinearOp_1a9d59d8bb3597206db60f61c3f448c211">apply</reimplements>
        <param>
          <type>const <ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" line="48" column="15" bodyfile="ql/methods/finitedifferences/operators/triplebandlinearop.cpp" bodystart="224" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TripleBandLinearOp_1a037a0985a02026f1c057b5f29124c812" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::TripleBandLinearOp::solve_splitting</definition>
        <argsstring>(const Array &amp;r, Real a, Real b=1.0) const</argsstring>
        <name>solve_splitting</name>
        <qualifiedname>QuantLib::TripleBandLinearOp::solve_splitting</qualifiedname>
        <param>
          <type>const <ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>b</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" line="49" column="15" bodyfile="ql/methods/finitedifferences/operators/triplebandlinearop.cpp" bodystart="256" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TripleBandLinearOp_1a361a4e52bac301284a924dea5e89f9ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQuantLib_1_1TripleBandLinearOp" kindref="compound">TripleBandLinearOp</ref></type>
        <definition>TripleBandLinearOp QuantLib::TripleBandLinearOp::mult</definition>
        <argsstring>(const Array &amp;u) const</argsstring>
        <name>mult</name>
        <qualifiedname>QuantLib::TripleBandLinearOp::mult</qualifiedname>
        <param>
          <type>const <ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref> &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" line="51" column="28" bodyfile="ql/methods/finitedifferences/operators/triplebandlinearop.cpp" bodystart="175" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TripleBandLinearOp_1a888e28c3ae53750d91a309a1e885881e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQuantLib_1_1TripleBandLinearOp" kindref="compound">TripleBandLinearOp</ref></type>
        <definition>TripleBandLinearOp QuantLib::TripleBandLinearOp::multR</definition>
        <argsstring>(const Array &amp;u) const</argsstring>
        <name>multR</name>
        <qualifiedname>QuantLib::TripleBandLinearOp::multR</qualifiedname>
        <param>
          <type>const <ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref> &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" line="53" column="28" bodyfile="ql/methods/finitedifferences/operators/triplebandlinearop.cpp" bodystart="191" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TripleBandLinearOp_1ab819b99e5a5818058361c257d8ef84d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQuantLib_1_1TripleBandLinearOp" kindref="compound">TripleBandLinearOp</ref></type>
        <definition>TripleBandLinearOp QuantLib::TripleBandLinearOp::add</definition>
        <argsstring>(const TripleBandLinearOp &amp;m) const</argsstring>
        <name>add</name>
        <qualifiedname>QuantLib::TripleBandLinearOp::add</qualifiedname>
        <param>
          <type>const <ref refid="classQuantLib_1_1TripleBandLinearOp" kindref="compound">TripleBandLinearOp</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" line="55" column="28" bodyfile="ql/methods/finitedifferences/operators/triplebandlinearop.cpp" bodystart="160" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TripleBandLinearOp_1abe3d5a7cbebcfbd638ecc9e817e81afa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQuantLib_1_1TripleBandLinearOp" kindref="compound">TripleBandLinearOp</ref></type>
        <definition>TripleBandLinearOp QuantLib::TripleBandLinearOp::add</definition>
        <argsstring>(const Array &amp;u) const</argsstring>
        <name>add</name>
        <qualifiedname>QuantLib::TripleBandLinearOp::add</qualifiedname>
        <param>
          <type>const <ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref> &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" line="56" column="28" bodyfile="ql/methods/finitedifferences/operators/triplebandlinearop.cpp" bodystart="209" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TripleBandLinearOp_1a182ab2d770910b37f942446c1e972440" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::TripleBandLinearOp::axpyb</definition>
        <argsstring>(const Array &amp;a, const TripleBandLinearOp &amp;x, const TripleBandLinearOp &amp;y, const Array &amp;b)</argsstring>
        <name>axpyb</name>
        <qualifiedname>QuantLib::TripleBandLinearOp::axpyb</qualifiedname>
        <param>
          <type>const <ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1TripleBandLinearOp" kindref="compound">TripleBandLinearOp</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1TripleBandLinearOp" kindref="compound">TripleBandLinearOp</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" line="59" column="14" bodyfile="ql/methods/finitedifferences/operators/triplebandlinearop.cpp" bodystart="89" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TripleBandLinearOp_1a1126a535da13638228329f327b4c2caa" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::TripleBandLinearOp::swap</definition>
        <argsstring>(TripleBandLinearOp &amp;m) noexcept</argsstring>
        <name>swap</name>
        <qualifiedname>QuantLib::TripleBandLinearOp::swap</qualifiedname>
        <param>
          <type><ref refid="classQuantLib_1_1TripleBandLinearOp" kindref="compound">TripleBandLinearOp</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" line="62" column="14" bodyfile="ql/methods/finitedifferences/operators/triplebandlinearop.cpp" bodystart="80" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1TripleBandLinearOp_1a49b67b45b712d6943f22d5c54ef78576" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceQuantLib_1a92b8d18d2ff98d5c92d103939bba4a52" kindref="member">SparseMatrix</ref></type>
        <definition>SparseMatrix QuantLib::TripleBandLinearOp::toMatrix</definition>
        <argsstring>() const override</argsstring>
        <name>toMatrix</name>
        <qualifiedname>QuantLib::TripleBandLinearOp::toMatrix</qualifiedname>
        <reimplements refid="classQuantLib_1_1FdmLinearOp_1a32b6761dc11909646700747d33ef710c">toMatrix</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" line="64" column="22" bodyfile="ql/methods/finitedifferences/operators/triplebandlinearop.cpp" bodystart="242" bodyend="253"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="classQuantLib_1_1TripleBandLinearOp_1a387229aefe1a8b00810d06350b309924" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::TripleBandLinearOp::TripleBandLinearOp</definition>
        <argsstring>()=default</argsstring>
        <name>TripleBandLinearOp</name>
        <qualifiedname>QuantLib::TripleBandLinearOp::TripleBandLinearOp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" line="67" column="9"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::FdmLinearOp</label>
        <link refid="classQuantLib_1_1FdmLinearOp"/>
      </node>
      <node id="3">
        <label>QuantLib::FirstDerivativeOp</label>
        <link refid="classQuantLib_1_1FirstDerivativeOp"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::SecondDerivativeOp</label>
        <link refid="classQuantLib_1_1SecondDerivativeOp"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::TripleBandLinearOp</label>
        <link refid="classQuantLib_1_1TripleBandLinearOp"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::FdmLinearOp</label>
        <link refid="classQuantLib_1_1FdmLinearOp"/>
      </node>
      <node id="1">
        <label>QuantLib::TripleBandLinearOp</label>
        <link refid="classQuantLib_1_1TripleBandLinearOp"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" line="37" column="5" bodyfile="ql/methods/finitedifferences/operators/triplebandlinearop.hpp" bodystart="37" bodyend="75"/>
    <listofallmembers>
      <member refid="classQuantLib_1_1TripleBandLinearOp_1ab819b99e5a5818058361c257d8ef84d7" prot="public" virt="non-virtual"><scope>QuantLib::TripleBandLinearOp</scope><name>add</name></member>
      <member refid="classQuantLib_1_1TripleBandLinearOp_1abe3d5a7cbebcfbd638ecc9e817e81afa" prot="public" virt="non-virtual"><scope>QuantLib::TripleBandLinearOp</scope><name>add</name></member>
      <member refid="classQuantLib_1_1TripleBandLinearOp_1ac88145891f92b2e962c2e231bdc592d5" prot="public" virt="virtual"><scope>QuantLib::TripleBandLinearOp</scope><name>apply</name></member>
      <member refid="classQuantLib_1_1FdmLinearOp_1af55693593c0cf7e885c67fd848f76e49" prot="public" virt="non-virtual"><scope>QuantLib::TripleBandLinearOp</scope><name>array_type</name></member>
      <member refid="classQuantLib_1_1TripleBandLinearOp_1a182ab2d770910b37f942446c1e972440" prot="public" virt="non-virtual"><scope>QuantLib::TripleBandLinearOp</scope><name>axpyb</name></member>
      <member refid="classQuantLib_1_1TripleBandLinearOp_1a38e93a18fec7ff6234d04ee8367138d3" prot="protected" virt="non-virtual"><scope>QuantLib::TripleBandLinearOp</scope><name>diag_</name></member>
      <member refid="classQuantLib_1_1TripleBandLinearOp_1ab6331fc9efd8b906672ff073b0b35a89" prot="protected" virt="non-virtual"><scope>QuantLib::TripleBandLinearOp</scope><name>direction_</name></member>
      <member refid="classQuantLib_1_1TripleBandLinearOp_1a8090712481d0a4804d7c5ae785dd0c55" prot="protected" virt="non-virtual"><scope>QuantLib::TripleBandLinearOp</scope><name>i0_</name></member>
      <member refid="classQuantLib_1_1TripleBandLinearOp_1ab879ee2a9d5d8a2237dc02a8cc2cb81d" prot="protected" virt="non-virtual"><scope>QuantLib::TripleBandLinearOp</scope><name>i2_</name></member>
      <member refid="classQuantLib_1_1TripleBandLinearOp_1a648cccc7b34902f7992d21d6b65fec02" prot="protected" virt="non-virtual"><scope>QuantLib::TripleBandLinearOp</scope><name>lower_</name></member>
      <member refid="classQuantLib_1_1TripleBandLinearOp_1a17f8b7d866160977b8e6c23aa5aa900e" prot="protected" virt="non-virtual"><scope>QuantLib::TripleBandLinearOp</scope><name>mesher_</name></member>
      <member refid="classQuantLib_1_1TripleBandLinearOp_1a361a4e52bac301284a924dea5e89f9ca" prot="public" virt="non-virtual"><scope>QuantLib::TripleBandLinearOp</scope><name>mult</name></member>
      <member refid="classQuantLib_1_1TripleBandLinearOp_1a888e28c3ae53750d91a309a1e885881e" prot="public" virt="non-virtual"><scope>QuantLib::TripleBandLinearOp</scope><name>multR</name></member>
      <member refid="classQuantLib_1_1TripleBandLinearOp_1a7a6ceac87bf5e64a84228863c87bad3b" prot="public" virt="non-virtual"><scope>QuantLib::TripleBandLinearOp</scope><name>operator=</name></member>
      <member refid="classQuantLib_1_1TripleBandLinearOp_1aeef61fdf78ac634db13f299966f39cb9" prot="public" virt="non-virtual"><scope>QuantLib::TripleBandLinearOp</scope><name>operator=</name></member>
      <member refid="classQuantLib_1_1TripleBandLinearOp_1a3a93e0fc67286fa87306aed07ca5908f" prot="protected" virt="non-virtual"><scope>QuantLib::TripleBandLinearOp</scope><name>reverseIndex_</name></member>
      <member refid="classQuantLib_1_1TripleBandLinearOp_1a037a0985a02026f1c057b5f29124c812" prot="public" virt="non-virtual"><scope>QuantLib::TripleBandLinearOp</scope><name>solve_splitting</name></member>
      <member refid="classQuantLib_1_1TripleBandLinearOp_1a1126a535da13638228329f327b4c2caa" prot="public" virt="non-virtual"><scope>QuantLib::TripleBandLinearOp</scope><name>swap</name></member>
      <member refid="classQuantLib_1_1TripleBandLinearOp_1a49b67b45b712d6943f22d5c54ef78576" prot="public" virt="virtual"><scope>QuantLib::TripleBandLinearOp</scope><name>toMatrix</name></member>
      <member refid="classQuantLib_1_1TripleBandLinearOp_1a5ed4410a838ce48884c93e4b11700483" prot="public" virt="non-virtual"><scope>QuantLib::TripleBandLinearOp</scope><name>TripleBandLinearOp</name></member>
      <member refid="classQuantLib_1_1TripleBandLinearOp_1a54b660f4c8bec978097f6fea0b41a3a1" prot="public" virt="non-virtual"><scope>QuantLib::TripleBandLinearOp</scope><name>TripleBandLinearOp</name></member>
      <member refid="classQuantLib_1_1TripleBandLinearOp_1ab32373084c5144ed9543679000b1afbd" prot="public" virt="non-virtual"><scope>QuantLib::TripleBandLinearOp</scope><name>TripleBandLinearOp</name></member>
      <member refid="classQuantLib_1_1TripleBandLinearOp_1a387229aefe1a8b00810d06350b309924" prot="protected" virt="non-virtual"><scope>QuantLib::TripleBandLinearOp</scope><name>TripleBandLinearOp</name></member>
      <member refid="classQuantLib_1_1TripleBandLinearOp_1a28f73868dfeecb713b9bc77e0baa5a72" prot="protected" virt="non-virtual"><scope>QuantLib::TripleBandLinearOp</scope><name>upper_</name></member>
      <member refid="classQuantLib_1_1FdmLinearOp_1aa6f29eb6144a1848c73c21e392f023e4" prot="public" virt="virtual"><scope>QuantLib::TripleBandLinearOp</scope><name>~FdmLinearOp</name></member>
      <member refid="classQuantLib_1_1TripleBandLinearOp_1af03d1986e3fc0ce793ec6eb072743879" prot="public" virt="non-virtual"><scope>QuantLib::TripleBandLinearOp</scope><name>~TripleBandLinearOp</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
