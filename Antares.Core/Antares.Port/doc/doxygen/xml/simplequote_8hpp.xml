<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="simplequote_8hpp" kind="file" language="C++">
    <compoundname>simplequote.hpp</compoundname>
    <includes refid="quote_8hpp" local="no">ql/quote.hpp</includes>
    <includedby refid="impliedvolatility_8hpp" local="no">ql/instruments/impliedvolatility.hpp</includedby>
    <includedby refid="quote_8cpp" local="no">ql/quote.cpp</includedby>
    <includedby refid="blackconstantvol_8hpp" local="no">ql/termstructures/volatility/equityfx/blackconstantvol.hpp</includedby>
    <includedby refid="localvolsurface_8cpp" local="no">ql/termstructures/volatility/equityfx/localvolsurface.cpp</includedby>
    <includedby refid="flatforward_8cpp" local="no">ql/termstructures/yield/flatforward.cpp</includedby>
    <incdepgraph>
      <node id="9">
        <label>ql/config.ansi.hpp</label>
        <link refid="config_8ansi_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ql/errors.hpp</label>
        <link refid="errors_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ql/handle.hpp</label>
        <link refid="handle_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ql/mathconstants.hpp</label>
        <link refid="mathconstants_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ql/patterns/observable.hpp</label>
        <link refid="observable_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>ql/patterns/singleton.hpp</label>
        <link refid="singleton_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>ql/qldefines.hpp</label>
        <link refid="qldefines_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ql/quote.hpp</label>
        <link refid="quote_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ql/quotes/simplequote.hpp</label>
        <link refid="simplequote_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ql/shared_ptr.hpp</label>
        <link refid="shared__ptr_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>ql/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ql/userconfig.hpp</label>
        <link refid="userconfig_8hpp"/>
      </node>
      <node id="28">
        <label>ql/utilities/null.hpp</label>
        <link refid="null_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>boost/assert.hpp</label>
      </node>
      <node id="7">
        <label>boost/config.hpp</label>
      </node>
      <node id="19">
        <label>boost/current_function.hpp</label>
      </node>
      <node id="17">
        <label>boost/enable_shared_from_this.hpp</label>
      </node>
      <node id="16">
        <label>boost/make_shared.hpp</label>
      </node>
      <node id="15">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="8">
        <label>boost/version.hpp</label>
      </node>
      <node id="12">
        <label>cmath</label>
      </node>
      <node id="25">
        <label>cstddef</label>
      </node>
      <node id="20">
        <label>exception</label>
      </node>
      <node id="13">
        <label>limits</label>
      </node>
      <node id="27">
        <label>set</label>
      </node>
      <node id="21">
        <label>sstream</label>
      </node>
      <node id="22">
        <label>string</label>
      </node>
      <node id="26">
        <label>type_traits</label>
      </node>
      <node id="29">
        <label>variant</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>ql/instruments/impliedvolatility.cpp</label>
        <link refid="impliedvolatility_8cpp"/>
      </node>
      <node id="2">
        <label>ql/instruments/impliedvolatility.hpp</label>
        <link refid="impliedvolatility_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ql/instruments/vanillaoption.cpp</label>
        <link refid="vanillaoption_8cpp"/>
      </node>
      <node id="7">
        <label>ql/methods/finitedifferences/meshers/fdmblackscholesmesher.cpp</label>
        <link refid="fdmblackscholesmesher_8cpp"/>
      </node>
      <node id="9">
        <label>ql/processes/blackscholesprocess.cpp</label>
        <link refid="blackscholesprocess_8cpp"/>
      </node>
      <node id="5">
        <label>ql/quote.cpp</label>
        <link refid="quote_8cpp"/>
      </node>
      <node id="1">
        <label>ql/quotes/simplequote.hpp</label>
        <link refid="simplequote_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>ql/termstructures/volatility/equityfx/blackconstantvol.hpp</label>
        <link refid="blackconstantvol_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ql/termstructures/volatility/equityfx/localconstantvol.hpp</label>
        <link refid="localconstantvol_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ql/termstructures/volatility/equityfx/localvolsurface.cpp</label>
        <link refid="localvolsurface_8cpp"/>
      </node>
      <node id="11">
        <label>ql/termstructures/yield/flatforward.cpp</label>
        <link refid="flatforward_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classQuantLib_1_1SimpleQuote" prot="public">QuantLib::SimpleQuote</innerclass>
    <innernamespace refid="namespaceQuantLib">QuantLib</innernamespace>
    <briefdescription>
<para>simple quote class </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>c++;<sp/>tab-width:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil;<sp/>c-basic-offset:<sp/>4<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2007<sp/>Ferdinando<sp/>Ametrano</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2000,<sp/>2001,<sp/>2002,<sp/>2003<sp/>RiskMap<sp/>srl</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>QuantLib,<sp/>a<sp/>free-software/open-source<sp/>library</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>for<sp/>financial<sp/>quantitative<sp/>analysts<sp/>and<sp/>developers<sp/>-<sp/>http://quantlib.org/</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>QuantLib<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>QuantLib<sp/>license.<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>copy<sp/>of<sp/>the<sp/>license<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>please<sp/>email</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>&lt;quantlib-dev@lists.sf.net&gt;.<sp/>The<sp/>license<sp/>is<sp/>also<sp/>available<sp/>online<sp/>at</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>&lt;http://quantlib.org/license.shtml&gt;.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>license<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="19"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>quantlib_simple_quote_hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>quantlib_simple_quote_hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="quote_8hpp" kindref="compound">ql/quote.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceQuantLib" kindref="compound">QuantLib</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classQuantLib_1_1SimpleQuote" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classQuantLib_1_1SimpleQuote" kindref="compound">SimpleQuote</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Quote" kindref="compound">Quote</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1SimpleQuote" kindref="compound">SimpleQuote</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1SimpleQuote_1ad804b8ec07ce9d114f20fbcd093b2730" kindref="member">value</ref><sp/>=<sp/><ref refid="classQuantLib_1_1Null" kindref="compound">Null&lt;Real&gt;</ref>());</highlight></codeline>
<codeline lineno="37"></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1SimpleQuote_1ad804b8ec07ce9d114f20fbcd093b2730" kindref="member">value</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1SimpleQuote_1a14ad2f936e4e327e31f6090cc09db2ea" kindref="member">isValid</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1SimpleQuote_1af336d9e3a6da94134cc3d46ff67c3955" kindref="member">setValue</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1SimpleQuote_1ad804b8ec07ce9d114f20fbcd093b2730" kindref="member">value</ref><sp/>=<sp/><ref refid="classQuantLib_1_1Null" kindref="compound">Null&lt;Real&gt;</ref>());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1SimpleQuote_1aec72f71aaf37f7427ceed49e2444d355" kindref="member">reset</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48" refid="classQuantLib_1_1SimpleQuote_1a8965c00cf1f775fe6d314029fd6ce467" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1SimpleQuote_1a8965c00cf1f775fe6d314029fd6ce467" kindref="member">value_</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1RelinkableHandle" kindref="compound">RelinkableHandle&lt;Quote&gt;</ref><sp/><ref refid="namespaceQuantLib_1a7564e44890fde5012ea227f78094a53d" kindref="member">makeQuoteHandle</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>value);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inline<sp/>definitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="namespaceQuantLib_1a7564e44890fde5012ea227f78094a53d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1RelinkableHandle" kindref="compound">RelinkableHandle&lt;Quote&gt;</ref><sp/><ref refid="namespaceQuantLib_1a7564e44890fde5012ea227f78094a53d" kindref="member">makeQuoteHandle</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1RelinkableHandle" kindref="compound">RelinkableHandle&lt;Quote&gt;</ref>(ext::make_shared&lt;SimpleQuote&gt;(value));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classQuantLib_1_1SimpleQuote_1a8c3bd21db9b8b84ef2f7344510fb8b3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1SimpleQuote_1a8c3bd21db9b8b84ef2f7344510fb8b3a" kindref="member">SimpleQuote::SimpleQuote</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>value)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>value_(value)<sp/>{}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classQuantLib_1_1SimpleQuote_1ad804b8ec07ce9d114f20fbcd093b2730" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1SimpleQuote_1ad804b8ec07ce9d114f20fbcd093b2730" kindref="member">SimpleQuote::value</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a394b39aa396098345f86d243f207f7af" kindref="member">QL_ENSURE</ref>(<ref refid="classQuantLib_1_1SimpleQuote_1a14ad2f936e4e327e31f6090cc09db2ea" kindref="member">isValid</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>SimpleQuote&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1SimpleQuote_1a8965c00cf1f775fe6d314029fd6ce467" kindref="member">value_</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classQuantLib_1_1SimpleQuote_1a14ad2f936e4e327e31f6090cc09db2ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1SimpleQuote_1a14ad2f936e4e327e31f6090cc09db2ea" kindref="member">SimpleQuote::isValid</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1SimpleQuote_1a8965c00cf1f775fe6d314029fd6ce467" kindref="member">value_</ref>!=<ref refid="classQuantLib_1_1Null" kindref="compound">Null&lt;Real&gt;</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classQuantLib_1_1SimpleQuote_1af336d9e3a6da94134cc3d46ff67c3955" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1SimpleQuote_1af336d9e3a6da94134cc3d46ff67c3955" kindref="member">SimpleQuote::setValue</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>diff<sp/>=<sp/><ref refid="classQuantLib_1_1SimpleQuote_1ad804b8ec07ce9d114f20fbcd093b2730" kindref="member">value</ref>-<ref refid="classQuantLib_1_1SimpleQuote_1a8965c00cf1f775fe6d314029fd6ce467" kindref="member">value_</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(diff<sp/>!=<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1SimpleQuote_1a8965c00cf1f775fe6d314029fd6ce467" kindref="member">value_</ref><sp/>=<sp/><ref refid="classQuantLib_1_1SimpleQuote_1ad804b8ec07ce9d114f20fbcd093b2730" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Observable_1afb67478418efdb94382ac9d7ae904b94" kindref="member">notifyObservers</ref>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>diff;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classQuantLib_1_1SimpleQuote_1aec72f71aaf37f7427ceed49e2444d355" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1SimpleQuote_1aec72f71aaf37f7427ceed49e2444d355" kindref="member">SimpleQuote::reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1SimpleQuote_1af336d9e3a6da94134cc3d46ff67c3955" kindref="member">setValue</ref>(<ref refid="classQuantLib_1_1Null" kindref="compound">Null&lt;Real&gt;</ref>());</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="ql/quotes/simplequote.hpp"/>
  </compounddef>
</doxygen>
