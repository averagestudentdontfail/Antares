<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="fdmlinearoplayout_8hpp" kind="file" language="C++">
    <compoundname>fdmlinearoplayout.hpp</compoundname>
    <includes refid="fdmlinearopiterator_8hpp" local="no">ql/methods/finitedifferences/operators/fdmlinearopiterator.hpp</includes>
    <includes local="no">functional</includes>
    <includedby refid="fdmmeshercomposite_8cpp" local="no">ql/methods/finitedifferences/meshers/fdmmeshercomposite.cpp</includedby>
    <includedby refid="fdmblackscholesop_8cpp" local="no">ql/methods/finitedifferences/operators/fdmblackscholesop.cpp</includedby>
    <includedby refid="fdmlinearoplayout_8cpp" local="no">ql/methods/finitedifferences/operators/fdmlinearoplayout.cpp</includedby>
    <includedby refid="firstderivativeop_8cpp" local="no">ql/methods/finitedifferences/operators/firstderivativeop.cpp</includedby>
    <includedby refid="secondderivativeop_8cpp" local="no">ql/methods/finitedifferences/operators/secondderivativeop.cpp</includedby>
    <includedby refid="triplebandlinearop_8cpp" local="no">ql/methods/finitedifferences/operators/triplebandlinearop.cpp</includedby>
    <includedby refid="fdm1dimsolver_8cpp" local="no">ql/methods/finitedifferences/solvers/fdm1dimsolver.cpp</includedby>
    <includedby refid="fdmamericanstepcondition_8cpp" local="no">ql/methods/finitedifferences/stepconditions/fdmamericanstepcondition.cpp</includedby>
    <includedby refid="fdmbermudanstepcondition_8cpp" local="no">ql/methods/finitedifferences/stepconditions/fdmbermudanstepcondition.cpp</includedby>
    <includedby refid="fdmdividendhandler_8cpp" local="no">ql/methods/finitedifferences/utilities/fdmdividendhandler.cpp</includedby>
    <includedby refid="fdminnervaluecalculator_8cpp" local="no">ql/methods/finitedifferences/utilities/fdminnervaluecalculator.cpp</includedby>
    <includedby refid="fdblackscholesvanillaengine_8cpp" local="no">ql/pricingengines/vanilla/fdblackscholesvanillaengine.cpp</includedby>
    <incdepgraph>
      <node id="7">
        <label>ql/config.ansi.hpp</label>
        <link refid="config_8ansi_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ql/mathconstants.hpp</label>
        <link refid="mathconstants_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ql/methods/finitedifferences/operators/fdmlinearopiterator.hpp</label>
        <link refid="fdmlinearopiterator_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ql/methods/finitedifferences/operators/fdmlinearoplayout.hpp</label>
        <link refid="fdmlinearoplayout_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ql/qldefines.hpp</label>
        <link refid="qldefines_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ql/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ql/userconfig.hpp</label>
        <link refid="userconfig_8hpp"/>
      </node>
      <node id="5">
        <label>boost/config.hpp</label>
      </node>
      <node id="6">
        <label>boost/version.hpp</label>
      </node>
      <node id="10">
        <label>cmath</label>
      </node>
      <node id="12">
        <label>cstddef</label>
      </node>
      <node id="16">
        <label>functional</label>
      </node>
      <node id="11">
        <label>limits</label>
      </node>
      <node id="13">
        <label>numeric</label>
      </node>
      <node id="14">
        <label>utility</label>
      </node>
      <node id="15">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>ql/methods/finitedifferences/meshers/fdmmeshercomposite.cpp</label>
        <link refid="fdmmeshercomposite_8cpp"/>
      </node>
      <node id="3">
        <label>ql/methods/finitedifferences/operators/fdmblackscholesop.cpp</label>
        <link refid="fdmblackscholesop_8cpp"/>
      </node>
      <node id="4">
        <label>ql/methods/finitedifferences/operators/fdmlinearoplayout.cpp</label>
        <link refid="fdmlinearoplayout_8cpp"/>
      </node>
      <node id="1">
        <label>ql/methods/finitedifferences/operators/fdmlinearoplayout.hpp</label>
        <link refid="fdmlinearoplayout_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ql/methods/finitedifferences/operators/firstderivativeop.cpp</label>
        <link refid="firstderivativeop_8cpp"/>
      </node>
      <node id="6">
        <label>ql/methods/finitedifferences/operators/secondderivativeop.cpp</label>
        <link refid="secondderivativeop_8cpp"/>
      </node>
      <node id="7">
        <label>ql/methods/finitedifferences/operators/triplebandlinearop.cpp</label>
        <link refid="triplebandlinearop_8cpp"/>
      </node>
      <node id="8">
        <label>ql/methods/finitedifferences/solvers/fdm1dimsolver.cpp</label>
        <link refid="fdm1dimsolver_8cpp"/>
      </node>
      <node id="9">
        <label>ql/methods/finitedifferences/stepconditions/fdmamericanstepcondition.cpp</label>
        <link refid="fdmamericanstepcondition_8cpp"/>
      </node>
      <node id="10">
        <label>ql/methods/finitedifferences/stepconditions/fdmbermudanstepcondition.cpp</label>
        <link refid="fdmbermudanstepcondition_8cpp"/>
      </node>
      <node id="11">
        <label>ql/methods/finitedifferences/utilities/fdmdividendhandler.cpp</label>
        <link refid="fdmdividendhandler_8cpp"/>
      </node>
      <node id="12">
        <label>ql/methods/finitedifferences/utilities/fdminnervaluecalculator.cpp</label>
        <link refid="fdminnervaluecalculator_8cpp"/>
      </node>
      <node id="13">
        <label>ql/pricingengines/vanilla/fdblackscholesvanillaengine.cpp</label>
        <link refid="fdblackscholesvanillaengine_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classQuantLib_1_1FdmLinearOpLayout" prot="public">QuantLib::FdmLinearOpLayout</innerclass>
    <innernamespace refid="namespaceQuantLib">QuantLib</innernamespace>
    <briefdescription>
<para>memory layout of a fdm linear operator </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>c++;<sp/>tab-width:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil;<sp/>c-basic-offset:<sp/>4<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2008<sp/>Andreas<sp/>Gaida</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2008<sp/>Ralph<sp/>Schreyer</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2008<sp/>Klaus<sp/>Spanderen</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>QuantLib,<sp/>a<sp/>free-software/open-source<sp/>library</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>for<sp/>financial<sp/>quantitative<sp/>analysts<sp/>and<sp/>developers<sp/>-<sp/>http://quantlib.org/</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>QuantLib<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>QuantLib<sp/>license.<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>copy<sp/>of<sp/>the<sp/>license<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>please<sp/>email</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>&lt;quantlib-dev@lists.sf.net&gt;.<sp/>The<sp/>license<sp/>is<sp/>also<sp/>available<sp/>online<sp/>at</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>&lt;http://quantlib.org/license.shtml&gt;.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>license<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>quantlib_linear_op_layout_hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>quantlib_linear_op_layout_hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="fdmlinearopiterator_8hpp" kindref="compound">ql/methods/finitedifferences/operators/fdmlinearopiterator.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceQuantLib" kindref="compound">QuantLib</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classQuantLib_1_1FdmLinearOpLayout" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classQuantLib_1_1FdmLinearOpLayout" kindref="compound">FdmLinearOpLayout</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36" refid="classQuantLib_1_1FdmLinearOpLayout_1a68b5b7aafee8feba33b18e22fadd6cb6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1FdmLinearOpLayout_1a68b5b7aafee8feba33b18e22fadd6cb6" kindref="member">FdmLinearOpLayout</ref>(std::vector&lt;Size&gt;<sp/><ref refid="classQuantLib_1_1FdmLinearOpLayout_1afa96e9363179f84f58d0695624b857b2" kindref="member">dim</ref>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classQuantLib_1_1FdmLinearOpLayout_1a1acc28a255c1d77ef9979b92bd111fae" kindref="member">dim_</ref>(<ref refid="namespacestd" kindref="compound">std</ref>::move(<ref refid="classQuantLib_1_1FdmLinearOpLayout_1afa96e9363179f84f58d0695624b857b2" kindref="member">dim</ref>)),<sp/><ref refid="classQuantLib_1_1FdmLinearOpLayout_1a620c2aeb554dfd7b191847b533c3513e" kindref="member">spacing_</ref>(<ref refid="classQuantLib_1_1FdmLinearOpLayout_1a1acc28a255c1d77ef9979b92bd111fae" kindref="member">dim_</ref>.<ref refid="classQuantLib_1_1FdmLinearOpLayout_1af14dd0b676e3eb31b97804928aed24f1" kindref="member">size</ref>())<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1FdmLinearOpLayout_1a620c2aeb554dfd7b191847b533c3513e" kindref="member">spacing_</ref>[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::partial_sum(<ref refid="classQuantLib_1_1FdmLinearOpLayout_1a1acc28a255c1d77ef9979b92bd111fae" kindref="member">dim_</ref>.begin(),<sp/><ref refid="classQuantLib_1_1FdmLinearOpLayout_1a1acc28a255c1d77ef9979b92bd111fae" kindref="member">dim_</ref>.end()-1,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1FdmLinearOpLayout_1a620c2aeb554dfd7b191847b533c3513e" kindref="member">spacing_</ref>.begin()+1,<sp/>std::multiplies&lt;&gt;());</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1FdmLinearOpLayout_1a9a4eccae9f654e6b64dccafc4c482a58" kindref="member">size_</ref><sp/>=<sp/><ref refid="classQuantLib_1_1FdmLinearOpLayout_1a620c2aeb554dfd7b191847b533c3513e" kindref="member">spacing_</ref>.back()*<ref refid="classQuantLib_1_1FdmLinearOpLayout_1a1acc28a255c1d77ef9979b92bd111fae" kindref="member">dim_</ref>.back();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classQuantLib_1_1FdmLinearOpLayout_1a775a160b232d9746dee890d6c9541928" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1FdmLinearOpIterator" kindref="compound">FdmLinearOpIterator</ref><sp/><ref refid="classQuantLib_1_1FdmLinearOpLayout_1a775a160b232d9746dee890d6c9541928" kindref="member">begin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1FdmLinearOpIterator" kindref="compound">FdmLinearOpIterator</ref>(<ref refid="classQuantLib_1_1FdmLinearOpLayout_1a1acc28a255c1d77ef9979b92bd111fae" kindref="member">dim_</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classQuantLib_1_1FdmLinearOpLayout_1aeb711b463ed70ac1d08429742e234470" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1FdmLinearOpIterator" kindref="compound">FdmLinearOpIterator</ref><sp/><ref refid="classQuantLib_1_1FdmLinearOpLayout_1aeb711b463ed70ac1d08429742e234470" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1FdmLinearOpIterator" kindref="compound">FdmLinearOpIterator</ref>(<ref refid="classQuantLib_1_1FdmLinearOpLayout_1a9a4eccae9f654e6b64dccafc4c482a58" kindref="member">size_</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classQuantLib_1_1FdmLinearOpLayout_1afa96e9363179f84f58d0695624b857b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Size&gt;&amp;<sp/><ref refid="classQuantLib_1_1FdmLinearOpLayout_1afa96e9363179f84f58d0695624b857b2" kindref="member">dim</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1FdmLinearOpLayout_1a1acc28a255c1d77ef9979b92bd111fae" kindref="member">dim_</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classQuantLib_1_1FdmLinearOpLayout_1a231d534322ba7026e5db941ab432c757" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Size&gt;&amp;<sp/><ref refid="classQuantLib_1_1FdmLinearOpLayout_1a231d534322ba7026e5db941ab432c757" kindref="member">spacing</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1FdmLinearOpLayout_1a620c2aeb554dfd7b191847b533c3513e" kindref="member">spacing_</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classQuantLib_1_1FdmLinearOpLayout_1af14dd0b676e3eb31b97804928aed24f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1FdmLinearOpLayout_1af14dd0b676e3eb31b97804928aed24f1" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1FdmLinearOpLayout_1a9a4eccae9f654e6b64dccafc4c482a58" kindref="member">size_</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classQuantLib_1_1FdmLinearOpLayout_1ac2ead8ec875d708abdf5bc72de3eaedc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1FdmLinearOpLayout_1ac2ead8ec875d708abdf5bc72de3eaedc" kindref="member">index</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Size&gt;&amp;<sp/>coordinates)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::inner_product(coordinates.begin(),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coordinates.end(),</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1FdmLinearOpLayout_1a620c2aeb554dfd7b191847b533c3513e" kindref="member">spacing_</ref>.begin(),<sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>(0));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1FdmLinearOpLayout_1a52c9c89a1f3df9d76a80375c36fc81fb" kindref="member">neighbourhood</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1FdmLinearOpIterator" kindref="compound">FdmLinearOpIterator</ref>&amp;<sp/>iterator,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i,<sp/><ref refid="namespaceQuantLib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref><sp/>offset)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1FdmLinearOpLayout_1a52c9c89a1f3df9d76a80375c36fc81fb" kindref="member">neighbourhood</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1FdmLinearOpIterator" kindref="compound">FdmLinearOpIterator</ref>&amp;<sp/>iterator,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i1,<sp/><ref refid="namespaceQuantLib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref><sp/>offset1,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i2,<sp/><ref refid="namespaceQuantLib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref><sp/>offset2)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>smart<sp/>but<sp/>sometimes<sp/>too<sp/>slow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1FdmLinearOpIterator" kindref="compound">FdmLinearOpIterator</ref><sp/><ref refid="classQuantLib_1_1FdmLinearOpLayout_1a771c2fb7519f5b046730d3b014e68b01" kindref="member">iter_neighbourhood</ref>(</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1FdmLinearOpIterator" kindref="compound">FdmLinearOpIterator</ref>&amp;<sp/>iterator,<sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i,<sp/><ref refid="namespaceQuantLib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref><sp/>offset)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="83" refid="classQuantLib_1_1FdmLinearOpLayout_1a9a4eccae9f654e6b64dccafc4c482a58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1FdmLinearOpLayout_1a9a4eccae9f654e6b64dccafc4c482a58" kindref="member">size_</ref>;</highlight></codeline>
<codeline lineno="84" refid="classQuantLib_1_1FdmLinearOpLayout_1a1acc28a255c1d77ef9979b92bd111fae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Size&gt;<sp/><ref refid="classQuantLib_1_1FdmLinearOpLayout_1a1acc28a255c1d77ef9979b92bd111fae" kindref="member">dim_</ref>,<sp/><ref refid="classQuantLib_1_1FdmLinearOpLayout_1a620c2aeb554dfd7b191847b533c3513e" kindref="member">spacing_</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="ql/methods/finitedifferences/operators/fdmlinearoplayout.hpp"/>
  </compounddef>
</doxygen>
