<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classQuantLib_1_1Handle_1_1Link" kind="class" language="C++" prot="protected">
    <compoundname>QuantLib::Handle::Link</compoundname>
    <basecompoundref refid="classQuantLib_1_1Observable" prot="public" virt="non-virtual">QuantLib::Observable</basecompoundref>
    <basecompoundref refid="classQuantLib_1_1Observer" prot="public" virt="non-virtual">QuantLib::Observer</basecompoundref>
    <includes refid="handle_8hpp" local="no">handle.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQuantLib_1_1Handle_1_1Link_1a2ada8fee558d1929b1cf91485a674a0d" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; T &gt;</type>
        <definition>ext::shared_ptr&lt;T&gt; QuantLib::Handle&lt; T &gt;::Link::h_</definition>
        <argsstring></argsstring>
        <name>h_</name>
        <qualifiedname>QuantLib::Handle::Link::h_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/handle.hpp" line="56" column="29" bodyfile="ql/handle.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1Handle_1_1Link_1a7862995808a07abd2c3387a25328e968" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::Handle&lt; T &gt;::Link::isObserver_</definition>
        <argsstring></argsstring>
        <name>isObserver_</name>
        <qualifiedname>QuantLib::Handle::Link::isObserver_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/handle.hpp" line="57" column="18" bodyfile="ql/handle.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classQuantLib_1_1Handle_1_1Link_1a8dcfb220450b6969b2f6ff20640c6c99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Handle&lt; T &gt;::Link::Link</definition>
        <argsstring>(const ext::shared_ptr&lt; T &gt; &amp;h, bool registerAsObserver)</argsstring>
        <name>Link</name>
        <qualifiedname>QuantLib::Handle::Link::Link</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; T &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>registerAsObserver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/handle.hpp" line="45" column="13" bodyfile="ql/handle.hpp" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1Handle_1_1Link_1ab3958312a01f55686cd0aba728571db9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Handle&lt; T &gt;::Link::Link</definition>
        <argsstring>(ext::shared_ptr&lt; T &gt; &amp;&amp;h, bool registerAsObserver)</argsstring>
        <name>Link</name>
        <qualifiedname>QuantLib::Handle::Link::Link</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; T &gt; &amp;&amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>registerAsObserver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/handle.hpp" line="47" column="13" bodyfile="ql/handle.hpp" bodystart="150" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1Handle_1_1Link_1a8e658e5ec16fae283ed0cc93c89e8925" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::Handle&lt; T &gt;::Link::linkTo</definition>
        <argsstring>(ext::shared_ptr&lt; T &gt;, bool registerAsObserver)</argsstring>
        <name>linkTo</name>
        <qualifiedname>QuantLib::Handle::Link::linkTo</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; T &gt;</type>
          <defname>h</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>registerAsObserver</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/handle.hpp" line="49" column="18" bodyfile="ql/handle.hpp" bodystart="155" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1Handle_1_1Link_1a0e2e4a5237da9580c7a117d721035339" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::Handle&lt; T &gt;::Link::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>QuantLib::Handle::Link::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/handle.hpp" line="51" column="18" bodyfile="ql/handle.hpp" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1Handle_1_1Link_1affffa39de20ada78c97a59fb54ec7206" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const ext::shared_ptr&lt; T &gt; &amp;</type>
        <definition>const ext::shared_ptr&lt; T &gt; &amp; QuantLib::Handle&lt; T &gt;::Link::currentLink</definition>
        <argsstring>() const</argsstring>
        <name>currentLink</name>
        <qualifiedname>QuantLib::Handle::Link::currentLink</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/handle.hpp" line="52" column="35" bodyfile="ql/handle.hpp" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1Handle_1_1Link_1a8adb960b97194a0e061d4bbf0af55776" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::Handle&lt; T &gt;::Link::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::Handle::Link::update</qualifiedname>
        <reimplements refid="classQuantLib_1_1Observer_1a07905c55dca858470fcf4a1aea0005aa">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must be implemented in derived classes. An instance of Observer does not call this method directly: instead, it will be called by the observables the instance registered with when they need to notify any changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/handle.hpp" line="53" column="18" bodyfile="ql/handle.hpp" bodystart="53" bodyend="53"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::Handle&lt; T &gt;::Link</label>
        <link refid="classQuantLib_1_1Handle_1_1Link"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Observable</label>
        <link refid="classQuantLib_1_1Observable"/>
      </node>
      <node id="3">
        <label>QuantLib::Observer</label>
        <link refid="classQuantLib_1_1Observer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::Handle&lt; T &gt;::Link</label>
        <link refid="classQuantLib_1_1Handle_1_1Link"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Observable</label>
        <link refid="classQuantLib_1_1Observable"/>
      </node>
      <node id="3">
        <label>QuantLib::Observer</label>
        <link refid="classQuantLib_1_1Observer"/>
      </node>
    </collaborationgraph>
    <location file="ql/handle.hpp" line="43" column="9" bodyfile="ql/handle.hpp" bodystart="43" bodyend="58"/>
    <listofallmembers>
      <member refid="classQuantLib_1_1Handle_1_1Link_1affffa39de20ada78c97a59fb54ec7206" prot="public" virt="non-virtual"><scope>QuantLib::Handle::Link</scope><name>currentLink</name></member>
      <member refid="classQuantLib_1_1Observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::Handle::Link</scope><name>deepUpdate</name></member>
      <member refid="classQuantLib_1_1Handle_1_1Link_1a0e2e4a5237da9580c7a117d721035339" prot="public" virt="non-virtual"><scope>QuantLib::Handle::Link</scope><name>empty</name></member>
      <member refid="classQuantLib_1_1Handle_1_1Link_1a2ada8fee558d1929b1cf91485a674a0d" prot="private" virt="non-virtual"><scope>QuantLib::Handle::Link</scope><name>h_</name></member>
      <member refid="classQuantLib_1_1Handle_1_1Link_1a7862995808a07abd2c3387a25328e968" prot="private" virt="non-virtual"><scope>QuantLib::Handle::Link</scope><name>isObserver_</name></member>
      <member refid="classQuantLib_1_1Observable_1a07ad87c2c2599551463d0a529924dec2" prot="private" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::Handle::Link</scope><name>iterator</name></member>
      <member refid="classQuantLib_1_1Observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::Handle::Link</scope><name>iterator</name></member>
      <member refid="classQuantLib_1_1Handle_1_1Link_1a8dcfb220450b6969b2f6ff20640c6c99" prot="public" virt="non-virtual"><scope>QuantLib::Handle::Link</scope><name>Link</name></member>
      <member refid="classQuantLib_1_1Handle_1_1Link_1ab3958312a01f55686cd0aba728571db9" prot="public" virt="non-virtual"><scope>QuantLib::Handle::Link</scope><name>Link</name></member>
      <member refid="classQuantLib_1_1Handle_1_1Link_1a8e658e5ec16fae283ed0cc93c89e8925" prot="public" virt="non-virtual"><scope>QuantLib::Handle::Link</scope><name>linkTo</name></member>
      <member refid="classQuantLib_1_1Observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::Handle::Link</scope><name>notifyObservers</name></member>
      <member refid="classQuantLib_1_1Observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::Handle::Link</scope><name>Observable</name></member>
      <member refid="classQuantLib_1_1Observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::Handle::Link</scope><name>Observable</name></member>
      <member refid="classQuantLib_1_1Observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::Handle::Link</scope><name>Observable</name></member>
      <member refid="classQuantLib_1_1Observer_1a85e3adb273b706155ea7e8bd98ee460b" prot="private" virt="non-virtual"><scope>QuantLib::Handle::Link</scope><name>observables_</name></member>
      <member refid="classQuantLib_1_1Observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::Handle::Link</scope><name>Observer</name></member>
      <member refid="classQuantLib_1_1Observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::Handle::Link</scope><name>Observer</name></member>
      <member refid="classQuantLib_1_1Observable_1a4da6017619203dcb570d5f4174f0beea" prot="private" virt="non-virtual"><scope>QuantLib::Handle::Link</scope><name>observers_</name></member>
      <member refid="classQuantLib_1_1Observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::Handle::Link</scope><name>operator=</name></member>
      <member refid="classQuantLib_1_1Observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::Handle::Link</scope><name>operator=</name></member>
      <member refid="classQuantLib_1_1Observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::Handle::Link</scope><name>operator=</name></member>
      <member refid="classQuantLib_1_1Observable_1a1eb87a03e7e1fd43377bce32e0c21bce" prot="private" virt="non-virtual"><scope>QuantLib::Handle::Link</scope><name>registerObserver</name></member>
      <member refid="classQuantLib_1_1Observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::Handle::Link</scope><name>registerWith</name></member>
      <member refid="classQuantLib_1_1Observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::Handle::Link</scope><name>registerWithObservables</name></member>
      <member refid="classQuantLib_1_1Observable_1a22e674e99fccc2da996de9620304f63c" prot="private" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::Handle::Link</scope><name>set_type</name></member>
      <member refid="classQuantLib_1_1Observable_1abd81ef8b87594aa6f9d2a5bd5de3e628" prot="private" virt="non-virtual"><scope>QuantLib::Handle::Link</scope><name>unregisterObserver</name></member>
      <member refid="classQuantLib_1_1Observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::Handle::Link</scope><name>unregisterWith</name></member>
      <member refid="classQuantLib_1_1Observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::Handle::Link</scope><name>unregisterWithAll</name></member>
      <member refid="classQuantLib_1_1Handle_1_1Link_1a8adb960b97194a0e061d4bbf0af55776" prot="public" virt="virtual"><scope>QuantLib::Handle::Link</scope><name>update</name></member>
      <member refid="classQuantLib_1_1Observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::Handle::Link</scope><name>~Observable</name></member>
      <member refid="classQuantLib_1_1Observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::Handle::Link</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
