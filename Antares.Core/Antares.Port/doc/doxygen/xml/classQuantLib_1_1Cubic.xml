<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classQuantLib_1_1Cubic" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::Cubic</compoundname>
    <includes refid="cubicinterpolation_8hpp" local="no">cubicinterpolation.hpp</includes>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classQuantLib_1_1Cubic_1ae8ce0ba6edb8c659fc6a08c38b1f6727" prot="public" static="yes" mutable="no">
        <type>const bool</type>
        <definition>const bool QuantLib::Cubic::global</definition>
        <argsstring></argsstring>
        <name>global</name>
        <qualifiedname>QuantLib::Cubic::global</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/cubicinterpolation.hpp" line="351" column="27" bodyfile="ql/math/interpolations/cubicinterpolation.hpp" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1Cubic_1a80e32efee7047eb9eb42adc3cfa8d3cb" prot="public" static="yes" mutable="no">
        <type>const <ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::Cubic::requiredPoints</definition>
        <argsstring></argsstring>
        <name>requiredPoints</name>
        <qualifiedname>QuantLib::Cubic::requiredPoints</qualifiedname>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/cubicinterpolation.hpp" line="352" column="27" bodyfile="ql/math/interpolations/cubicinterpolation.hpp" bodystart="352" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQuantLib_1_1Cubic_1ad2779a1cde76639154d2be8e611bc65a" prot="private" static="no" mutable="no">
        <type><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28" kindref="member">CubicInterpolation::DerivativeApprox</ref></type>
        <definition>CubicInterpolation::DerivativeApprox QuantLib::Cubic::da_</definition>
        <argsstring></argsstring>
        <name>da_</name>
        <qualifiedname>QuantLib::Cubic::da_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/cubicinterpolation.hpp" line="354" column="46" bodyfile="ql/math/interpolations/cubicinterpolation.hpp" bodystart="354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1Cubic_1a5f88e5088c02f2308869a75c78f9e323" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::Cubic::monotonic_</definition>
        <argsstring></argsstring>
        <name>monotonic_</name>
        <qualifiedname>QuantLib::Cubic::monotonic_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/cubicinterpolation.hpp" line="355" column="14" bodyfile="ql/math/interpolations/cubicinterpolation.hpp" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1Cubic_1ab87cc7d2e6cfc896366b213b10f5b2fc" prot="private" static="no" mutable="no">
        <type><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2" kindref="member">CubicInterpolation::BoundaryCondition</ref></type>
        <definition>CubicInterpolation::BoundaryCondition QuantLib::Cubic::leftType_</definition>
        <argsstring></argsstring>
        <name>leftType_</name>
        <qualifiedname>QuantLib::Cubic::leftType_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/cubicinterpolation.hpp" line="356" column="47" bodyfile="ql/math/interpolations/cubicinterpolation.hpp" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1Cubic_1a2506c6df0aa55d9ea9b9f265e6a6113d" prot="private" static="no" mutable="no">
        <type><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2" kindref="member">CubicInterpolation::BoundaryCondition</ref></type>
        <definition>CubicInterpolation::BoundaryCondition QuantLib::Cubic::rightType_</definition>
        <argsstring></argsstring>
        <name>rightType_</name>
        <qualifiedname>QuantLib::Cubic::rightType_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/cubicinterpolation.hpp" line="356" column="57" bodyfile="ql/math/interpolations/cubicinterpolation.hpp" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1Cubic_1a2b014e81fc04149651fc8ab186afc1b1" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Cubic::leftValue_</definition>
        <argsstring></argsstring>
        <name>leftValue_</name>
        <qualifiedname>QuantLib::Cubic::leftValue_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/cubicinterpolation.hpp" line="357" column="14" bodyfile="ql/math/interpolations/cubicinterpolation.hpp" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1Cubic_1ae3d5ea0aa8fd8020f2601bb1f99b02c9" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Cubic::rightValue_</definition>
        <argsstring></argsstring>
        <name>rightValue_</name>
        <qualifiedname>QuantLib::Cubic::rightValue_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/cubicinterpolation.hpp" line="357" column="25" bodyfile="ql/math/interpolations/cubicinterpolation.hpp" bodystart="357" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classQuantLib_1_1Cubic_1ab18925a5c90d641965f8e44942a7c7ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Cubic::Cubic</definition>
        <argsstring>(CubicInterpolation::DerivativeApprox da=CubicInterpolation::Kruger, bool monotonic=false, CubicInterpolation::BoundaryCondition leftCondition=CubicInterpolation::SecondDerivative, Real leftConditionValue=0.0, CubicInterpolation::BoundaryCondition rightCondition=CubicInterpolation::SecondDerivative, Real rightConditionValue=0.0)</argsstring>
        <name>Cubic</name>
        <qualifiedname>QuantLib::Cubic::Cubic</qualifiedname>
        <param>
          <type><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28" kindref="member">CubicInterpolation::DerivativeApprox</ref></type>
          <declname>da</declname>
          <defval><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a07ea2cd3f162271d5f00b36af15db775" kindref="member">CubicInterpolation::Kruger</ref></defval>
        </param>
        <param>
          <type>bool</type>
          <declname>monotonic</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2" kindref="member">CubicInterpolation::BoundaryCondition</ref></type>
          <declname>leftCondition</declname>
          <defval><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">CubicInterpolation::SecondDerivative</ref></defval>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>leftConditionValue</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2" kindref="member">CubicInterpolation::BoundaryCondition</ref></type>
          <declname>rightCondition</declname>
          <defval><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">CubicInterpolation::SecondDerivative</ref></defval>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>rightConditionValue</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/cubicinterpolation.hpp" line="330" column="9" bodyfile="ql/math/interpolations/cubicinterpolation.hpp" bodystart="330" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1Cubic_1ad36386f3f189ecac212de733754c69e0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I1</type>
          </param>
          <param>
            <type>class I2</type>
          </param>
        </templateparamlist>
        <type><ref refid="classQuantLib_1_1Interpolation" kindref="compound">Interpolation</ref></type>
        <definition>Interpolation QuantLib::Cubic::interpolate</definition>
        <argsstring>(const I1 &amp;xBegin, const I1 &amp;xEnd, const I2 &amp;yBegin) const</argsstring>
        <name>interpolate</name>
        <qualifiedname>QuantLib::Cubic::interpolate</qualifiedname>
        <param>
          <type>const I1 &amp;</type>
          <declname>xBegin</declname>
        </param>
        <param>
          <type>const I1 &amp;</type>
          <declname>xEnd</declname>
        </param>
        <param>
          <type>const I2 &amp;</type>
          <declname>yBegin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/cubicinterpolation.hpp" line="343" column="23" bodyfile="ql/math/interpolations/cubicinterpolation.hpp" bodystart="343" bodyend="350"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Cubic interpolation factory and traits </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/math/interpolations/cubicinterpolation.hpp" line="328" column="5" bodyfile="ql/math/interpolations/cubicinterpolation.hpp" bodystart="328" bodyend="358"/>
    <listofallmembers>
      <member refid="classQuantLib_1_1Cubic_1ab18925a5c90d641965f8e44942a7c7ac" prot="public" virt="non-virtual"><scope>QuantLib::Cubic</scope><name>Cubic</name></member>
      <member refid="classQuantLib_1_1Cubic_1ad2779a1cde76639154d2be8e611bc65a" prot="private" virt="non-virtual"><scope>QuantLib::Cubic</scope><name>da_</name></member>
      <member refid="classQuantLib_1_1Cubic_1ae8ce0ba6edb8c659fc6a08c38b1f6727" prot="public" virt="non-virtual"><scope>QuantLib::Cubic</scope><name>global</name></member>
      <member refid="classQuantLib_1_1Cubic_1ad36386f3f189ecac212de733754c69e0" prot="public" virt="non-virtual"><scope>QuantLib::Cubic</scope><name>interpolate</name></member>
      <member refid="classQuantLib_1_1Cubic_1ab87cc7d2e6cfc896366b213b10f5b2fc" prot="private" virt="non-virtual"><scope>QuantLib::Cubic</scope><name>leftType_</name></member>
      <member refid="classQuantLib_1_1Cubic_1a2b014e81fc04149651fc8ab186afc1b1" prot="private" virt="non-virtual"><scope>QuantLib::Cubic</scope><name>leftValue_</name></member>
      <member refid="classQuantLib_1_1Cubic_1a5f88e5088c02f2308869a75c78f9e323" prot="private" virt="non-virtual"><scope>QuantLib::Cubic</scope><name>monotonic_</name></member>
      <member refid="classQuantLib_1_1Cubic_1a80e32efee7047eb9eb42adc3cfa8d3cb" prot="public" virt="non-virtual"><scope>QuantLib::Cubic</scope><name>requiredPoints</name></member>
      <member refid="classQuantLib_1_1Cubic_1a2506c6df0aa55d9ea9b9f265e6a6113d" prot="private" virt="non-virtual"><scope>QuantLib::Cubic</scope><name>rightType_</name></member>
      <member refid="classQuantLib_1_1Cubic_1ae3d5ea0aa8fd8020f2601bb1f99b02c9" prot="private" virt="non-virtual"><scope>QuantLib::Cubic</scope><name>rightValue_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
