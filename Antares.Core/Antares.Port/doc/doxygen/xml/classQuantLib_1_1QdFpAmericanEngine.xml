<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classQuantLib_1_1QdFpAmericanEngine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::QdFpAmericanEngine</compoundname>
    <basecompoundref refid="classQuantLib_1_1detail_1_1QdPutCallParityEngine" prot="public" virt="non-virtual">QuantLib::detail::QdPutCallParityEngine</basecompoundref>
    <includes refid="qdfpamericanengine_8hpp" local="no">qdfpamericanengine.hpp</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="classQuantLib_1_1QdFpAmericanEngine_1a41a9ff99e23fa1d41e658b18416c586e" prot="public" static="no" strong="no">
        <type></type>
        <name>FixedPointEquation</name>
        <qualifiedname>QuantLib::QdFpAmericanEngine::FixedPointEquation</qualifiedname>
        <enumvalue id="classQuantLib_1_1QdFpAmericanEngine_1a41a9ff99e23fa1d41e658b18416c586eac30a84bdd4b398d51006cf48c906f82f" prot="public">
          <name>FP_A</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQuantLib_1_1QdFpAmericanEngine_1a41a9ff99e23fa1d41e658b18416c586eacb212dee4d167c20c05fe96b089c2c6b" prot="public">
          <name>FP_B</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQuantLib_1_1QdFpAmericanEngine_1a41a9ff99e23fa1d41e658b18416c586eae41cb32b180569790e884b057172a348" prot="public">
          <name>Auto</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/qdfpamericanengine.hpp" line="123" column="9" bodyfile="ql/pricingengines/vanilla/qdfpamericanengine.hpp" bodystart="123" bodyend="123"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQuantLib_1_1QdFpAmericanEngine_1aa98174fedcab0c0de5ecb6671030e569" prot="private" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="classQuantLib_1_1QdFpIterationScheme" kindref="compound">QdFpIterationScheme</ref> &gt;</type>
        <definition>const ext::shared_ptr&lt;QdFpIterationScheme&gt; QuantLib::QdFpAmericanEngine::iterationScheme_</definition>
        <argsstring></argsstring>
        <name>iterationScheme_</name>
        <qualifiedname>QuantLib::QdFpAmericanEngine::iterationScheme_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/qdfpamericanengine.hpp" line="139" column="31" bodyfile="ql/pricingengines/vanilla/qdfpamericanengine.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1QdFpAmericanEngine_1af71f4a5869ad4401af0c4e4057aa7f28" prot="private" static="no" mutable="no">
        <type>const <ref refid="classQuantLib_1_1QdFpAmericanEngine_1a41a9ff99e23fa1d41e658b18416c586e" kindref="member">FixedPointEquation</ref></type>
        <definition>const FixedPointEquation QuantLib::QdFpAmericanEngine::fpEquation_</definition>
        <argsstring></argsstring>
        <name>fpEquation_</name>
        <qualifiedname>QuantLib::QdFpAmericanEngine::fpEquation_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/qdfpamericanengine.hpp" line="140" column="34" bodyfile="ql/pricingengines/vanilla/qdfpamericanengine.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classQuantLib_1_1QdFpAmericanEngine_1a2697cde25bfc1c751c80684117aade8d" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::QdFpAmericanEngine::QdFpAmericanEngine</definition>
        <argsstring>(ext::shared_ptr&lt; GeneralizedBlackScholesProcess &gt; bsProcess, ext::shared_ptr&lt; QdFpIterationScheme &gt; iterationScheme=accurateScheme(), FixedPointEquation fpEquation=Auto)</argsstring>
        <name>QdFpAmericanEngine</name>
        <qualifiedname>QuantLib::QdFpAmericanEngine::QdFpAmericanEngine</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="classQuantLib_1_1GeneralizedBlackScholesProcess" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt;</type>
          <declname>bsProcess</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="classQuantLib_1_1QdFpIterationScheme" kindref="compound">QdFpIterationScheme</ref> &gt;</type>
          <declname>iterationScheme</declname>
          <defval><ref refid="classQuantLib_1_1QdFpAmericanEngine_1ab35654be0e198a19970d2e51cb626ef3" kindref="member">accurateScheme</ref>()</defval>
        </param>
        <param>
          <type><ref refid="classQuantLib_1_1QdFpAmericanEngine_1a41a9ff99e23fa1d41e658b18416c586e" kindref="member">FixedPointEquation</ref></type>
          <declname>fpEquation</declname>
          <defval><ref refid="classQuantLib_1_1QdFpAmericanEngine_1a41a9ff99e23fa1d41e658b18416c586eae41cb32b180569790e884b057172a348" kindref="member">Auto</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/qdfpamericanengine.hpp" line="125" column="18" bodyfile="ql/pricingengines/vanilla/qdfpamericanengine.cpp" bodystart="402" bodyend="409"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQuantLib_1_1QdFpAmericanEngine_1ab805008011af08f53814a70e899b251b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="classQuantLib_1_1QdFpIterationScheme" kindref="compound">QdFpIterationScheme</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; QdFpIterationScheme &gt; QuantLib::QdFpAmericanEngine::fastScheme</definition>
        <argsstring>()</argsstring>
        <name>fastScheme</name>
        <qualifiedname>QuantLib::QdFpAmericanEngine::fastScheme</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/qdfpamericanengine.hpp" line="130" column="32" bodyfile="ql/pricingengines/vanilla/qdfpamericanengine.cpp" bodystart="412" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1QdFpAmericanEngine_1ab35654be0e198a19970d2e51cb626ef3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="classQuantLib_1_1QdFpIterationScheme" kindref="compound">QdFpIterationScheme</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; QdFpIterationScheme &gt; QuantLib::QdFpAmericanEngine::accurateScheme</definition>
        <argsstring>()</argsstring>
        <name>accurateScheme</name>
        <qualifiedname>QuantLib::QdFpAmericanEngine::accurateScheme</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/qdfpamericanengine.hpp" line="131" column="32" bodyfile="ql/pricingengines/vanilla/qdfpamericanengine.cpp" bodystart="418" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1QdFpAmericanEngine_1a1cb25f72824eb1407fa34077b1a2f8db" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="classQuantLib_1_1QdFpIterationScheme" kindref="compound">QdFpIterationScheme</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; QdFpIterationScheme &gt; QuantLib::QdFpAmericanEngine::highPrecisionScheme</definition>
        <argsstring>()</argsstring>
        <name>highPrecisionScheme</name>
        <qualifiedname>QuantLib::QdFpAmericanEngine::highPrecisionScheme</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/qdfpamericanengine.hpp" line="132" column="32" bodyfile="ql/pricingengines/vanilla/qdfpamericanengine.cpp" bodystart="424" bodyend="427"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="classQuantLib_1_1QdFpAmericanEngine_1a7d381e77360b97af26491c13a1650f47" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::QdFpAmericanEngine::calculatePut</definition>
        <argsstring>(Real S, Real K, Rate r, Rate q, Volatility vol, Time T) const override</argsstring>
        <name>calculatePut</name>
        <qualifiedname>QuantLib::QdFpAmericanEngine::calculatePut</qualifiedname>
        <reimplements refid="classQuantLib_1_1detail_1_1QdPutCallParityEngine_1afe09fb95d7370c04a215bb85a5ac5e4a">calculatePut</reimplements>
        <param>
          <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>S</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>K</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>q</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
          <declname>vol</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>T</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/qdfpamericanengine.hpp" line="135" column="14" bodyfile="ql/pricingengines/vanilla/qdfpamericanengine.cpp" bodystart="429" bodyend="516"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>High performance/precision American engine based on fixed point iteration for the exercise boundary. </para>
    </briefdescription>
    <detaileddescription>
<para>References: Leif Andersen, Mark Lake and Dimitri Offengenden (2015) &quot;High Performance American Option Pricing&quot;, <ulink url="https://papers.ssrn.com/sol3/papers.cfm?abstract_id=2547027">https://papers.ssrn.com/sol3/papers.cfm?abstract_id=2547027</ulink></para>
<para>Leif Andersen, Mark Lake (2021) &quot;Fast American Option Pricing: The Double-Boundary Case&quot;</para>
<para><ulink url="https://onlinelibrary.wiley.com/doi/abs/10.1002/wilm.10969">https://onlinelibrary.wiley.com/doi/abs/10.1002/wilm.10969</ulink> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>QuantLib::GenericEngine&lt; OneAssetOption::arguments, OneAssetOption::results &gt;</label>
        <link refid="classQuantLib_1_1GenericEngine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="classQuantLib_1_1Observable"/>
      </node>
      <node id="7">
        <label>QuantLib::Observer</label>
        <link refid="classQuantLib_1_1Observer"/>
      </node>
      <node id="3">
        <label>QuantLib::OneAssetOption::engine</label>
        <link refid="classQuantLib_1_1OneAssetOption_1_1engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::PricingEngine</label>
        <link refid="classQuantLib_1_1PricingEngine"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::QdFpAmericanEngine</label>
        <link refid="classQuantLib_1_1QdFpAmericanEngine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::detail::QdPutCallParityEngine</label>
        <link refid="classQuantLib_1_1detail_1_1QdPutCallParityEngine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>QuantLib::GenericEngine&lt; OneAssetOption::arguments, OneAssetOption::results &gt;</label>
        <link refid="classQuantLib_1_1GenericEngine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>results_</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::Date</label>
        <link refid="classQuantLib_1_1Date"/>
      </node>
      <node id="12">
        <label>QuantLib::Greeks</label>
        <link refid="classQuantLib_1_1Greeks"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::Instrument::results</label>
        <link refid="classQuantLib_1_1Instrument_1_1results"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>valuationDate</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>QuantLib::MoreGreeks</label>
        <link refid="classQuantLib_1_1MoreGreeks"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="classQuantLib_1_1Observable"/>
      </node>
      <node id="7">
        <label>QuantLib::Observer</label>
        <link refid="classQuantLib_1_1Observer"/>
      </node>
      <node id="3">
        <label>QuantLib::OneAssetOption::engine</label>
        <link refid="classQuantLib_1_1OneAssetOption_1_1engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::OneAssetOption::results</label>
        <link refid="classQuantLib_1_1OneAssetOption_1_1results"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::PricingEngine</label>
        <link refid="classQuantLib_1_1PricingEngine"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::PricingEngine::results</label>
        <link refid="classQuantLib_1_1PricingEngine_1_1results"/>
      </node>
      <node id="1">
        <label>QuantLib::QdFpAmericanEngine</label>
        <link refid="classQuantLib_1_1QdFpAmericanEngine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::detail::QdPutCallParityEngine</label>
        <link refid="classQuantLib_1_1detail_1_1QdPutCallParityEngine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/pricingengines/vanilla/qdfpamericanengine.hpp" line="121" column="5" bodyfile="ql/pricingengines/vanilla/qdfpamericanengine.hpp" bodystart="121" bodyend="141"/>
    <listofallmembers>
      <member refid="classQuantLib_1_1QdFpAmericanEngine_1ab35654be0e198a19970d2e51cb626ef3" prot="public" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>accurateScheme</name></member>
      <member refid="classQuantLib_1_1GenericEngine_1ad2371cdbafa1989afb0e4733b1212c0d" prot="protected" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>arguments_</name></member>
      <member refid="classQuantLib_1_1QdFpAmericanEngine_1a41a9ff99e23fa1d41e658b18416c586eae41cb32b180569790e884b057172a348" prot="public" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>Auto</name></member>
      <member refid="classQuantLib_1_1detail_1_1QdPutCallParityEngine_1a84f99b788bca015a094a483803a26e4c" prot="public" virt="virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>calculate</name></member>
      <member refid="classQuantLib_1_1QdFpAmericanEngine_1a7d381e77360b97af26491c13a1650f47" prot="protected" virt="virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>calculatePut</name></member>
      <member refid="classQuantLib_1_1detail_1_1QdPutCallParityEngine_1a2f8113df036304db6ac2d91aa685e541" prot="private" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>calculatePutWithEdgeCases</name></member>
      <member refid="classQuantLib_1_1Observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>deepUpdate</name></member>
      <member refid="classQuantLib_1_1QdFpAmericanEngine_1ab805008011af08f53814a70e899b251b" prot="public" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>fastScheme</name></member>
      <member refid="classQuantLib_1_1QdFpAmericanEngine_1a41a9ff99e23fa1d41e658b18416c586e" prot="public" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>FixedPointEquation</name></member>
      <member refid="classQuantLib_1_1QdFpAmericanEngine_1a41a9ff99e23fa1d41e658b18416c586eac30a84bdd4b398d51006cf48c906f82f" prot="public" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>FP_A</name></member>
      <member refid="classQuantLib_1_1QdFpAmericanEngine_1a41a9ff99e23fa1d41e658b18416c586eacb212dee4d167c20c05fe96b089c2c6b" prot="public" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>FP_B</name></member>
      <member refid="classQuantLib_1_1QdFpAmericanEngine_1af71f4a5869ad4401af0c4e4057aa7f28" prot="private" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>fpEquation_</name></member>
      <member refid="classQuantLib_1_1GenericEngine_1ad9c6e8dc65ca072d5e6e17640d74db3e" prot="public" virt="virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>getArguments</name></member>
      <member refid="classQuantLib_1_1GenericEngine_1aea8272ef6e5e0ea1cffadfed0454fa88" prot="public" virt="virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>getResults</name></member>
      <member refid="classQuantLib_1_1QdFpAmericanEngine_1a1cb25f72824eb1407fa34077b1a2f8db" prot="public" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>highPrecisionScheme</name></member>
      <member refid="classQuantLib_1_1QdFpAmericanEngine_1aa98174fedcab0c0de5ecb6671030e569" prot="private" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>iterationScheme_</name></member>
      <member refid="classQuantLib_1_1Observable_1a07ad87c2c2599551463d0a529924dec2" prot="private" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::QdFpAmericanEngine</scope><name>iterator</name></member>
      <member refid="classQuantLib_1_1Observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::QdFpAmericanEngine</scope><name>iterator</name></member>
      <member refid="classQuantLib_1_1Observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>notifyObservers</name></member>
      <member refid="classQuantLib_1_1Observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>Observable</name></member>
      <member refid="classQuantLib_1_1Observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>Observable</name></member>
      <member refid="classQuantLib_1_1Observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>Observable</name></member>
      <member refid="classQuantLib_1_1Observer_1a85e3adb273b706155ea7e8bd98ee460b" prot="private" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>observables_</name></member>
      <member refid="classQuantLib_1_1Observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>Observer</name></member>
      <member refid="classQuantLib_1_1Observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::QdFpAmericanEngine</scope><name>Observer</name></member>
      <member refid="classQuantLib_1_1Observable_1a4da6017619203dcb570d5f4174f0beea" prot="private" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>observers_</name></member>
      <member refid="classQuantLib_1_1Observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::QdFpAmericanEngine</scope><name>operator=</name></member>
      <member refid="classQuantLib_1_1Observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::QdFpAmericanEngine</scope><name>operator=</name></member>
      <member refid="classQuantLib_1_1Observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::QdFpAmericanEngine</scope><name>operator=</name></member>
      <member refid="classQuantLib_1_1detail_1_1QdPutCallParityEngine_1a99454f72fb3e2c0770341e4602853f3b" prot="protected" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>process_</name></member>
      <member refid="classQuantLib_1_1QdFpAmericanEngine_1a2697cde25bfc1c751c80684117aade8d" prot="public" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>QdFpAmericanEngine</name></member>
      <member refid="classQuantLib_1_1detail_1_1QdPutCallParityEngine_1a25106472fba4497fd8b3b92b6cae6942" prot="public" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>QdPutCallParityEngine</name></member>
      <member refid="classQuantLib_1_1Observable_1a1eb87a03e7e1fd43377bce32e0c21bce" prot="private" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>registerObserver</name></member>
      <member refid="classQuantLib_1_1Observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>registerWith</name></member>
      <member refid="classQuantLib_1_1Observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>registerWithObservables</name></member>
      <member refid="classQuantLib_1_1GenericEngine_1a81c5390ba1e713e57ca87d5f841d37f2" prot="public" virt="virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>reset</name></member>
      <member refid="classQuantLib_1_1GenericEngine_1a41281f2ea4990dbce90be1f9f2e231f6" prot="protected" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>results_</name></member>
      <member refid="classQuantLib_1_1Observable_1a22e674e99fccc2da996de9620304f63c" prot="private" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::QdFpAmericanEngine</scope><name>set_type</name></member>
      <member refid="classQuantLib_1_1Observable_1abd81ef8b87594aa6f9d2a5bd5de3e628" prot="private" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>unregisterObserver</name></member>
      <member refid="classQuantLib_1_1Observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>unregisterWith</name></member>
      <member refid="classQuantLib_1_1Observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>unregisterWithAll</name></member>
      <member refid="classQuantLib_1_1GenericEngine_1aaf5ef54d9e1abf8b1b50b48804edf3dc" prot="public" virt="virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>update</name></member>
      <member refid="classQuantLib_1_1Observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>~Observable</name></member>
      <member refid="classQuantLib_1_1Observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>~Observer</name></member>
      <member refid="classQuantLib_1_1PricingEngine_1a66b279a54578cd7e60d402e5147eb526" prot="public" virt="non-virtual"><scope>QuantLib::QdFpAmericanEngine</scope><name>~PricingEngine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
