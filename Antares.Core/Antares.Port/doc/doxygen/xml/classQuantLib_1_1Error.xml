<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classQuantLib_1_1Error" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::Error</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::exception</basecompoundref>
    <includes refid="errors_8hpp" local="no">errors.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQuantLib_1_1Error_1a2916fb966885f7d748e93149e310b627" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; std::string &gt;</type>
        <definition>ext::shared_ptr&lt;std::string&gt; QuantLib::Error::message_</definition>
        <argsstring></argsstring>
        <name>message_</name>
        <qualifiedname>QuantLib::Error::message_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/errors.hpp" line="52" column="25" bodyfile="ql/errors.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classQuantLib_1_1Error_1a9e2974dbf2391ceb4497060b41c7a32f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Error::Error</definition>
        <argsstring>(const std::string &amp;file, long line, const std::string &amp;functionName, const std::string &amp;message=&quot;&quot;)</argsstring>
        <name>Error</name>
        <qualifiedname>QuantLib::Error::Error</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type>long</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>functionName</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The explicit use of this constructor is not advised. Use the QL_FAIL macro instead. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/errors.hpp" line="44" column="9" bodyfile="ql/errors.cpp" bodystart="93" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1Error_1abbd77f90948a79c9f5739738a6da06ab" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * QuantLib::Error::what</definition>
        <argsstring>() const noexcept override</argsstring>
        <name>what</name>
        <qualifiedname>QuantLib::Error::what</qualifiedname>
        <briefdescription>
<para>returns the error message. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/errors.hpp" line="49" column="20" bodyfile="ql/errors.cpp" bodystart="100" bodyend="100"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Base error class. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::Error</label>
        <link refid="classQuantLib_1_1Error"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::exception</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::Error</label>
        <link refid="classQuantLib_1_1Error"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::exception</label>
      </node>
    </collaborationgraph>
    <location file="ql/errors.hpp" line="39" column="5" bodyfile="ql/errors.hpp" bodystart="39" bodyend="53"/>
    <listofallmembers>
      <member refid="classQuantLib_1_1Error_1a9e2974dbf2391ceb4497060b41c7a32f" prot="public" virt="non-virtual"><scope>QuantLib::Error</scope><name>Error</name></member>
      <member refid="classQuantLib_1_1Error_1a2916fb966885f7d748e93149e310b627" prot="private" virt="non-virtual"><scope>QuantLib::Error</scope><name>message_</name></member>
      <member refid="classQuantLib_1_1Error_1abbd77f90948a79c9f5739738a6da06ab" prot="public" virt="non-virtual"><scope>QuantLib::Error</scope><name>what</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
