<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classQuantLib_1_1CashOrNothingPayoff" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::CashOrNothingPayoff</compoundname>
    <basecompoundref refid="classQuantLib_1_1StrikedTypePayoff" prot="public" virt="non-virtual">QuantLib::StrikedTypePayoff</basecompoundref>
    <includes refid="payoffs_8hpp" local="no">payoffs.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Payoff interface</header>
      <memberdef kind="variable" id="classQuantLib_1_1CashOrNothingPayoff_1a351d02a12e3211a69cb832d3a215a7cc" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CashOrNothingPayoff::cashPayoff_</definition>
        <argsstring></argsstring>
        <name>cashPayoff_</name>
        <qualifiedname>QuantLib::CashOrNothingPayoff::cashPayoff_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/payoffs.hpp" line="167" column="14" bodyfile="ql/instruments/payoffs.hpp" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1CashOrNothingPayoff_1a16a686d3d59af74ddd94af95b5e7a71b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string QuantLib::CashOrNothingPayoff::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <qualifiedname>QuantLib::CashOrNothingPayoff::name</qualifiedname>
        <reimplements refid="classQuantLib_1_1Payoff_1aceb029d314fb74ab5797d7bc7752d0c8">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This method is used for output and comparison between payoffs. It is <bold>not</bold> meant to be used for writing switch-on-type code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/payoffs.hpp" line="160" column="21" bodyfile="ql/instruments/payoffs.hpp" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1CashOrNothingPayoff_1a20cb1df0ff5c02494fe979cab04e9bb7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string QuantLib::CashOrNothingPayoff::description</definition>
        <argsstring>() const override</argsstring>
        <name>description</name>
        <qualifiedname>QuantLib::CashOrNothingPayoff::description</qualifiedname>
        <reimplements refid="classQuantLib_1_1Payoff_1a0f2a1e491b9cf7411a3759c2fd7ed90e">description</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/payoffs.hpp" line="161" column="21" bodyfile="ql/instruments/payoffs.cpp" bodystart="148" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1CashOrNothingPayoff_1a6d89cf338ee0b8d60d77f2d32e97c06b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CashOrNothingPayoff::operator()</definition>
        <argsstring>(Real price) const override</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::CashOrNothingPayoff::operator()</qualifiedname>
        <reimplements refid="classQuantLib_1_1Payoff_1a1b10d7224a8089b21a56eb1fa0562c37">operator()</reimplements>
        <param>
          <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>price</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/payoffs.hpp" line="162" column="14" bodyfile="ql/instruments/payoffs.cpp" bodystart="154" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1CashOrNothingPayoff_1a630d16239198c8b533e7ba58a795a946" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::CashOrNothingPayoff::accept</definition>
        <argsstring>(AcyclicVisitor &amp;) override</argsstring>
        <name>accept</name>
        <qualifiedname>QuantLib::CashOrNothingPayoff::accept</qualifiedname>
        <reimplements refid="classQuantLib_1_1Payoff_1ac2902d1c8e84743671f759180fbff190">accept</reimplements>
        <param>
          <type><ref refid="classQuantLib_1_1AcyclicVisitor" kindref="compound">AcyclicVisitor</ref> &amp;</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/payoffs.hpp" line="163" column="14" bodyfile="ql/instruments/payoffs.cpp" bodystart="165" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1CashOrNothingPayoff_1a690cc5ff23a880423c4b818265841d8b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CashOrNothingPayoff::cashPayoff</definition>
        <argsstring>() const</argsstring>
        <name>cashPayoff</name>
        <qualifiedname>QuantLib::CashOrNothingPayoff::cashPayoff</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/payoffs.hpp" line="165" column="14" bodyfile="ql/instruments/payoffs.hpp" bodystart="165" bodyend="165"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classQuantLib_1_1CashOrNothingPayoff_1ae4c4dd7c1133cb3a12a6f7b3840b50a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CashOrNothingPayoff::CashOrNothingPayoff</definition>
        <argsstring>(Option::Type type, Real strike, Real cashPayoff)</argsstring>
        <name>CashOrNothingPayoff</name>
        <qualifiedname>QuantLib::CashOrNothingPayoff::CashOrNothingPayoff</qualifiedname>
        <param>
          <type><ref refid="classQuantLib_1_1Option_1abaee7fc605354c444867545492cd5845" kindref="member">Option::Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>cashPayoff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/payoffs.hpp" line="154" column="9" bodyfile="ql/instruments/payoffs.hpp" bodystart="154" bodyend="157"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Binary cash-or-nothing payoff. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::CashOrNothingPayoff</label>
        <link refid="classQuantLib_1_1CashOrNothingPayoff"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Payoff</label>
        <link refid="classQuantLib_1_1Payoff"/>
      </node>
      <node id="2">
        <label>QuantLib::StrikedTypePayoff</label>
        <link refid="classQuantLib_1_1StrikedTypePayoff"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::TypePayoff</label>
        <link refid="classQuantLib_1_1TypePayoff"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::CashOrNothingPayoff</label>
        <link refid="classQuantLib_1_1CashOrNothingPayoff"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Payoff</label>
        <link refid="classQuantLib_1_1Payoff"/>
      </node>
      <node id="2">
        <label>QuantLib::StrikedTypePayoff</label>
        <link refid="classQuantLib_1_1StrikedTypePayoff"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::TypePayoff</label>
        <link refid="classQuantLib_1_1TypePayoff"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/instruments/payoffs.hpp" line="152" column="5" bodyfile="ql/instruments/payoffs.hpp" bodystart="152" bodyend="168"/>
    <listofallmembers>
      <member refid="classQuantLib_1_1CashOrNothingPayoff_1a630d16239198c8b533e7ba58a795a946" prot="public" virt="virtual"><scope>QuantLib::CashOrNothingPayoff</scope><name>accept</name></member>
      <member refid="classQuantLib_1_1CashOrNothingPayoff_1ae4c4dd7c1133cb3a12a6f7b3840b50a5" prot="public" virt="non-virtual"><scope>QuantLib::CashOrNothingPayoff</scope><name>CashOrNothingPayoff</name></member>
      <member refid="classQuantLib_1_1CashOrNothingPayoff_1a690cc5ff23a880423c4b818265841d8b" prot="public" virt="non-virtual"><scope>QuantLib::CashOrNothingPayoff</scope><name>cashPayoff</name></member>
      <member refid="classQuantLib_1_1CashOrNothingPayoff_1a351d02a12e3211a69cb832d3a215a7cc" prot="protected" virt="non-virtual"><scope>QuantLib::CashOrNothingPayoff</scope><name>cashPayoff_</name></member>
      <member refid="classQuantLib_1_1CashOrNothingPayoff_1a20cb1df0ff5c02494fe979cab04e9bb7" prot="public" virt="virtual"><scope>QuantLib::CashOrNothingPayoff</scope><name>description</name></member>
      <member refid="classQuantLib_1_1CashOrNothingPayoff_1a16a686d3d59af74ddd94af95b5e7a71b" prot="public" virt="virtual"><scope>QuantLib::CashOrNothingPayoff</scope><name>name</name></member>
      <member refid="classQuantLib_1_1CashOrNothingPayoff_1a6d89cf338ee0b8d60d77f2d32e97c06b" prot="public" virt="virtual"><scope>QuantLib::CashOrNothingPayoff</scope><name>operator()</name></member>
      <member refid="classQuantLib_1_1TypePayoff_1a65d88064f1dd8a1d832061dbfc604812" prot="public" virt="non-virtual"><scope>QuantLib::CashOrNothingPayoff</scope><name>optionType</name></member>
      <member refid="classQuantLib_1_1StrikedTypePayoff_1a3c01bf0738a40de8dfd81e1a7127e3e7" prot="public" virt="non-virtual"><scope>QuantLib::CashOrNothingPayoff</scope><name>strike</name></member>
      <member refid="classQuantLib_1_1StrikedTypePayoff_1a1a8dfb6b6f557d30b497ef63a92e12d0" prot="protected" virt="non-virtual"><scope>QuantLib::CashOrNothingPayoff</scope><name>strike_</name></member>
      <member refid="classQuantLib_1_1StrikedTypePayoff_1a68f84b64d373d6e9cf49e0fb633880d3" prot="protected" virt="non-virtual"><scope>QuantLib::CashOrNothingPayoff</scope><name>StrikedTypePayoff</name></member>
      <member refid="classQuantLib_1_1TypePayoff_1af4e5a4d11b0c069fcde370573be46191" prot="protected" virt="non-virtual"><scope>QuantLib::CashOrNothingPayoff</scope><name>type_</name></member>
      <member refid="classQuantLib_1_1TypePayoff_1ad79b48279b590d246a611009bca455c1" prot="protected" virt="non-virtual"><scope>QuantLib::CashOrNothingPayoff</scope><name>TypePayoff</name></member>
      <member refid="classQuantLib_1_1Payoff_1a7067fc920554af30af0ac5b82d0f4650" prot="public" virt="virtual"><scope>QuantLib::CashOrNothingPayoff</scope><name>~Payoff</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
