<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="errorfunction_8cpp" kind="file" language="C++">
    <compoundname>errorfunction.cpp</compoundname>
    <includes refid="errorfunction_8hpp" local="no">ql/math/errorfunction.hpp</includes>
    <includes local="no">cfloat</includes>
    <incdepgraph>
      <node id="7">
        <label>ql/config.ansi.hpp</label>
        <link refid="config_8ansi_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ql/math/errorfunction.cpp</label>
        <link refid="errorfunction_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ql/math/errorfunction.hpp</label>
        <link refid="errorfunction_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ql/mathconstants.hpp</label>
        <link refid="mathconstants_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ql/qldefines.hpp</label>
        <link refid="qldefines_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ql/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ql/userconfig.hpp</label>
        <link refid="userconfig_8hpp"/>
      </node>
      <node id="5">
        <label>boost/config.hpp</label>
      </node>
      <node id="6">
        <label>boost/version.hpp</label>
      </node>
      <node id="14">
        <label>cfloat</label>
      </node>
      <node id="10">
        <label>cmath</label>
      </node>
      <node id="12">
        <label>cstddef</label>
      </node>
      <node id="13">
        <label>functional</label>
      </node>
      <node id="11">
        <label>limits</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceQuantLib">QuantLib</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>c++;<sp/>tab-width:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil;<sp/>c-basic-offset:<sp/>4<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NOTE:<sp/>The<sp/>following<sp/>copyright<sp/>notice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>applies<sp/>only<sp/>to<sp/>the<sp/>(modified)<sp/>code<sp/>of<sp/>erff.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>erff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Based<sp/>on<sp/>code<sp/>from<sp/>the<sp/>gnu<sp/>C<sp/>library,<sp/>originally<sp/>written<sp/>by<sp/>Sun.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Modified<sp/>to<sp/>remove<sp/>reliance<sp/>on<sp/>features<sp/>of<sp/>gcc<sp/>and<sp/>64-bit<sp/>width</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>doubles.<sp/>No<sp/>doubt<sp/>this<sp/>results<sp/>in<sp/>some<sp/>slight<sp/>deterioration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>efficiency,<sp/>but<sp/>this<sp/>is<sp/>not<sp/>really<sp/>noticeable<sp/>in<sp/>testing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>====================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>1993<sp/>by<sp/>Sun<sp/>Microsystems,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Developed<sp/>at<sp/>SunPro,<sp/>a<sp/>Sun<sp/>Microsystems,<sp/>Inc.<sp/>business.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and<sp/>distribute<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>is<sp/>freely<sp/>granted,<sp/>provided<sp/>that<sp/>this<sp/>notice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>preserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>====================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="errorfunction_8hpp" kindref="compound">ql/math/errorfunction.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cfloat&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceQuantLib" kindref="compound">QuantLib</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>erf(x)<sp/><sp/>=<sp/><sp/>---------<sp/><sp/>|<sp/>exp(-t*t)dt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqrt(pi)<sp/>\|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>erfc(x)<sp/>=<sp/><sp/>1-erf(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Note<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>erf(-x)<sp/>=<sp/>-erf(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>erfc(-x)<sp/>=<sp/>2<sp/>-<sp/>erfc(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Method:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>1.<sp/>For<sp/>|x|<sp/>in<sp/>[0,<sp/>0.84375]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>erf(x)<sp/><sp/>=<sp/>x<sp/>+<sp/>x*R(x^2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>erfc(x)<sp/>=<sp/>1<sp/>-<sp/>erf(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>x<sp/>in<sp/>[-.84375,0.25]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.5<sp/>+<sp/>((0.5-x)-x*R)<sp/><sp/>if<sp/>x<sp/>in<sp/>[0.25,0.84375]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>where<sp/>R<sp/>=<sp/>P/Q<sp/>where<sp/>P<sp/>is<sp/>an<sp/>odd<sp/>poly<sp/>of<sp/>degree<sp/>8<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Q<sp/>is<sp/>an<sp/>odd<sp/>poly<sp/>of<sp/>degree<sp/>10.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-57.90</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>R<sp/>-<sp/>(erf(x)-x)/x<sp/>|<sp/>&lt;=<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Remark.<sp/>The<sp/>formula<sp/>is<sp/>derived<sp/>by<sp/>noting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>erf(x)<sp/>=<sp/>(2/sqrt(pi))*(x<sp/>-<sp/>x^3/3<sp/>+<sp/>x^5/10<sp/>-<sp/>x^7/42<sp/>+<sp/>....)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>and<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2/sqrt(pi)<sp/>=<sp/>1.128379167095512573896158903121545171688</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>is<sp/>close<sp/>to<sp/>one.<sp/>The<sp/>interval<sp/>is<sp/>chosen<sp/>because<sp/>the<sp/>fix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>point<sp/>of<sp/>erf(x)<sp/>is<sp/>near<sp/>0.6174<sp/>(i.e.,<sp/>erf(x)=x<sp/>when<sp/>x<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>near<sp/>0.6174),<sp/>and<sp/>by<sp/>some<sp/>experiment,<sp/>0.84375<sp/>is<sp/>chosen<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>guarantee<sp/>the<sp/>error<sp/>is<sp/>less<sp/>than<sp/>one<sp/>ulp<sp/>for<sp/>erf.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>2.<sp/>For<sp/>|x|<sp/>in<sp/>[0.84375,1.25],<sp/>let<sp/>s<sp/>=<sp/>|x|<sp/>-<sp/>1,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>0.84506291151<sp/>rounded<sp/>to<sp/>single<sp/>(24<sp/>bits)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>erf(x)<sp/><sp/>=<sp/>sign(x)<sp/>*<sp/>(c<sp/><sp/>+<sp/>P1(s)/Q1(s))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>erfc(x)<sp/>=<sp/>(1-c)<sp/><sp/>-<sp/>P1(s)/Q1(s)<sp/>if<sp/>x<sp/>&gt;<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1+(c+P1(s)/Q1(s))<sp/><sp/><sp/><sp/>if<sp/>x<sp/>&lt;<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>|P1/Q1<sp/>-<sp/>(erf(|x|)-c)|<sp/>&lt;=<sp/>2**-59.06</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Remark:<sp/>here<sp/>we<sp/>use<sp/>the<sp/>taylor<sp/>series<sp/>expansion<sp/>at<sp/>x=1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>erf(1+s)<sp/>=<sp/>erf(1)<sp/>+<sp/>s*Poly(s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.845..<sp/>+<sp/>P1(s)/Q1(s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>That<sp/>is,<sp/>we<sp/>use<sp/>rational<sp/>approximation<sp/>to<sp/>approximate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>erf(1+s)<sp/>-<sp/>(c<sp/>=<sp/>(single)0.84506291151)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Note<sp/>that<sp/>|P1/Q1|&lt;<sp/>0.078<sp/>for<sp/>x<sp/>in<sp/>[0.84375,1.25]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>P1(s)<sp/>=<sp/>degree<sp/>6<sp/>poly<sp/>in<sp/>s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Q1(s)<sp/>=<sp/>degree<sp/>6<sp/>poly<sp/>in<sp/>s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>3.<sp/>For<sp/>x<sp/>in<sp/>[1.25,1/0.35(~2.857143)],</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>erfc(x)<sp/>=<sp/>(1/x)*exp(-x*x-0.5625+R1/S1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>erf(x)<sp/><sp/>=<sp/>1<sp/>-<sp/>erfc(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>R1(z)<sp/>=<sp/>degree<sp/>7<sp/>poly<sp/>in<sp/>z,<sp/>(z=1/x^2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>S1(z)<sp/>=<sp/>degree<sp/>8<sp/>poly<sp/>in<sp/>z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>4.<sp/>For<sp/>x<sp/>in<sp/>[1/0.35,28]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>erfc(x)<sp/>=<sp/>(1/x)*exp(-x*x-0.5625+R2/S2)<sp/>if<sp/>x<sp/>&gt;<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2.0<sp/>-<sp/>(1/x)*exp(-x*x-0.5625+R2/S2)<sp/>if<sp/>-6&lt;x&lt;0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2.0<sp/>-<sp/>tiny<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(if<sp/>x<sp/>&lt;=<sp/>-6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>erf(x)<sp/><sp/>=<sp/>sign(x)*(1.0<sp/>-<sp/>erfc(x))<sp/>if<sp/>x<sp/>&lt;<sp/>6,<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>erf(x)<sp/><sp/>=<sp/>sign(x)*(1.0<sp/>-<sp/>tiny)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>R2(z)<sp/>=<sp/>degree<sp/>6<sp/>poly<sp/>in<sp/>z,<sp/>(z=1/x^2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>S2(z)<sp/>=<sp/>degree<sp/>7<sp/>poly<sp/>in<sp/>z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Note1:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>To<sp/>compute<sp/>exp(-x*x-0.5625+R/S),<sp/>let<sp/>s<sp/>be<sp/>a<sp/>single</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>precision<sp/>number<sp/>and<sp/>s<sp/>:=<sp/>x;<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>-x*x<sp/>=<sp/>-s*s<sp/>+<sp/>(s-x)*(s+x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exp(-x*x-0.5626+R/S)<sp/>=</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exp(-s*s-0.5625)*exp((s-x)*(s+x)+R/S);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Note2:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Here<sp/>4<sp/>and<sp/>5<sp/>make<sp/>use<sp/>of<sp/>the<sp/>asymptotic<sp/>series</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exp(-x*x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>erfc(x)<sp/>~<sp/>----------<sp/>*<sp/>(<sp/>1<sp/>+<sp/>Poly(1/x^2)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x*sqrt(pi)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>We<sp/>use<sp/>rational<sp/>approximation<sp/>to<sp/>approximate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>g(s)=f(1/x^2)<sp/>=<sp/>log(erfc(x)*x)<sp/>-<sp/>x*x<sp/>+<sp/>0.5625</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Here<sp/>is<sp/>the<sp/>error<sp/>bound<sp/>for<sp/>R1/S1<sp/>and<sp/>R2/S2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>|R1/S1<sp/>-<sp/>f(x)|<sp/><sp/>&lt;<sp/>2**(-62.57)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>|R2/S2<sp/>-<sp/>f(x)|<sp/><sp/>&lt;<sp/>2**(-61.52)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>5.<sp/>For<sp/>inf<sp/>&gt;<sp/>x<sp/>&gt;=<sp/>28</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>erf(x)<sp/><sp/>=<sp/>sign(x)<sp/>*(1<sp/>-<sp/>tiny)<sp/><sp/>(raise<sp/>inexact)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>erfc(x)<sp/>=<sp/>tiny*tiny<sp/>(raise<sp/>underflow)<sp/>if<sp/>x<sp/>&gt;<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2<sp/>-<sp/>tiny<sp/>if<sp/>x&lt;0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>7.<sp/>Special<sp/>case:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>erf(0)<sp/><sp/>=<sp/>0,<sp/>erf(inf)<sp/><sp/>=<sp/>1,<sp/>erf(-inf)<sp/>=<sp/>-1,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>erfc(0)<sp/>=<sp/>1,<sp/>erfc(inf)<sp/>=<sp/>0,<sp/>erfc(-inf)<sp/>=<sp/>2,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>erfc/erf(NaN)<sp/>is<sp/>NaN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a5d7285bf56395a36c549a46f5d8b1281" kindref="member">ErrorFunction::tiny</ref><sp/>=<sp/><sp/><ref refid="group__limitMacros_1ga4f2e6bcf6b19224bce1a5a6234286c17" kindref="member">QL_EPSILON</ref>,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a2cd8521b5a314209ef4440989b054156" kindref="member">ErrorFunction::one</ref><sp/>=<sp/><sp/>1.00000000000000000000e+00,<sp/></highlight><highlight class="comment">/*<sp/>0x3FF00000,<sp/>0x00000000<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>c<sp/>=<sp/>(float)0.84506291151<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1ac61c57eb3f4307737b2c76ac708cce6c" kindref="member">ErrorFunction::erx</ref><sp/>=<sp/><sp/>8.45062911510467529297e-01,<sp/></highlight><highlight class="comment">/*<sp/>0x3FEB0AC1,<sp/>0x60000000<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Coefficients<sp/>for<sp/>approximation<sp/>to<sp/><sp/>erf<sp/>on<sp/>[0,0.84375]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1afb4f1297bffef285b75e5416e1efb37c" kindref="member">ErrorFunction::efx</ref><sp/><sp/>=<sp/><sp/>1.28379167095512586316e-01,<sp/></highlight><highlight class="comment">/*<sp/>0x3FC06EBA,<sp/>0x8214DB69<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a23524296e1ecefad979503e68495fdf9" kindref="member">ErrorFunction::efx8</ref><sp/>=<sp/><sp/>1.02703333676410069053e+00,<sp/></highlight><highlight class="comment">/*<sp/>0x3FF06EBA,<sp/>0x8214DB69<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1aef9996248258427a448ac62e60e47166" kindref="member">ErrorFunction::pp0</ref><sp/><sp/>=<sp/><sp/>1.28379167095512558561e-01,<sp/></highlight><highlight class="comment">/*<sp/>0x3FC06EBA,<sp/>0x8214DB68<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a1e8b4274b5556d7ec1e56b2d73c223c8" kindref="member">ErrorFunction::pp1</ref><sp/><sp/>=<sp/>-3.25042107247001499370e-01,<sp/></highlight><highlight class="comment">/*<sp/>0xBFD4CD7D,<sp/>0x691CB913<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a413893f22d52cea8c01ed81d174131ba" kindref="member">ErrorFunction::pp2</ref><sp/><sp/>=<sp/>-2.84817495755985104766e-02,<sp/></highlight><highlight class="comment">/*<sp/>0xBF9D2A51,<sp/>0xDBD7194F<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a9198f351d59797934ecc8fb1e65ff7be" kindref="member">ErrorFunction::pp3</ref><sp/><sp/>=<sp/>-5.77027029648944159157e-03,<sp/></highlight><highlight class="comment">/*<sp/>0xBF77A291,<sp/>0x236668E4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a0b85675aca254733a080e5fc0a116e45" kindref="member">ErrorFunction::pp4</ref><sp/><sp/>=<sp/>-2.37630166566501626084e-05,<sp/></highlight><highlight class="comment">/*<sp/>0xBEF8EAD6,<sp/>0x120016AC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1aae0b8bb16c73e9aa453ed92be0fcff0e" kindref="member">ErrorFunction::qq1</ref><sp/><sp/>=<sp/><sp/>3.97917223959155352819e-01,<sp/></highlight><highlight class="comment">/*<sp/>0x3FD97779,<sp/>0xCDDADC09<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a75e434869b3c1219d518fbfad4861dab" kindref="member">ErrorFunction::qq2</ref><sp/><sp/>=<sp/><sp/>6.50222499887672944485e-02,<sp/></highlight><highlight class="comment">/*<sp/>0x3FB0A54C,<sp/>0x5536CEBA<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a44f8849e446d5224e01493e1578708e2" kindref="member">ErrorFunction::qq3</ref><sp/><sp/>=<sp/><sp/>5.08130628187576562776e-03,<sp/></highlight><highlight class="comment">/*<sp/>0x3F74D022,<sp/>0xC4D36B0F<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a94bbe0e6089178253fc3a3bdb66009ea" kindref="member">ErrorFunction::qq4</ref><sp/><sp/>=<sp/><sp/>1.32494738004321644526e-04,<sp/></highlight><highlight class="comment">/*<sp/>0x3F215DC9,<sp/>0x221C1A10<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1abb655363f9e2bc668d080c27f71d684d" kindref="member">ErrorFunction::qq5</ref><sp/><sp/>=<sp/>-3.96022827877536812320e-06,<sp/></highlight><highlight class="comment">/*<sp/>0xBED09C43,<sp/>0x42A26120<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Coefficients<sp/>for<sp/>approximation<sp/>to<sp/><sp/>erf<sp/><sp/>in<sp/>[0.84375,1.25]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a73da66520999268b1f4ab959e3e88f7b" kindref="member">ErrorFunction::pa0</ref><sp/><sp/>=<sp/>-2.36211856075265944077e-03,<sp/></highlight><highlight class="comment">/*<sp/>0xBF6359B8,<sp/>0xBEF77538<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1ae7b9cd379a8725595229e746ee3fc7bd" kindref="member">ErrorFunction::pa1</ref><sp/><sp/>=<sp/><sp/>4.14856118683748331666e-01,<sp/></highlight><highlight class="comment">/*<sp/>0x3FDA8D00,<sp/>0xAD92B34D<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a6d96ad34dc4fe988b293ff92ee490cd8" kindref="member">ErrorFunction::pa2</ref><sp/><sp/>=<sp/>-3.72207876035701323847e-01,<sp/></highlight><highlight class="comment">/*<sp/>0xBFD7D240,<sp/>0xFBB8C3F1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a55bf2f6073ad6b2ed96a1c749bc97156" kindref="member">ErrorFunction::pa3</ref><sp/><sp/>=<sp/><sp/>3.18346619901161753674e-01,<sp/></highlight><highlight class="comment">/*<sp/>0x3FD45FCA,<sp/>0x805120E4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1ade46282cbdf89bfdaee9356c8b68388e" kindref="member">ErrorFunction::pa4</ref><sp/><sp/>=<sp/>-1.10894694282396677476e-01,<sp/></highlight><highlight class="comment">/*<sp/>0xBFBC6398,<sp/>0x3D3E28EC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1aa748173cf970c4cb97af852c58c1de02" kindref="member">ErrorFunction::pa5</ref><sp/><sp/>=<sp/><sp/>3.54783043256182359371e-02,<sp/></highlight><highlight class="comment">/*<sp/>0x3FA22A36,<sp/>0x599795EB<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a78dfcc6b423cbaa7fb7f696a11e60627" kindref="member">ErrorFunction::pa6</ref><sp/><sp/>=<sp/>-2.16637559486879084300e-03,<sp/></highlight><highlight class="comment">/*<sp/>0xBF61BF38,<sp/>0x0A96073F<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1ad57760a18dbe7ad70a60e4b5bd43bde1" kindref="member">ErrorFunction::qa1</ref><sp/><sp/>=<sp/><sp/>1.06420880400844228286e-01,<sp/></highlight><highlight class="comment">/*<sp/>0x3FBB3E66,<sp/>0x18EEE323<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a59519ac72105c5600968f25b2155277e" kindref="member">ErrorFunction::qa2</ref><sp/><sp/>=<sp/><sp/>5.40397917702171048937e-01,<sp/></highlight><highlight class="comment">/*<sp/>0x3FE14AF0,<sp/>0x92EB6F33<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a4722da30d3eb21a7c76681a02be89411" kindref="member">ErrorFunction::qa3</ref><sp/><sp/>=<sp/><sp/>7.18286544141962662868e-02,<sp/></highlight><highlight class="comment">/*<sp/>0x3FB2635C,<sp/>0xD99FE9A7<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1aa0982f59c1241c7a374e8771c67d7254" kindref="member">ErrorFunction::qa4</ref><sp/><sp/>=<sp/><sp/>1.26171219808761642112e-01,<sp/></highlight><highlight class="comment">/*<sp/>0x3FC02660,<sp/>0xE763351F<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a15a0bab347245311cabed2e70447c871" kindref="member">ErrorFunction::qa5</ref><sp/><sp/>=<sp/><sp/>1.36370839120290507362e-02,<sp/></highlight><highlight class="comment">/*<sp/>0x3F8BEDC2,<sp/>0x6B51DD1C<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1afeceb8218f598ff6d162aed04041c035" kindref="member">ErrorFunction::qa6</ref><sp/><sp/>=<sp/><sp/>1.19844998467991074170e-02,<sp/></highlight><highlight class="comment">/*<sp/>0x3F888B54,<sp/>0x5735151D<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Coefficients<sp/>for<sp/>approximation<sp/>to<sp/><sp/>erfc<sp/>in<sp/>[1.25,1/0.35]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a2c2bb2f718befcb3a6582553bce0d2ea" kindref="member">ErrorFunction::ra0</ref><sp/><sp/>=<sp/>-9.86494403484714822705e-03,<sp/></highlight><highlight class="comment">/*<sp/>0xBF843412,<sp/>0x600D6435<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a9dfd295ea4d5f9f4073a01e706bf9d07" kindref="member">ErrorFunction::ra1</ref><sp/><sp/>=<sp/>-6.93858572707181764372e-01,<sp/></highlight><highlight class="comment">/*<sp/>0xBFE63416,<sp/>0xE4BA7360<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1af3a340d993bcbb40a2456ea6750a9df5" kindref="member">ErrorFunction::ra2</ref><sp/><sp/>=<sp/>-1.05586262253232909814e+01,<sp/></highlight><highlight class="comment">/*<sp/>0xC0251E04,<sp/>0x41B0E726<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1af17c1336ef2602457b2e19a7db0798ee" kindref="member">ErrorFunction::ra3</ref><sp/><sp/>=<sp/>-6.23753324503260060396e+01,<sp/></highlight><highlight class="comment">/*<sp/>0xC04F300A,<sp/>0xE4CBA38D<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a8a911ae11065d85523021319853cc83c" kindref="member">ErrorFunction::ra4</ref><sp/><sp/>=<sp/>-1.62396669462573470355e+02,<sp/></highlight><highlight class="comment">/*<sp/>0xC0644CB1,<sp/>0x84282266<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a36c0ba443025f7f6bc4fb08992320e84" kindref="member">ErrorFunction::ra5</ref><sp/><sp/>=<sp/>-1.84605092906711035994e+02,<sp/></highlight><highlight class="comment">/*<sp/>0xC067135C,<sp/>0xEBCCABB2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a15cd7edfa56dcc0bed2e440822baab3c" kindref="member">ErrorFunction::ra6</ref><sp/><sp/>=<sp/>-8.12874355063065934246e+01,<sp/></highlight><highlight class="comment">/*<sp/>0xC0545265,<sp/>0x57E4D2F2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1ab2ae07b83d555206f9a02b41593faed4" kindref="member">ErrorFunction::ra7</ref><sp/><sp/>=<sp/>-9.81432934416914548592e+00,<sp/></highlight><highlight class="comment">/*<sp/>0xC023A0EF,<sp/>0xC69AC25C<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1ae7ff8d2a8e3ef594e5e300a72a87aba4" kindref="member">ErrorFunction::sa1</ref><sp/><sp/>=<sp/><sp/>1.96512716674392571292e+01,<sp/></highlight><highlight class="comment">/*<sp/>0x4033A6B9,<sp/>0xBD707687<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a5394a6436f255ddb7e39e3b09297b823" kindref="member">ErrorFunction::sa2</ref><sp/><sp/>=<sp/><sp/>1.37657754143519042600e+02,<sp/></highlight><highlight class="comment">/*<sp/>0x4061350C,<sp/>0x526AE721<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a1b0d2c1d2ca46b877a210f3515b884b1" kindref="member">ErrorFunction::sa3</ref><sp/><sp/>=<sp/><sp/>4.34565877475229228821e+02,<sp/></highlight><highlight class="comment">/*<sp/>0x407B290D,<sp/>0xD58A1A71<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1ae8a297f954b287dfb25192f6ac5b1cbb" kindref="member">ErrorFunction::sa4</ref><sp/><sp/>=<sp/><sp/>6.45387271733267880336e+02,<sp/></highlight><highlight class="comment">/*<sp/>0x40842B19,<sp/>0x21EC2868<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a1ebd52fb61943ed3f1d0f4348f25f7e9" kindref="member">ErrorFunction::sa5</ref><sp/><sp/>=<sp/><sp/>4.29008140027567833386e+02,<sp/></highlight><highlight class="comment">/*<sp/>0x407AD021,<sp/>0x57700314<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1acf9631546f2645237b8935056abc591a" kindref="member">ErrorFunction::sa6</ref><sp/><sp/>=<sp/><sp/>1.08635005541779435134e+02,<sp/></highlight><highlight class="comment">/*<sp/>0x405B28A3,<sp/>0xEE48AE2C<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a840215fbc2bfbcbb17d879a3226157ed" kindref="member">ErrorFunction::sa7</ref><sp/><sp/>=<sp/><sp/>6.57024977031928170135e+00,<sp/></highlight><highlight class="comment">/*<sp/>0x401A47EF,<sp/>0x8E484A93<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a660454704e2aaa48875c6404f24d8f11" kindref="member">ErrorFunction::sa8</ref><sp/><sp/>=<sp/>-6.04244152148580987438e-02,<sp/></highlight><highlight class="comment">/*<sp/>0xBFAEEFF2,<sp/>0xEE749A62<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Coefficients<sp/>for<sp/>approximation<sp/>to<sp/><sp/>erfc<sp/>in<sp/>[1/.35,28]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1acaf1ea7c909d04498f624765d4403b6e" kindref="member">ErrorFunction::rb0</ref><sp/><sp/>=<sp/>-9.86494292470009928597e-03,<sp/></highlight><highlight class="comment">/*<sp/>0xBF843412,<sp/>0x39E86F4A<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1ab006ae0fc1bf81e86221f9e44ec53485" kindref="member">ErrorFunction::rb1</ref><sp/><sp/>=<sp/>-7.99283237680523006574e-01,<sp/></highlight><highlight class="comment">/*<sp/>0xBFE993BA,<sp/>0x70C285DE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1ad4295c2bc8cabe70f36e5017eb0e7bf6" kindref="member">ErrorFunction::rb2</ref><sp/><sp/>=<sp/>-1.77579549177547519889e+01,<sp/></highlight><highlight class="comment">/*<sp/>0xC031C209,<sp/>0x555F995A<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1aa040d5917fbbef8534229b2d59e48a4f" kindref="member">ErrorFunction::rb3</ref><sp/><sp/>=<sp/>-1.60636384855821916062e+02,<sp/></highlight><highlight class="comment">/*<sp/>0xC064145D,<sp/>0x43C5ED98<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a7edaae44779f57f63dd5f59567d5121f" kindref="member">ErrorFunction::rb4</ref><sp/><sp/>=<sp/>-6.37566443368389627722e+02,<sp/></highlight><highlight class="comment">/*<sp/>0xC083EC88,<sp/>0x1375F228<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a590d00b8e04598df38002501950bd575" kindref="member">ErrorFunction::rb5</ref><sp/><sp/>=<sp/>-1.02509513161107724954e+03,<sp/></highlight><highlight class="comment">/*<sp/>0xC0900461,<sp/>0x6A2E5992<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1af51eed554f983a19fea1124af0352090" kindref="member">ErrorFunction::rb6</ref><sp/><sp/>=<sp/>-4.83519191608651397019e+02,<sp/></highlight><highlight class="comment">/*<sp/>0xC07E384E,<sp/>0x9BDC383F<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1aa6c019a6ec92d48fbd71e27716c03fd0" kindref="member">ErrorFunction::sb1</ref><sp/><sp/>=<sp/><sp/>3.03380607434824582924e+01,<sp/></highlight><highlight class="comment">/*<sp/>0x403E568B,<sp/>0x261D5190<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a399e21a0e209aa0b744f60b1f3617b3e" kindref="member">ErrorFunction::sb2</ref><sp/><sp/>=<sp/><sp/>3.25792512996573918826e+02,<sp/></highlight><highlight class="comment">/*<sp/>0x40745CAE,<sp/>0x221B9F0A<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a49ab560c96be0006be7a14fde72e54e8" kindref="member">ErrorFunction::sb3</ref><sp/><sp/>=<sp/><sp/>1.53672958608443695994e+03,<sp/></highlight><highlight class="comment">/*<sp/>0x409802EB,<sp/>0x189D5118<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a906ed6af690d1109a236aa8bb0d402d9" kindref="member">ErrorFunction::sb4</ref><sp/><sp/>=<sp/><sp/>3.19985821950859553908e+03,<sp/></highlight><highlight class="comment">/*<sp/>0x40A8FFB7,<sp/>0x688C246A<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1afe626401657c54f0bdeac2d37f803c65" kindref="member">ErrorFunction::sb5</ref><sp/><sp/>=<sp/><sp/>2.55305040643316442583e+03,<sp/></highlight><highlight class="comment">/*<sp/>0x40A3F219,<sp/>0xCEDF3BE6<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a61f488fef3c7fe0fb6bf3480128da662" kindref="member">ErrorFunction::sb6</ref><sp/><sp/>=<sp/><sp/>4.74528541206955367215e+02,<sp/></highlight><highlight class="comment">/*<sp/>0x407DA874,<sp/>0xE79FE763<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1ErrorFunction_1ae7f28b1861b5ccee658cf9b20d1d18cc" kindref="member">ErrorFunction::sb7</ref><sp/><sp/>=<sp/>-2.24409524465858183362e+01;<sp/></highlight><highlight class="comment">/*<sp/>0xC03670E2,<sp/>0x42712D62<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1ErrorFunction_1aa98fda634004f849b53672fd99d362eb" kindref="member">ErrorFunction::operator()</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>x)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>R,S,P,Q,s,y,z,r,<sp/>ax;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!std::isfinite(x))<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::isnan(x))</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/>x<sp/>&gt;<sp/>0<sp/>?<sp/>1<sp/>:<sp/>-1);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ax<sp/>=<sp/>std::fabs(x);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ax<sp/>&lt;<sp/>0.84375)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>|x|&lt;0.84375<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ax<sp/>&lt;<sp/>3.7252902984e-09)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>|x|&lt;2**-28<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ax<sp/>&lt;<sp/>DBL_MIN*16)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.125*(8.0*x+<ref refid="classQuantLib_1_1ErrorFunction_1a23524296e1ecefad979503e68495fdf9" kindref="member">efx8</ref>*x);<sp/><sp/></highlight><highlight class="comment">/*avoid<sp/>underflow<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>+<sp/><ref refid="classQuantLib_1_1ErrorFunction_1afb4f1297bffef285b75e5416e1efb37c" kindref="member">efx</ref>*x;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>x*x;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/><ref refid="classQuantLib_1_1ErrorFunction_1aef9996248258427a448ac62e60e47166" kindref="member">pp0</ref>+z*(<ref refid="classQuantLib_1_1ErrorFunction_1a1e8b4274b5556d7ec1e56b2d73c223c8" kindref="member">pp1</ref>+z*(<ref refid="classQuantLib_1_1ErrorFunction_1a413893f22d52cea8c01ed81d174131ba" kindref="member">pp2</ref>+z*(<ref refid="classQuantLib_1_1ErrorFunction_1a9198f351d59797934ecc8fb1e65ff7be" kindref="member">pp3</ref>+z*<ref refid="classQuantLib_1_1ErrorFunction_1a0b85675aca254733a080e5fc0a116e45" kindref="member">pp4</ref>)));</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="classQuantLib_1_1ErrorFunction_1a2cd8521b5a314209ef4440989b054156" kindref="member">one</ref>+z*(<ref refid="classQuantLib_1_1ErrorFunction_1aae0b8bb16c73e9aa453ed92be0fcff0e" kindref="member">qq1</ref>+z*(<ref refid="classQuantLib_1_1ErrorFunction_1a75e434869b3c1219d518fbfad4861dab" kindref="member">qq2</ref>+z*(<ref refid="classQuantLib_1_1ErrorFunction_1a44f8849e446d5224e01493e1578708e2" kindref="member">qq3</ref>+z*(<ref refid="classQuantLib_1_1ErrorFunction_1a94bbe0e6089178253fc3a3bdb66009ea" kindref="member">qq4</ref>+z*<ref refid="classQuantLib_1_1ErrorFunction_1abb655363f9e2bc668d080c27f71d684d" kindref="member">qq5</ref>))));</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>r/s;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>+<sp/>x*y;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ax<sp/>&lt;1.25)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0.84375<sp/>&lt;=<sp/>|x|<sp/>&lt;<sp/>1.25<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>ax-<ref refid="classQuantLib_1_1ErrorFunction_1a2cd8521b5a314209ef4440989b054156" kindref="member">one</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P<sp/>=<sp/><ref refid="classQuantLib_1_1ErrorFunction_1a73da66520999268b1f4ab959e3e88f7b" kindref="member">pa0</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1ae7b9cd379a8725595229e746ee3fc7bd" kindref="member">pa1</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1a6d96ad34dc4fe988b293ff92ee490cd8" kindref="member">pa2</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1a55bf2f6073ad6b2ed96a1c749bc97156" kindref="member">pa3</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1ade46282cbdf89bfdaee9356c8b68388e" kindref="member">pa4</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1aa748173cf970c4cb97af852c58c1de02" kindref="member">pa5</ref>+s*<ref refid="classQuantLib_1_1ErrorFunction_1a78dfcc6b423cbaa7fb7f696a11e60627" kindref="member">pa6</ref>)))));</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q<sp/>=<sp/><ref refid="classQuantLib_1_1ErrorFunction_1a2cd8521b5a314209ef4440989b054156" kindref="member">one</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1ad57760a18dbe7ad70a60e4b5bd43bde1" kindref="member">qa1</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1a59519ac72105c5600968f25b2155277e" kindref="member">qa2</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1a4722da30d3eb21a7c76681a02be89411" kindref="member">qa3</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1aa0982f59c1241c7a374e8771c67d7254" kindref="member">qa4</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1a15a0bab347245311cabed2e70447c871" kindref="member">qa5</ref>+s*<ref refid="classQuantLib_1_1ErrorFunction_1afeceb8218f598ff6d162aed04041c035" kindref="member">qa6</ref>)))));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x&gt;=0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1ErrorFunction_1ac61c57eb3f4307737b2c76ac708cce6c" kindref="member">erx</ref><sp/>+<sp/>P/Q;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="classQuantLib_1_1ErrorFunction_1ac61c57eb3f4307737b2c76ac708cce6c" kindref="member">erx</ref><sp/>-<sp/>P/Q;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ax<sp/>&gt;=<sp/>6)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>inf&gt;|x|&gt;=6<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x&gt;=0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a2cd8521b5a314209ef4440989b054156" kindref="member">one</ref>-<ref refid="classQuantLib_1_1ErrorFunction_1a5d7285bf56395a36c549a46f5d8b1281" kindref="member">tiny</ref>;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a5d7285bf56395a36c549a46f5d8b1281" kindref="member">tiny</ref>-<ref refid="classQuantLib_1_1ErrorFunction_1a2cd8521b5a314209ef4440989b054156" kindref="member">one</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Starts<sp/>to<sp/>lose<sp/>accuracy<sp/>when<sp/>ax~5<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="classQuantLib_1_1ErrorFunction_1a2cd8521b5a314209ef4440989b054156" kindref="member">one</ref>/(ax*ax);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ax<sp/>&lt;<sp/>2.85714285714285)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>|x|<sp/>&lt;<sp/>1/0.35<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/>=<sp/><ref refid="classQuantLib_1_1ErrorFunction_1a2c2bb2f718befcb3a6582553bce0d2ea" kindref="member">ra0</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1a9dfd295ea4d5f9f4073a01e706bf9d07" kindref="member">ra1</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1af3a340d993bcbb40a2456ea6750a9df5" kindref="member">ra2</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1af17c1336ef2602457b2e19a7db0798ee" kindref="member">ra3</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1a8a911ae11065d85523021319853cc83c" kindref="member">ra4</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1a36c0ba443025f7f6bc4fb08992320e84" kindref="member">ra5</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1a15cd7edfa56dcc0bed2e440822baab3c" kindref="member">ra6</ref>+s*<ref refid="classQuantLib_1_1ErrorFunction_1ab2ae07b83d555206f9a02b41593faed4" kindref="member">ra7</ref>))))));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S=<ref refid="classQuantLib_1_1ErrorFunction_1a2cd8521b5a314209ef4440989b054156" kindref="member">one</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1ae7ff8d2a8e3ef594e5e300a72a87aba4" kindref="member">sa1</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1a5394a6436f255ddb7e39e3b09297b823" kindref="member">sa2</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1a1b0d2c1d2ca46b877a210f3515b884b1" kindref="member">sa3</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1ae8a297f954b287dfb25192f6ac5b1cbb" kindref="member">sa4</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1a1ebd52fb61943ed3f1d0f4348f25f7e9" kindref="member">sa5</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1acf9631546f2645237b8935056abc591a" kindref="member">sa6</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1a840215fbc2bfbcbb17d879a3226157ed" kindref="member">sa7</ref>+s*<ref refid="classQuantLib_1_1ErrorFunction_1a660454704e2aaa48875c6404f24d8f11" kindref="member">sa8</ref>)))))));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>|x|<sp/>&gt;=<sp/>1/0.35<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R=<ref refid="classQuantLib_1_1ErrorFunction_1acaf1ea7c909d04498f624765d4403b6e" kindref="member">rb0</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1ab006ae0fc1bf81e86221f9e44ec53485" kindref="member">rb1</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1ad4295c2bc8cabe70f36e5017eb0e7bf6" kindref="member">rb2</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1aa040d5917fbbef8534229b2d59e48a4f" kindref="member">rb3</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1a7edaae44779f57f63dd5f59567d5121f" kindref="member">rb4</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1a590d00b8e04598df38002501950bd575" kindref="member">rb5</ref>+s*<ref refid="classQuantLib_1_1ErrorFunction_1af51eed554f983a19fea1124af0352090" kindref="member">rb6</ref>)))));</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S=<ref refid="classQuantLib_1_1ErrorFunction_1a2cd8521b5a314209ef4440989b054156" kindref="member">one</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1aa6c019a6ec92d48fbd71e27716c03fd0" kindref="member">sb1</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1a399e21a0e209aa0b744f60b1f3617b3e" kindref="member">sb2</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1a49ab560c96be0006be7a14fde72e54e8" kindref="member">sb3</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1a906ed6af690d1109a236aa8bb0d402d9" kindref="member">sb4</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1afe626401657c54f0bdeac2d37f803c65" kindref="member">sb5</ref>+s*(<ref refid="classQuantLib_1_1ErrorFunction_1a61f488fef3c7fe0fb6bf3480128da662" kindref="member">sb6</ref>+s*<ref refid="classQuantLib_1_1ErrorFunction_1ae7f28b1861b5ccee658cf9b20d1d18cc" kindref="member">sb7</ref>))))));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>std::exp(<sp/>-ax*ax-0.5625<sp/>+R/S);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(x&gt;=0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1ErrorFunction_1a2cd8521b5a314209ef4440989b054156" kindref="member">one</ref>-r/ax;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>r/ax-<ref refid="classQuantLib_1_1ErrorFunction_1a2cd8521b5a314209ef4440989b054156" kindref="member">one</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="ql/math/errorfunction.cpp"/>
  </compounddef>
</doxygen>
