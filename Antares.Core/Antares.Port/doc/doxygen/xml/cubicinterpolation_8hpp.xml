<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="cubicinterpolation_8hpp" kind="file" language="C++">
    <compoundname>cubicinterpolation.hpp</compoundname>
    <includes local="no">algorithm</includes>
    <includes refid="matrix_8hpp" local="no">ql/math/matrix.hpp</includes>
    <includes refid="interpolation_8hpp" local="no">ql/math/interpolation.hpp</includes>
    <includes refid="tridiagonaloperator_8hpp" local="no">ql/methods/finitedifferences/tridiagonaloperator.hpp</includes>
    <includes local="no">vector</includes>
    <includedby refid="fdm1dimsolver_8cpp" local="no">ql/methods/finitedifferences/solvers/fdm1dimsolver.cpp</includedby>
    <incdepgraph>
      <node id="9">
        <label>ql/config.ansi.hpp</label>
        <link refid="config_8ansi_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ql/errors.hpp</label>
        <link refid="errors_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ql/math/array.hpp</label>
        <link refid="array_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>ql/math/comparison.hpp</label>
        <link refid="comparison_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>ql/math/interpolation.hpp</label>
        <link refid="interpolation_8hpp"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ql/math/interpolations/cubicinterpolation.hpp</label>
        <link refid="cubicinterpolation_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>ql/math/interpolations/extrapolation.hpp</label>
        <link refid="extrapolation_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ql/math/matrix.hpp</label>
        <link refid="matrix_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ql/mathconstants.hpp</label>
        <link refid="mathconstants_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>ql/methods/finitedifferences/tridiagonaloperator.hpp</label>
        <link refid="tridiagonaloperator_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>ql/qldefines.hpp</label>
        <link refid="qldefines_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ql/shared_ptr.hpp</label>
        <link refid="shared__ptr_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ql/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ql/userconfig.hpp</label>
        <link refid="userconfig_8hpp"/>
      </node>
      <node id="25">
        <label>ql/utilities/null.hpp</label>
        <link refid="null_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>ql/utilities/steppingiterator.hpp</label>
        <link refid="steppingiterator_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>algorithm</label>
      </node>
      <node id="20">
        <label>boost/assert.hpp</label>
      </node>
      <node id="7">
        <label>boost/config.hpp</label>
      </node>
      <node id="21">
        <label>boost/current_function.hpp</label>
      </node>
      <node id="19">
        <label>boost/enable_shared_from_this.hpp</label>
      </node>
      <node id="18">
        <label>boost/make_shared.hpp</label>
      </node>
      <node id="17">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="8">
        <label>boost/version.hpp</label>
      </node>
      <node id="12">
        <label>cmath</label>
      </node>
      <node id="14">
        <label>cstddef</label>
      </node>
      <node id="22">
        <label>exception</label>
      </node>
      <node id="28">
        <label>functional</label>
      </node>
      <node id="31">
        <label>initializer_list</label>
      </node>
      <node id="32">
        <label>iomanip</label>
      </node>
      <node id="27">
        <label>iterator</label>
      </node>
      <node id="13">
        <label>limits</label>
      </node>
      <node id="33">
        <label>memory</label>
      </node>
      <node id="29">
        <label>numeric</label>
      </node>
      <node id="23">
        <label>sstream</label>
      </node>
      <node id="24">
        <label>string</label>
      </node>
      <node id="26">
        <label>type_traits</label>
      </node>
      <node id="30">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>ql/math/interpolations/cubicinterpolation.hpp</label>
        <link refid="cubicinterpolation_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ql/methods/finitedifferences/solvers/fdm1dimsolver.cpp</label>
        <link refid="fdm1dimsolver_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classQuantLib_1_1detail_1_1CoefficientHolder" prot="public">QuantLib::detail::CoefficientHolder</innerclass>
    <innerclass refid="classQuantLib_1_1CubicInterpolation" prot="public">QuantLib::CubicInterpolation</innerclass>
    <innerclass refid="classQuantLib_1_1CubicNaturalSpline" prot="public">QuantLib::CubicNaturalSpline</innerclass>
    <innerclass refid="classQuantLib_1_1MonotonicCubicNaturalSpline" prot="public">QuantLib::MonotonicCubicNaturalSpline</innerclass>
    <innerclass refid="classQuantLib_1_1CubicSplineOvershootingMinimization1" prot="public">QuantLib::CubicSplineOvershootingMinimization1</innerclass>
    <innerclass refid="classQuantLib_1_1CubicSplineOvershootingMinimization2" prot="public">QuantLib::CubicSplineOvershootingMinimization2</innerclass>
    <innerclass refid="classQuantLib_1_1AkimaCubicInterpolation" prot="public">QuantLib::AkimaCubicInterpolation</innerclass>
    <innerclass refid="classQuantLib_1_1KrugerCubic" prot="public">QuantLib::KrugerCubic</innerclass>
    <innerclass refid="classQuantLib_1_1HarmonicCubic" prot="public">QuantLib::HarmonicCubic</innerclass>
    <innerclass refid="classQuantLib_1_1FritschButlandCubic" prot="public">QuantLib::FritschButlandCubic</innerclass>
    <innerclass refid="classQuantLib_1_1Parabolic" prot="public">QuantLib::Parabolic</innerclass>
    <innerclass refid="classQuantLib_1_1MonotonicParabolic" prot="public">QuantLib::MonotonicParabolic</innerclass>
    <innerclass refid="classQuantLib_1_1Cubic" prot="public">QuantLib::Cubic</innerclass>
    <innerclass refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl" prot="public">QuantLib::detail::CubicInterpolationImpl</innerclass>
    <innernamespace refid="namespaceQuantLib">QuantLib</innernamespace>
    <innernamespace refid="namespaceQuantLib_1_1detail">QuantLib::detail</innernamespace>
    <briefdescription>
<para>cubic interpolation between discrete points </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>c++;<sp/>tab-width:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil;<sp/>c-basic-offset:<sp/>4<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2000,<sp/>2001,<sp/>2002,<sp/>2003<sp/>RiskMap<sp/>srl</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2001,<sp/>2002,<sp/>2003<sp/>Nicolas<sp/>Di<sp/>Césaré</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2004,<sp/>2008,<sp/>2009,<sp/>2011<sp/>Ferdinando<sp/>Ametrano</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2009<sp/>Sylvain<sp/>Bertrand</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2013<sp/>Peter<sp/>Caspers</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2016<sp/>Nicholas<sp/>Bertocchi</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>QuantLib,<sp/>a<sp/>free-software/open-source<sp/>library</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>for<sp/>financial<sp/>quantitative<sp/>analysts<sp/>and<sp/>developers<sp/>-<sp/>http://quantlib.org/</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>QuantLib<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>QuantLib<sp/>license.<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>copy<sp/>of<sp/>the<sp/>license<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>please<sp/>email</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>&lt;quantlib-dev@lists.sf.net&gt;.<sp/>The<sp/>license<sp/>is<sp/>also<sp/>available<sp/>online<sp/>at</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>&lt;http://quantlib.org/license.shtml&gt;.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>license<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>quantlib_cubic_interpolation_hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>quantlib_cubic_interpolation_hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="matrix_8hpp" kindref="compound">ql/math/matrix.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="interpolation_8hpp" kindref="compound">ql/math/interpolation.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tridiagonaloperator_8hpp" kindref="compound">ql/methods/finitedifferences/tridiagonaloperator.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceQuantLib" kindref="compound">QuantLib</ref><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classQuantLib_1_1detail_1_1CoefficientHolder" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder" kindref="compound">CoefficientHolder</ref><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44" refid="classQuantLib_1_1detail_1_1CoefficientHolder_1adc039680a253501528d9d93a20d0d112" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1adc039680a253501528d9d93a20d0d112" kindref="member">CoefficientHolder</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>n)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>(n),<sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1aea766d3597798ed87177a110eb6b8f1f" kindref="member">primitiveConst_</ref>(n-1),<sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a8acc4f29e052a398aa1ea72097b65a32" kindref="member">a_</ref>(n-1),<sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1acbf9bee68fb8d13dba9b44d349f75dd8" kindref="member">b_</ref>(n-1),<sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a2aedc602998bda34827a09e4a92ab683" kindref="member">c_</ref>(n-1),</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1aced4d46a4d1e45e5e0d7d5c87cd4a899" kindref="member">monotonicityAdjustments_</ref>(n)<sp/>{}</highlight></codeline>
<codeline lineno="47" refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a983d356663bec120236e6e478d81e96d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a983d356663bec120236e6e478d81e96d" kindref="member">~CoefficientHolder</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48" refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>P[i](x)<sp/>=<sp/>y[i]<sp/>+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a[i]*(x-x[i])<sp/>+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b[i]*(x-x[i])^2<sp/>+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[i]*(x-x[i])^3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a8acc4f29e052a398aa1ea72097b65a32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Real&gt;<sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1aea766d3597798ed87177a110eb6b8f1f" kindref="member">primitiveConst_</ref>,<sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a8acc4f29e052a398aa1ea72097b65a32" kindref="member">a_</ref>,<sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1acbf9bee68fb8d13dba9b44d349f75dd8" kindref="member">b_</ref>,<sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a2aedc602998bda34827a09e4a92ab683" kindref="member">c_</ref>;</highlight></codeline>
<codeline lineno="54" refid="classQuantLib_1_1detail_1_1CoefficientHolder_1aced4d46a4d1e45e5e0d7d5c87cd4a899" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;bool&gt;<sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1aced4d46a4d1e45e5e0d7d5c87cd4a899" kindref="member">monotonicityAdjustments_</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I2&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl" kindref="compound">CubicInterpolationImpl</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classQuantLib_1_1CubicInterpolation" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classQuantLib_1_1CubicInterpolation" kindref="compound">CubicInterpolation</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Interpolation" kindref="compound">Interpolation</ref><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="108" refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28" kindref="member">DerivativeApprox</ref><sp/>{</highlight></codeline>
<codeline lineno="113" refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28aaa6b6cbb8010b02172412742c21ce2d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28aaa6b6cbb8010b02172412742c21ce2d7" kindref="member">Spline</ref>,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a2e0b992051247c4b596f0c76bf9b6872" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a2e0b992051247c4b596f0c76bf9b6872" kindref="member">SplineOM1</ref>,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a03364cf5474cc64cf64a6ad04a23e925" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a03364cf5474cc64cf64a6ad04a23e925" kindref="member">SplineOM2</ref>,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a8398e52e5ac2d6cb982583eb93121c60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a8398e52e5ac2d6cb982583eb93121c60" kindref="member">FourthOrder</ref>,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a59b262d48fba762c8ddf0f492142d401" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a59b262d48fba762c8ddf0f492142d401" kindref="member">Parabolic</ref>,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a382235585b6df81d2a2a76ebc67a51f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a382235585b6df81d2a2a76ebc67a51f1" kindref="member">FritschButland</ref>,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a3da52995b65ceaa3b317cd111d4effd6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a3da52995b65ceaa3b317cd111d4effd6" kindref="member">Akima</ref>,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a07ea2cd3f162271d5f00b36af15db775" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a07ea2cd3f162271d5f00b36af15db775" kindref="member">Kruger</ref>,<sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28ac68a4d60443425887e8fcc3bf5f5870f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28ac68a4d60443425887e8fcc3bf5f5870f" kindref="member">Harmonic</ref>,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="139" refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2" kindref="member">BoundaryCondition</ref><sp/>{</highlight></codeline>
<codeline lineno="141" refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2aa935d8faa9b58af88d0f2e10b4d8fd79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2aa935d8faa9b58af88d0f2e10b4d8fd79" kindref="member">NotAKnot</ref>,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2ad22688f36c922046f6c65b68af4b09ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2ad22688f36c922046f6c65b68af4b09ee" kindref="member">FirstDerivative</ref>,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">SecondDerivative</ref>,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2a6847b34b015cdf8ebe961cf88d821124" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2a6847b34b015cdf8ebe961cf88d821124" kindref="member">Periodic</ref>,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2a4f8cf58b888cceefce621dead46cecfb" kindref="member">Lagrange</ref></highlight></codeline>
<codeline lineno="156" refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2a4f8cf58b888cceefce621dead46cecfb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I2&gt;</highlight></codeline>
<codeline lineno="159" refid="classQuantLib_1_1CubicInterpolation_1ad01c1dd629c8828cc07bc5d19262a6b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ad01c1dd629c8828cc07bc5d19262a6b6" kindref="member">CubicInterpolation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xBegin,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xEnd,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I2&amp;<sp/>yBegin,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28" kindref="member">CubicInterpolation::DerivativeApprox</ref><sp/>da,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>monotonic,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2" kindref="member">CubicInterpolation::BoundaryCondition</ref><sp/>leftCond,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>leftConditionValue,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2" kindref="member">CubicInterpolation::BoundaryCondition</ref><sp/>rightCond,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>rightConditionValue)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Interpolation_1aef7940748a211476a0ed80e3a6ca9b9b" kindref="member">impl_</ref><sp/>=<sp/>ext::shared_ptr&lt;Interpolation::Impl&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl" kindref="compound">detail::CubicInterpolationImpl&lt;I1,I2&gt;</ref>(xBegin,<sp/>xEnd,<sp/>yBegin,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>da,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>monotonic,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftCond,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leftConditionValue,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rightCond,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rightConditionValue));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Interpolation_1aef7940748a211476a0ed80e3a6ca9b9b" kindref="member">impl_</ref>-&gt;update();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178" refid="classQuantLib_1_1CubicInterpolation_1a0209cc00b9679077a46ed33936321e56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Real&gt;&amp;<sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a0209cc00b9679077a46ed33936321e56" kindref="member">primitiveConstants</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a2d5d2965d210886929c75c2ab7c3ba1c" kindref="member">coeffs</ref>().<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1aea766d3597798ed87177a110eb6b8f1f" kindref="member">primitiveConst_</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181" refid="classQuantLib_1_1CubicInterpolation_1a41c9316afcef51fcc63843e615eb7c7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Real&gt;&amp;<sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a41c9316afcef51fcc63843e615eb7c7f" kindref="member">aCoefficients</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a2d5d2965d210886929c75c2ab7c3ba1c" kindref="member">coeffs</ref>().<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a8acc4f29e052a398aa1ea72097b65a32" kindref="member">a_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="182" refid="classQuantLib_1_1CubicInterpolation_1afddfdbcabc2778acbb8821eb7bace747" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Real&gt;&amp;<sp/><ref refid="classQuantLib_1_1CubicInterpolation_1afddfdbcabc2778acbb8821eb7bace747" kindref="member">bCoefficients</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a2d5d2965d210886929c75c2ab7c3ba1c" kindref="member">coeffs</ref>().<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1acbf9bee68fb8d13dba9b44d349f75dd8" kindref="member">b_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="183" refid="classQuantLib_1_1CubicInterpolation_1a5b2d7df37cbf802e478903d1fcc824a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Real&gt;&amp;<sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a5b2d7df37cbf802e478903d1fcc824a2" kindref="member">cCoefficients</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a2d5d2965d210886929c75c2ab7c3ba1c" kindref="member">coeffs</ref>().<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a2aedc602998bda34827a09e4a92ab683" kindref="member">c_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="184" refid="classQuantLib_1_1CubicInterpolation_1a99dee302ee3aa7e44a51356cc07e2cef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;bool&gt;&amp;<sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a99dee302ee3aa7e44a51356cc07e2cef" kindref="member">monotonicityAdjustments</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a2d5d2965d210886929c75c2ab7c3ba1c" kindref="member">coeffs</ref>().<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1aced4d46a4d1e45e5e0d7d5c87cd4a899" kindref="member">monotonicityAdjustments_</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="188" refid="classQuantLib_1_1CubicInterpolation_1a2d5d2965d210886929c75c2ab7c3ba1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder" kindref="compound">detail::CoefficientHolder</ref>&amp;<sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a2d5d2965d210886929c75c2ab7c3ba1c" kindref="member">coeffs</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder" kindref="compound">detail::CoefficientHolder</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classQuantLib_1_1Interpolation_1aef7940748a211476a0ed80e3a6ca9b9b" kindref="member">impl_</ref>.get());</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convenience<sp/>classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="classQuantLib_1_1CubicNaturalSpline" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classQuantLib_1_1CubicNaturalSpline" kindref="compound">CubicNaturalSpline</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation" kindref="compound">CubicInterpolation</ref><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I2&gt;</highlight></codeline>
<codeline lineno="200" refid="classQuantLib_1_1CubicNaturalSpline_1aab945b82b6e4fece7ea610e50b3fe164" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicNaturalSpline_1aab945b82b6e4fece7ea610e50b3fe164" kindref="member">CubicNaturalSpline</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xBegin,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xEnd,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I2&amp;<sp/>yBegin)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classQuantLib_1_1CubicInterpolation" kindref="compound">CubicInterpolation</ref>(xBegin,<sp/>xEnd,<sp/>yBegin,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28aaa6b6cbb8010b02172412742c21ce2d7" kindref="member">Spline</ref>,<sp/>false,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">SecondDerivative</ref>,<sp/>0.0,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">SecondDerivative</ref>,<sp/>0.0)<sp/>{}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="classQuantLib_1_1MonotonicCubicNaturalSpline" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classQuantLib_1_1MonotonicCubicNaturalSpline" kindref="compound">MonotonicCubicNaturalSpline</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation" kindref="compound">CubicInterpolation</ref><sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I2&gt;</highlight></codeline>
<codeline lineno="213" refid="classQuantLib_1_1MonotonicCubicNaturalSpline_1a4ab26d9286f691cb0b5857a7c7378465" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1MonotonicCubicNaturalSpline_1a4ab26d9286f691cb0b5857a7c7378465" kindref="member">MonotonicCubicNaturalSpline</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xBegin,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xEnd,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I2&amp;<sp/>yBegin)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classQuantLib_1_1CubicInterpolation" kindref="compound">CubicInterpolation</ref>(xBegin,<sp/>xEnd,<sp/>yBegin,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28aaa6b6cbb8010b02172412742c21ce2d7" kindref="member">Spline</ref>,<sp/>true,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">SecondDerivative</ref>,<sp/>0.0,</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">SecondDerivative</ref>,<sp/>0.0)<sp/>{}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="classQuantLib_1_1CubicSplineOvershootingMinimization1" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classQuantLib_1_1CubicSplineOvershootingMinimization1" kindref="compound">CubicSplineOvershootingMinimization1</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation" kindref="compound">CubicInterpolation</ref><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I2&gt;</highlight></codeline>
<codeline lineno="226" refid="classQuantLib_1_1CubicSplineOvershootingMinimization1_1accaedc21470159cd37eca34ccd2c5441" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicSplineOvershootingMinimization1_1accaedc21470159cd37eca34ccd2c5441" kindref="member">CubicSplineOvershootingMinimization1</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xBegin,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xEnd,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I2&amp;<sp/>yBegin)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classQuantLib_1_1CubicInterpolation" kindref="compound">CubicInterpolation</ref>(xBegin,<sp/>xEnd,<sp/>yBegin,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a2e0b992051247c4b596f0c76bf9b6872" kindref="member">SplineOM1</ref>,<sp/>false,</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">SecondDerivative</ref>,<sp/>0.0,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">SecondDerivative</ref>,<sp/>0.0)<sp/>{}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="classQuantLib_1_1CubicSplineOvershootingMinimization2" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classQuantLib_1_1CubicSplineOvershootingMinimization2" kindref="compound">CubicSplineOvershootingMinimization2</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation" kindref="compound">CubicInterpolation</ref><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I2&gt;</highlight></codeline>
<codeline lineno="239" refid="classQuantLib_1_1CubicSplineOvershootingMinimization2_1a45c8c0d23705785cc0e1146596ed9d91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicSplineOvershootingMinimization2_1a45c8c0d23705785cc0e1146596ed9d91" kindref="member">CubicSplineOvershootingMinimization2</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xBegin,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xEnd,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I2&amp;<sp/>yBegin)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classQuantLib_1_1CubicInterpolation" kindref="compound">CubicInterpolation</ref>(xBegin,<sp/>xEnd,<sp/>yBegin,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a03364cf5474cc64cf64a6ad04a23e925" kindref="member">SplineOM2</ref>,<sp/>false,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">SecondDerivative</ref>,<sp/>0.0,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">SecondDerivative</ref>,<sp/>0.0)<sp/>{}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="classQuantLib_1_1AkimaCubicInterpolation" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classQuantLib_1_1AkimaCubicInterpolation" kindref="compound">AkimaCubicInterpolation</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation" kindref="compound">CubicInterpolation</ref><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I2&gt;</highlight></codeline>
<codeline lineno="252" refid="classQuantLib_1_1AkimaCubicInterpolation_1aa26aeda25ec8ab1be317d39025aa3253" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1AkimaCubicInterpolation_1aa26aeda25ec8ab1be317d39025aa3253" kindref="member">AkimaCubicInterpolation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xBegin,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xEnd,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I2&amp;<sp/>yBegin)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classQuantLib_1_1CubicInterpolation" kindref="compound">CubicInterpolation</ref>(xBegin,<sp/>xEnd,<sp/>yBegin,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a3da52995b65ceaa3b317cd111d4effd6" kindref="member">Akima</ref>,<sp/>false,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">SecondDerivative</ref>,<sp/>0.0,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">SecondDerivative</ref>,<sp/>0.0)<sp/>{}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="classQuantLib_1_1KrugerCubic" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classQuantLib_1_1KrugerCubic" kindref="compound">KrugerCubic</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation" kindref="compound">CubicInterpolation</ref><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I2&gt;</highlight></codeline>
<codeline lineno="265" refid="classQuantLib_1_1KrugerCubic_1af14cd304e92560615d8a9a2d2044be1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1KrugerCubic_1af14cd304e92560615d8a9a2d2044be1b" kindref="member">KrugerCubic</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xBegin,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xEnd,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I2&amp;<sp/>yBegin)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classQuantLib_1_1CubicInterpolation" kindref="compound">CubicInterpolation</ref>(xBegin,<sp/>xEnd,<sp/>yBegin,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a07ea2cd3f162271d5f00b36af15db775" kindref="member">Kruger</ref>,<sp/>false,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">SecondDerivative</ref>,<sp/>0.0,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">SecondDerivative</ref>,<sp/>0.0)<sp/>{}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="classQuantLib_1_1HarmonicCubic" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classQuantLib_1_1HarmonicCubic" kindref="compound">HarmonicCubic</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation" kindref="compound">CubicInterpolation</ref><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I2&gt;</highlight></codeline>
<codeline lineno="278" refid="classQuantLib_1_1HarmonicCubic_1ac97d6289cfbc6a5bfcf5e5fca91fadd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1HarmonicCubic_1ac97d6289cfbc6a5bfcf5e5fca91fadd8" kindref="member">HarmonicCubic</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xBegin,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xEnd,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I2&amp;<sp/>yBegin)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classQuantLib_1_1CubicInterpolation" kindref="compound">CubicInterpolation</ref>(xBegin,<sp/>xEnd,<sp/>yBegin,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28ac68a4d60443425887e8fcc3bf5f5870f" kindref="member">Harmonic</ref>,<sp/>false,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">SecondDerivative</ref>,<sp/>0.0,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">SecondDerivative</ref>,<sp/>0.0)<sp/>{}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="classQuantLib_1_1FritschButlandCubic" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classQuantLib_1_1FritschButlandCubic" kindref="compound">FritschButlandCubic</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation" kindref="compound">CubicInterpolation</ref><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I2&gt;</highlight></codeline>
<codeline lineno="291" refid="classQuantLib_1_1FritschButlandCubic_1aa4b5157433cb3ad88f120e17e4071f89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1FritschButlandCubic_1aa4b5157433cb3ad88f120e17e4071f89" kindref="member">FritschButlandCubic</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xBegin,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xEnd,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I2&amp;<sp/>yBegin)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classQuantLib_1_1CubicInterpolation" kindref="compound">CubicInterpolation</ref>(xBegin,<sp/>xEnd,<sp/>yBegin,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a382235585b6df81d2a2a76ebc67a51f1" kindref="member">FritschButland</ref>,<sp/>true,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">SecondDerivative</ref>,<sp/>0.0,</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">SecondDerivative</ref>,<sp/>0.0)<sp/>{}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="classQuantLib_1_1Parabolic" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classQuantLib_1_1Parabolic" kindref="compound">Parabolic</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation" kindref="compound">CubicInterpolation</ref><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I2&gt;</highlight></codeline>
<codeline lineno="304" refid="classQuantLib_1_1Parabolic_1ab07acfce8ddfb168ce202a45f739f064" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Parabolic_1ab07acfce8ddfb168ce202a45f739f064" kindref="member">Parabolic</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xBegin,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xEnd,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I2&amp;<sp/>yBegin)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classQuantLib_1_1CubicInterpolation" kindref="compound">CubicInterpolation</ref>(xBegin,<sp/>xEnd,<sp/>yBegin,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation" kindref="compound">CubicInterpolation</ref>::<ref refid="classQuantLib_1_1Parabolic" kindref="compound">Parabolic</ref>,<sp/>false,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">SecondDerivative</ref>,<sp/>0.0,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">SecondDerivative</ref>,<sp/>0.0)<sp/>{}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="classQuantLib_1_1MonotonicParabolic" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classQuantLib_1_1MonotonicParabolic" kindref="compound">MonotonicParabolic</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation" kindref="compound">CubicInterpolation</ref><sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I2&gt;</highlight></codeline>
<codeline lineno="317" refid="classQuantLib_1_1MonotonicParabolic_1ac28bf30c4d28b1bc815c829a5b137662" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1MonotonicParabolic_1ac28bf30c4d28b1bc815c829a5b137662" kindref="member">MonotonicParabolic</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xBegin,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xEnd,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I2&amp;<sp/>yBegin)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classQuantLib_1_1CubicInterpolation" kindref="compound">CubicInterpolation</ref>(xBegin,<sp/>xEnd,<sp/>yBegin,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Parabolic" kindref="compound">Parabolic</ref>,<sp/>true,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">SecondDerivative</ref>,<sp/>0.0,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">SecondDerivative</ref>,<sp/>0.0)<sp/>{}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="classQuantLib_1_1Cubic" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classQuantLib_1_1Cubic" kindref="compound">Cubic</ref><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="330" refid="classQuantLib_1_1Cubic_1ab18925a5c90d641965f8e44942a7c7ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Cubic_1ab18925a5c90d641965f8e44942a7c7ac" kindref="member">Cubic</ref>(<ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28" kindref="member">CubicInterpolation::DerivativeApprox</ref><sp/>da</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a07ea2cd3f162271d5f00b36af15db775" kindref="member">CubicInterpolation::Kruger</ref>,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>monotonic<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2" kindref="member">CubicInterpolation::BoundaryCondition</ref><sp/>leftCondition</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">CubicInterpolation::SecondDerivative</ref>,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>leftConditionValue<sp/>=<sp/>0.0,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2" kindref="member">CubicInterpolation::BoundaryCondition</ref><sp/>rightCondition</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">CubicInterpolation::SecondDerivative</ref>,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>rightConditionValue<sp/>=<sp/>0.0)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classQuantLib_1_1Cubic_1ad2779a1cde76639154d2be8e611bc65a" kindref="member">da_</ref>(da),<sp/><ref refid="classQuantLib_1_1Cubic_1a5f88e5088c02f2308869a75c78f9e323" kindref="member">monotonic_</ref>(monotonic),</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Cubic_1ab87cc7d2e6cfc896366b213b10f5b2fc" kindref="member">leftType_</ref>(leftCondition),<sp/><ref refid="classQuantLib_1_1Cubic_1a2506c6df0aa55d9ea9b9f265e6a6113d" kindref="member">rightType_</ref>(rightCondition),</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Cubic_1a2b014e81fc04149651fc8ab186afc1b1" kindref="member">leftValue_</ref>(leftConditionValue),<sp/><ref refid="classQuantLib_1_1Cubic_1ae3d5ea0aa8fd8020f2601bb1f99b02c9" kindref="member">rightValue_</ref>(rightConditionValue)<sp/>{}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I2&gt;</highlight></codeline>
<codeline lineno="343" refid="classQuantLib_1_1Cubic_1ad36386f3f189ecac212de733754c69e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Interpolation" kindref="compound">Interpolation</ref><sp/><ref refid="classQuantLib_1_1Cubic_1ad36386f3f189ecac212de733754c69e0" kindref="member">interpolate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xBegin,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xEnd,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I2&amp;<sp/>yBegin)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation" kindref="compound">CubicInterpolation</ref>(xBegin,<sp/>xEnd,<sp/>yBegin,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Cubic_1ad2779a1cde76639154d2be8e611bc65a" kindref="member">da_</ref>,<sp/><ref refid="classQuantLib_1_1Cubic_1a5f88e5088c02f2308869a75c78f9e323" kindref="member">monotonic_</ref>,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Cubic_1ab87cc7d2e6cfc896366b213b10f5b2fc" kindref="member">leftType_</ref>,<sp/><ref refid="classQuantLib_1_1Cubic_1a2b014e81fc04149651fc8ab186afc1b1" kindref="member">leftValue_</ref>,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Cubic_1a2506c6df0aa55d9ea9b9f265e6a6113d" kindref="member">rightType_</ref>,<sp/><ref refid="classQuantLib_1_1Cubic_1ae3d5ea0aa8fd8020f2601bb1f99b02c9" kindref="member">rightValue_</ref>);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351" refid="classQuantLib_1_1Cubic_1ae8ce0ba6edb8c659fc6a08c38b1f6727" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Cubic_1ae8ce0ba6edb8c659fc6a08c38b1f6727" kindref="member">global</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352" refid="classQuantLib_1_1Cubic_1a80e32efee7047eb9eb42adc3cfa8d3cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1Cubic_1a80e32efee7047eb9eb42adc3cfa8d3cb" kindref="member">requiredPoints</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="354" refid="classQuantLib_1_1Cubic_1ad2779a1cde76639154d2be8e611bc65a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28" kindref="member">CubicInterpolation::DerivativeApprox</ref><sp/><ref refid="classQuantLib_1_1Cubic_1ad2779a1cde76639154d2be8e611bc65a" kindref="member">da_</ref>;</highlight></codeline>
<codeline lineno="355" refid="classQuantLib_1_1Cubic_1a5f88e5088c02f2308869a75c78f9e323" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Cubic_1a5f88e5088c02f2308869a75c78f9e323" kindref="member">monotonic_</ref>;</highlight></codeline>
<codeline lineno="356" refid="classQuantLib_1_1Cubic_1ab87cc7d2e6cfc896366b213b10f5b2fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2" kindref="member">CubicInterpolation::BoundaryCondition</ref><sp/><ref refid="classQuantLib_1_1Cubic_1ab87cc7d2e6cfc896366b213b10f5b2fc" kindref="member">leftType_</ref>,<sp/><ref refid="classQuantLib_1_1Cubic_1a2506c6df0aa55d9ea9b9f265e6a6113d" kindref="member">rightType_</ref>;</highlight></codeline>
<codeline lineno="357" refid="classQuantLib_1_1Cubic_1a2b014e81fc04149651fc8ab186afc1b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1Cubic_1a2b014e81fc04149651fc8ab186afc1b1" kindref="member">leftValue_</ref>,<sp/><ref refid="classQuantLib_1_1Cubic_1ae3d5ea0aa8fd8020f2601bb1f99b02c9" kindref="member">rightValue_</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I2&gt;</highlight></codeline>
<codeline lineno="364" refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl" kindref="compound">CubicInterpolationImpl</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder" kindref="compound">CoefficientHolder</ref>,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Interpolation_1_1templateImpl" kindref="compound">Interpolation::templateImpl</ref>&lt;I1,I2&gt;<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="367" refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ac7e45e65469fa91e9236ef26dbbf774d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ac7e45e65469fa91e9236ef26dbbf774d" kindref="member">CubicInterpolationImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xBegin,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xEnd,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I2&amp;<sp/>yBegin,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28" kindref="member">CubicInterpolation::DerivativeApprox</ref><sp/>da,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>monotonic,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2" kindref="member">CubicInterpolation::BoundaryCondition</ref><sp/>leftCondition,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>leftConditionValue,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2" kindref="member">CubicInterpolation::BoundaryCondition</ref><sp/>rightCondition,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>rightConditionValue)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder" kindref="compound">CoefficientHolder</ref>(xEnd-xBegin),</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Interpolation" kindref="compound">Interpolation</ref>::<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1afd70a6545d200055b1e7fd3ac6cc3f45" kindref="member">templateImpl</ref>&lt;I1,I2&gt;(xBegin,<sp/>xEnd,<sp/>yBegin,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Cubic" kindref="compound">Cubic</ref>::requiredPoints),</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad0ad323c1fa9d456addc5d967fdbe3e3" kindref="member">da_</ref>(da),</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ada9121910cd5151bc5ef9791cb71c495" kindref="member">monotonic_</ref>(monotonic),</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1a21dc391839bf6b27405cf1861d6a0667" kindref="member">leftType_</ref>(leftCondition),<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1a49e8c000bc8367d9ae5d29651238a93a" kindref="member">rightType_</ref>(rightCondition),</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1aa4a26cdfd4ddb1ef3a7a76d70e0a309f" kindref="member">leftValue_</ref>(leftConditionValue),</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1a0a4eaed150f41775877d3f9cab63934a" kindref="member">rightValue_</ref>(rightConditionValue),</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>),<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1),<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1),<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1abb4bc39ae50c79fe630f9016923a5ad6" kindref="member">L_</ref>(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1a21dc391839bf6b27405cf1861d6a0667" kindref="member">leftType_</ref><sp/>==<sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2a4f8cf58b888cceefce621dead46cecfb" kindref="member">CubicInterpolation::Lagrange</ref></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1a49e8c000bc8367d9ae5d29651238a93a" kindref="member">rightType_</ref><sp/>==<sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2a4f8cf58b888cceefce621dead46cecfb" kindref="member">CubicInterpolation::Lagrange</ref>)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>((xEnd-xBegin)<sp/>&gt;=<sp/>4,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Lagrange<sp/>boundary<sp/>condition<sp/>requires<sp/>at<sp/>least<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;4<sp/>points<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(xEnd-xBegin)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>are<sp/>given)&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1a0c26be1beba9c81d75521faf8d0624a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1a0c26be1beba9c81d75521faf8d0624a9" kindref="member">update</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=0;<sp/>i&lt;<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]<sp/>=<sp/>this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>[i+1]<sp/>-<sp/>this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>[i];</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i]<sp/>=<sp/>(this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adef37d429d0186d836878f1cc9ae3c71" kindref="member">yBegin_</ref>[i+1]<sp/>-<sp/>this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adef37d429d0186d836878f1cc9ae3c71" kindref="member">yBegin_</ref>[i])/<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i];</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>derivative<sp/>approximation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad0ad323c1fa9d456addc5d967fdbe3e3" kindref="member">da_</ref>==<ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28aaa6b6cbb8010b02172412742c21ce2d7" kindref="member">CubicInterpolation::Spline</ref>)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=1;<sp/>i&lt;<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1abb4bc39ae50c79fe630f9016923a5ad6" kindref="member">L_</ref>.<ref refid="classQuantLib_1_1TridiagonalOperator_1a7a0d97c397b59de5af5e9ea3d7e99bde" kindref="member">setMidRow</ref>(i,<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i],<sp/>2.0*(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i-1]),<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i-1]);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]<sp/>=<sp/>3.0*(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-1]<sp/>+<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i-1]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i]);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>left<sp/>boundary<sp/>condition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1a21dc391839bf6b27405cf1861d6a0667" kindref="member">leftType_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2aa935d8faa9b58af88d0f2e10b4d8fd79" kindref="member">CubicInterpolation::NotAKnot</ref>:</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignoring<sp/>end<sp/>condition<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1abb4bc39ae50c79fe630f9016923a5ad6" kindref="member">L_</ref>.<ref refid="classQuantLib_1_1TridiagonalOperator_1aaab6f4c805bf1f4091312d76230bc81d" kindref="member">setFirstRow</ref>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[1]*(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[1]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[0]),</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[0]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[1])*(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[0]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[1]));</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[0]<sp/>=<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[0]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[1]*(2.0*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[1]+3.0*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[0])<sp/>+</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[1]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[0]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[0];</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2ad22688f36c922046f6c65b68af4b09ee" kindref="member">CubicInterpolation::FirstDerivative</ref>:</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1abb4bc39ae50c79fe630f9016923a5ad6" kindref="member">L_</ref>.<ref refid="classQuantLib_1_1TridiagonalOperator_1aaab6f4c805bf1f4091312d76230bc81d" kindref="member">setFirstRow</ref>(1.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[0]<sp/>=<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1aa4a26cdfd4ddb1ef3a7a76d70e0a309f" kindref="member">leftValue_</ref>;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">CubicInterpolation::SecondDerivative</ref>:</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1abb4bc39ae50c79fe630f9016923a5ad6" kindref="member">L_</ref>.<ref refid="classQuantLib_1_1TridiagonalOperator_1aaab6f4c805bf1f4091312d76230bc81d" kindref="member">setFirstRow</ref>(2.0,<sp/>1.0);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[0]<sp/>=<sp/>3.0*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[0]<sp/>-<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1aa4a26cdfd4ddb1ef3a7a76d70e0a309f" kindref="member">leftValue_</ref>*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[0]/2.0;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2a6847b34b015cdf8ebe961cf88d821124" kindref="member">CubicInterpolation::Periodic</ref>:</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a8efe9cb3e67c8d0585e57b4d53c5d2fe" kindref="member">QL_FAIL</ref>(</highlight><highlight class="stringliteral">&quot;this<sp/>end<sp/>condition<sp/>is<sp/>not<sp/>implemented<sp/>yet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2a4f8cf58b888cceefce621dead46cecfb" kindref="member">CubicInterpolation::Lagrange</ref>:</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1abb4bc39ae50c79fe630f9016923a5ad6" kindref="member">L_</ref>.<ref refid="classQuantLib_1_1TridiagonalOperator_1aaab6f4c805bf1f4091312d76230bc81d" kindref="member">setFirstRow</ref>(1.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[0]<sp/>=<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1a21859cf48ec01bd5fefa4b4ee832b43d" kindref="member">cubicInterpolatingPolynomialDerivative</ref>(</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>[0],this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>[1],</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>[2],this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>[3],</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adef37d429d0186d836878f1cc9ae3c71" kindref="member">yBegin_</ref>[0],this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adef37d429d0186d836878f1cc9ae3c71" kindref="member">yBegin_</ref>[1],</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adef37d429d0186d836878f1cc9ae3c71" kindref="member">yBegin_</ref>[2],this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adef37d429d0186d836878f1cc9ae3c71" kindref="member">yBegin_</ref>[3],</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>[0]);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a8efe9cb3e67c8d0585e57b4d53c5d2fe" kindref="member">QL_FAIL</ref>(</highlight><highlight class="stringliteral">&quot;unknown<sp/>end<sp/>condition&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>right<sp/>boundary<sp/>condition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1a49e8c000bc8367d9ae5d29651238a93a" kindref="member">rightType_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2aa935d8faa9b58af88d0f2e10b4d8fd79" kindref="member">CubicInterpolation::NotAKnot</ref>:</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignoring<sp/>end<sp/>condition<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1abb4bc39ae50c79fe630f9016923a5ad6" kindref="member">L_</ref>.<ref refid="classQuantLib_1_1TridiagonalOperator_1a6af8d1895ce548343794d9f79976f366" kindref="member">setLastRow</ref>(-(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[n_-2]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3])*(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3]),</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3]*(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]));</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1]<sp/>=<sp/>-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]<sp/>-</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3]*(3.0*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]+2.0*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3]);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2ad22688f36c922046f6c65b68af4b09ee" kindref="member">CubicInterpolation::FirstDerivative</ref>:</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1abb4bc39ae50c79fe630f9016923a5ad6" kindref="member">L_</ref>.<ref refid="classQuantLib_1_1TridiagonalOperator_1a6af8d1895ce548343794d9f79976f366" kindref="member">setLastRow</ref>(0.0,<sp/>1.0);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1]<sp/>=<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1a0a4eaed150f41775877d3f9cab63934a" kindref="member">rightValue_</ref>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">CubicInterpolation::SecondDerivative</ref>:</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1abb4bc39ae50c79fe630f9016923a5ad6" kindref="member">L_</ref>.<ref refid="classQuantLib_1_1TridiagonalOperator_1a6af8d1895ce548343794d9f79976f366" kindref="member">setLastRow</ref>(1.0,<sp/>2.0);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1]<sp/>=<sp/>3.0*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]<sp/>+<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1a0a4eaed150f41775877d3f9cab63934a" kindref="member">rightValue_</ref>*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]/2.0;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2a6847b34b015cdf8ebe961cf88d821124" kindref="member">CubicInterpolation::Periodic</ref>:</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a8efe9cb3e67c8d0585e57b4d53c5d2fe" kindref="member">QL_FAIL</ref>(</highlight><highlight class="stringliteral">&quot;this<sp/>end<sp/>condition<sp/>is<sp/>not<sp/>implemented<sp/>yet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2a4f8cf58b888cceefce621dead46cecfb" kindref="member">CubicInterpolation::Lagrange</ref>:</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1abb4bc39ae50c79fe630f9016923a5ad6" kindref="member">L_</ref>.<ref refid="classQuantLib_1_1TridiagonalOperator_1a6af8d1895ce548343794d9f79976f366" kindref="member">setLastRow</ref>(0.0,1.0);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1]<sp/>=<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1a21859cf48ec01bd5fefa4b4ee832b43d" kindref="member">cubicInterpolatingPolynomialDerivative</ref>(</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>[n_-4],this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>[n_-3],</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>[n_-2],this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>[n_-1],</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adef37d429d0186d836878f1cc9ae3c71" kindref="member">yBegin_</ref>[n_-4],this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adef37d429d0186d836878f1cc9ae3c71" kindref="member">yBegin_</ref>[n_-3],</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adef37d429d0186d836878f1cc9ae3c71" kindref="member">yBegin_</ref>[n_-2],this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adef37d429d0186d836878f1cc9ae3c71" kindref="member">yBegin_</ref>[n_-1],</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>[n_-1]);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a8efe9cb3e67c8d0585e57b4d53c5d2fe" kindref="member">QL_FAIL</ref>(</highlight><highlight class="stringliteral">&quot;unknown<sp/>end<sp/>condition&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>solve<sp/>the<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1abb4bc39ae50c79fe630f9016923a5ad6" kindref="member">L_</ref>.<ref refid="classQuantLib_1_1TridiagonalOperator_1a035a8cd7cee526f2600787f149ddc682" kindref="member">solveFor</ref>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>,<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad0ad323c1fa9d456addc5d967fdbe3e3" kindref="member">da_</ref>==<ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a2e0b992051247c4b596f0c76bf9b6872" kindref="member">CubicInterpolation::SplineOM1</ref>)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>T_(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2,<sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>,<sp/>0.0);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=0;<sp/>i&lt;<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_[i][i]=<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]/6.0;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_[i][i+1]=(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i+1]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i])/3.0;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_[i][i+2]=<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i+1]/6.0;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2,<sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>,<sp/>0.0);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=0;<sp/>i&lt;<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i][i]=1.0/<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i];</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i][i+1]=-(1.0/<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i+1]+1.0/<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i][i+2]=1.0/<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i+1];</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>Up_(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>,<sp/>2,<sp/>0.0);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Up_[0][0]=1;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Up_[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1][1]=1;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>Us_(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>,<sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2,<sp/>0.0);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=0;<sp/>i&lt;<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2;<sp/>++i)</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Us_[i+1][i]=1;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>Z_<sp/>=<sp/>Us_*<ref refid="namespaceQuantLib_1afac69fe09598d10aea08bd744cab2806" kindref="member">inverse</ref>(T_*Us_);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>I_(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>,<sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>,<sp/>0.0);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=0;<sp/>i&lt;<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I_[i][i]=1;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>V_<sp/>=<sp/>(I_-Z_*T_)*Up_;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>W_<sp/>=<sp/>Z_*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>Q_(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>,<sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>,<sp/>0.0);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_[0][0]=1.0/(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1)*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[0]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[0]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[0];</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_[0][1]=7.0/8*1.0/(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1)*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[0]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[0]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[0];</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=1;<sp/>i&lt;<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_[i][i-1]=7.0/8*1.0/(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1)*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i-1]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i-1]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i-1];</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_[i][i]=1.0/(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1)*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]+1.0/(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1)*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i-1]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i-1]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i-1];</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_[i][i+1]=7.0/8*1.0/(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1)*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i];</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1][<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]=7.0/8*1.0/(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1)*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2];</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1][<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1]=1.0/(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1)*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2];</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>J_<sp/>=<sp/>(I_-V_*<ref refid="namespaceQuantLib_1afac69fe09598d10aea08bd744cab2806" kindref="member">inverse</ref>(<ref refid="namespaceQuantLib_1aebac9d15b12ee006122a611d3d603c48" kindref="member">transpose</ref>(V_)*Q_*V_)*<ref refid="namespaceQuantLib_1aebac9d15b12ee006122a611d3d603c48" kindref="member">transpose</ref>(V_)*Q_)*W_;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref><sp/>Y_(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=0;<sp/>i&lt;<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Y_[i]=this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adef37d429d0186d836878f1cc9ae3c71" kindref="member">yBegin_</ref>[i];</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref><sp/>D_<sp/>=<sp/>J_*Y_;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=0;<sp/>i&lt;<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1;<sp/>++i)</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]=(Y_[i+1]-Y_[i])/<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]-(2.0*D_[i]+D_[i+1])*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]/6.0;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1]=<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]+D_[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]+(D_[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1]-D_[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2])*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]/2.0;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad0ad323c1fa9d456addc5d967fdbe3e3" kindref="member">da_</ref>==<ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a03364cf5474cc64cf64a6ad04a23e925" kindref="member">CubicInterpolation::SplineOM2</ref>)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>T_(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2,<sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>,<sp/>0.0);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=0;<sp/>i&lt;<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_[i][i]=<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]/6.0;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_[i][i+1]=(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i+1])/3.0;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_[i][i+2]=<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i+1]/6.0;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2,<sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>,<sp/>0.0);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=0;<sp/>i&lt;<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i][i]=1.0/<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i];</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i][i+1]=-(1.0/<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i+1]+1.0/<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i][i+2]=1.0/<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i+1];</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>Up_(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>,<sp/>2,<sp/>0.0);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Up_[0][0]=1;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Up_[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1][1]=1;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>Us_(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>,<sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2,<sp/>0.0);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=0;<sp/>i&lt;<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2;<sp/>++i)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Us_[i+1][i]=1;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>Z_<sp/>=<sp/>Us_*<ref refid="namespaceQuantLib_1afac69fe09598d10aea08bd744cab2806" kindref="member">inverse</ref>(T_*Us_);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>I_(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>,<sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>,<sp/>0.0);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=0;<sp/>i&lt;<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I_[i][i]=1;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>V_<sp/>=<sp/>(I_-Z_*T_)*Up_;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>W_<sp/>=<sp/>Z_*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>Q_(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>,<sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>,<sp/>0.0);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_[0][0]=1.0/(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1)*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[0];</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_[0][1]=1.0/2*1.0/(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1)*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[0];</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=1;<sp/>i&lt;<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_[i][i-1]=1.0/2*1.0/(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1)*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i-1];</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_[i][i]=1.0/(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1)*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]+1.0/(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1)*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i-1];</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_[i][i+1]=1.0/2*1.0/(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1)*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i];</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1][<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]=1.0/2*1.0/(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1)*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2];</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1][<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1]=1.0/(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1)*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2];</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Matrix" kindref="compound">Matrix</ref><sp/>J_<sp/>=<sp/>(I_-V_*<ref refid="namespaceQuantLib_1afac69fe09598d10aea08bd744cab2806" kindref="member">inverse</ref>(<ref refid="namespaceQuantLib_1aebac9d15b12ee006122a611d3d603c48" kindref="member">transpose</ref>(V_)*Q_*V_)*<ref refid="namespaceQuantLib_1aebac9d15b12ee006122a611d3d603c48" kindref="member">transpose</ref>(V_)*Q_)*W_;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref><sp/>Y_(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=0;<sp/>i&lt;<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Y_[i]=this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adef37d429d0186d836878f1cc9ae3c71" kindref="member">yBegin_</ref>[i];</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref><sp/>D_<sp/>=<sp/>J_*Y_;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=0;<sp/>i&lt;<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1;<sp/>++i)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]=(Y_[i+1]-Y_[i])/<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]-(2.0*D_[i]+D_[i+1])*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]/6.0;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1]=<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]+D_[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]+(D_[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1]-D_[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2])*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]/2.0;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>local<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>==2)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[0]<sp/>=<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[1]<sp/>=<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[0];</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad0ad323c1fa9d456addc5d967fdbe3e3" kindref="member">da_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a8398e52e5ac2d6cb982583eb93121c60" kindref="member">CubicInterpolation::FourthOrder</ref>:</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a8efe9cb3e67c8d0585e57b4d53c5d2fe" kindref="member">QL_FAIL</ref>(</highlight><highlight class="stringliteral">&quot;FourthOrder<sp/>not<sp/>implemented<sp/>yet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a59b262d48fba762c8ddf0f492142d401" kindref="member">CubicInterpolation::Parabolic</ref>:</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>intermediate<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=1;<sp/>i&lt;<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1;<sp/>++i)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]<sp/>=<sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i-1]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-1])/(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i-1]);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[0]<sp/><sp/><sp/><sp/>=<sp/>((2.0*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<sp/><sp/><sp/>0]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<sp/><sp/><sp/>1])*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<sp/><sp/><sp/>0]<sp/>-<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<sp/><sp/><sp/>0]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<sp/><sp/><sp/>1])<sp/>/<sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<sp/><sp/><sp/>0]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<sp/><sp/><sp/>1]);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1]<sp/>=<sp/>((2.0*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3])*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]<sp/>-<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3])<sp/>/<sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3]);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a382235585b6df81d2a2a76ebc67a51f1" kindref="member">CubicInterpolation::FritschButland</ref>:</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>intermediate<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=1;<sp/>i&lt;<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>Smin<sp/>=<sp/>std::min(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-1],<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i]);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>Smax<sp/>=<sp/>std::max(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-1],<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i]);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Smax+2.0*Smin<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Smin*Smax<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]<sp/>=<sp/><ref refid="group__limitMacros_1ga8a6736b7bfef354a1fc507317d49117a" kindref="member">QL_MIN_REAL</ref>;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Smin*Smax<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]<sp/>=<sp/><ref refid="group__limitMacros_1ga31675a375a563ed7a1bba05c664489af" kindref="member">QL_MAX_REAL</ref>;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]<sp/>=<sp/>3.0*Smin*Smax/(Smax+2.0*Smin);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[0]<sp/><sp/><sp/><sp/>=<sp/>((2.0*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<sp/><sp/><sp/>0]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<sp/><sp/><sp/>1])*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<sp/><sp/><sp/>0]<sp/>-<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<sp/><sp/><sp/>0]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<sp/><sp/><sp/>1])<sp/>/<sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<sp/><sp/><sp/>0]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<sp/><sp/><sp/>1]);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1]<sp/>=<sp/>((2.0*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3])*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]<sp/>-<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3])<sp/>/<sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3]);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a3da52995b65ceaa3b317cd111d4effd6" kindref="member">CubicInterpolation::Akima</ref>:</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[0]<sp/>=<sp/>(std::abs(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[1]-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[0])*2*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[0]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[1]+std::abs(2*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[0]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[1]-4*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[0]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[0]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[1])*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[0])/(std::abs(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[1]-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[0])+std::abs(2*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[0]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[1]-4*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[0]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[0]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[1]));</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[1]<sp/>=<sp/>(std::abs(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[2]-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[1])*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[0]+std::abs(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[0]-2*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[0]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[1])*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[1])/(std::abs(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[2]-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[1])+std::abs(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[0]-2*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[0]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[1]));</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=2;<sp/>i&lt;<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-2]==<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-1])<sp/>&amp;&amp;<sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i]!=<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i+1]))</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]<sp/>=<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-1];</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-2]!=<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-1])<sp/>&amp;&amp;<sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i]==<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i+1]))</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]<sp/>=<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i];</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i]==<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-1])</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]<sp/>=<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i];</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-2]==<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-1])<sp/>&amp;&amp;<sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-1]!=<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i])<sp/>&amp;&amp;<sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i]==<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i+1]))</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]<sp/>=<sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-1]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i])/2.0;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]<sp/>=<sp/>(std::abs(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i+1]-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i])*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-1]+std::abs(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-1]-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-2])*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i])/(std::abs(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i+1]-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i])+std::abs(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-1]-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-2]));</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]<sp/>=<sp/>(std::abs(2*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3]-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2])*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3]+std::abs(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3]-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-4])*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2])/(std::abs(2*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3]-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2])+std::abs(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3]-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-4]));</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1]<sp/>=<sp/>(std::abs(4*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3]-2*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3])*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]+std::abs(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3])*2*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3])/(std::abs(4*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3]-2*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3])+std::abs(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3]));</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28a07ea2cd3f162271d5f00b36af15db775" kindref="member">CubicInterpolation::Kruger</ref>:</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>intermediate<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=1;<sp/>i&lt;<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-1]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i]&lt;0.0)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>slope<sp/>changes<sp/>sign<sp/>at<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>slope<sp/>will<sp/>be<sp/>between<sp/>the<sp/>slopes<sp/>of<sp/>the<sp/>adjacent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>straight<sp/>lines<sp/>and<sp/>should<sp/>approach<sp/>zero<sp/>if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>slope<sp/>of<sp/>either<sp/>line<sp/>approaches<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]<sp/>=<sp/>2.0/(1.0/<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-1]+1.0/<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i]);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[0]<sp/>=<sp/>(3.0*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[0]-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[1])/2.0;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1]<sp/>=<sp/>(3.0*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2])/2.0;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28ac68a4d60443425887e8fcc3bf5f5870f" kindref="member">CubicInterpolation::Harmonic</ref>:</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>intermediate<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=1;<sp/>i&lt;<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>w1<sp/>=<sp/>2*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i-1];</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>w2<sp/>=<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]+2*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i-1];</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-1]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i]&lt;=0.0)</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>slope<sp/>changes<sp/>sign<sp/>at<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>weighted<sp/>harmonic<sp/>mean<sp/>of<sp/>S_[i]<sp/>and<sp/>S_[i-1]<sp/>if<sp/>they</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>the<sp/>same<sp/>sign;<sp/>otherwise<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]<sp/>=<sp/>(w1+w2)/(w1/<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-1]+w2/<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i]);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>points<sp/>[0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[0]<sp/>=<sp/>((2<sp/>*<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[0]<sp/>+<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[1])*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[0]<sp/>-<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[0]<sp/>*<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[1])<sp/>/<sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[1]<sp/>+<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[0]);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[0]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[0]&lt;0.0)<sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[0]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[1]&lt;0)<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::fabs(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[0])&gt;std::fabs(3*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[0]))<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[0]<sp/>=<sp/>3*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[0];</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>points<sp/>[n-1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1]<sp/>=<sp/>((2*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3])*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3])/(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]&lt;0.0)<sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-3]&lt;0)<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::fabs(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1])&gt;std::fabs(3*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]))<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1]<sp/>=<sp/>3*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2];</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a8efe9cb3e67c8d0585e57b4d53c5d2fe" kindref="member">QL_FAIL</ref>(</highlight><highlight class="stringliteral">&quot;unknown<sp/>scheme&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::fill(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1aced4d46a4d1e45e5e0d7d5c87cd4a899" kindref="member">monotonicityAdjustments_</ref>.begin(),</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1aced4d46a4d1e45e5e0d7d5c87cd4a899" kindref="member">monotonicityAdjustments_</ref>.end(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hyman<sp/>monotonicity<sp/>constrained<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ada9121910cd5151bc5ef9791cb71c495" kindref="member">monotonic_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>correction;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>pm,<sp/>pu,<sp/>pd,<sp/>M;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=0;<sp/>i&lt;<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i==0)<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[0]&gt;0.0)<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>correction<sp/>=<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]/std::fabs(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i])<sp/>*</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min&lt;Real&gt;(std::fabs(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]),</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::fabs(3.0*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[0]));</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>correction<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(correction!=<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i])<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]<sp/>=<sp/>correction;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1aced4d46a4d1e45e5e0d7d5c87cd4a899" kindref="member">monotonicityAdjustments_</ref>[i]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i==<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1)<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]&gt;0.0)<sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>correction<sp/>=<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]/std::fabs(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i])<sp/>*</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min&lt;Real&gt;(std::fabs(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]),</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::fabs(3.0*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2]));</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>correction<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(correction!=<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i])<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]<sp/>=<sp/>correction;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1aced4d46a4d1e45e5e0d7d5c87cd4a899" kindref="member">monotonicityAdjustments_</ref>[i]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm=(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-1]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i-1])/</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i-1]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M<sp/>=<sp/>3.0<sp/>*<sp/>std::min({</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::fabs(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-1]),</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::fabs(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i]),</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::fabs(pm)</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&gt;1)<sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-1]-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-2])*(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i]-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-1])&gt;0.0)<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pd=(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-1]*(2.0*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i-1]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i-2])</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-2]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i-1])/</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i-2]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i-1]);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pm*pd&gt;0.0<sp/>&amp;&amp;<sp/>pm*(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-1]-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-2])&gt;0.0)<sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M<sp/>=<sp/>std::max&lt;Real&gt;(M,<sp/>1.5*std::min(</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::fabs(pm),std::fabs(pd)));</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&lt;<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-2)<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i]-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-1])*(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i+1]-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i])&gt;0.0)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pu=(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i]*(2.0*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i+1])-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i+1]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i])/</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]+<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i+1]);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pm*pu&gt;0.0<sp/>&amp;&amp;<sp/>-pm*(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i]-<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i-1])&gt;0.0)<sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M<sp/>=<sp/>std::max&lt;Real&gt;(M,<sp/>1.5*std::min(</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::fabs(pm),std::fabs(pu)));</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]*pm&gt;0.0)<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>correction<sp/>=<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]/std::fabs(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i])<sp/>*</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min(std::fabs(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]),<sp/>M);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>correction<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(correction!=<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i])<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]<sp/>=<sp/>correction;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1aced4d46a4d1e45e5e0d7d5c87cd4a899" kindref="member">monotonicityAdjustments_</ref>[i]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cubic<sp/>coefficients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=0;<sp/>i&lt;<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a8acc4f29e052a398aa1ea72097b65a32" kindref="member">a_</ref>[i]<sp/>=<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i];</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1acbf9bee68fb8d13dba9b44d349f75dd8" kindref="member">b_</ref>[i]<sp/>=<sp/>(3.0*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i]<sp/>-<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i+1]<sp/>-<sp/>2.0*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i])/<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i];</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a2aedc602998bda34827a09e4a92ab683" kindref="member">c_</ref>[i]<sp/>=<sp/>(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i+1]<sp/>+<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>[i]<sp/>-<sp/>2.0*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>[i])/(<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i]);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1aea766d3597798ed87177a110eb6b8f1f" kindref="member">primitiveConst_</ref>[0]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i=1;<sp/>i&lt;<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a64c69dd54aa7e76fe36f9847661c724d" kindref="member">n_</ref>-1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1aea766d3597798ed87177a110eb6b8f1f" kindref="member">primitiveConst_</ref>[i]<sp/>=<sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1aea766d3597798ed87177a110eb6b8f1f" kindref="member">primitiveConst_</ref>[i-1]</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i-1]<sp/>*</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adef37d429d0186d836878f1cc9ae3c71" kindref="member">yBegin_</ref>[i-1]<sp/>+<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i-1]<sp/>*</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a8acc4f29e052a398aa1ea72097b65a32" kindref="member">a_</ref>[i-1]/2.0<sp/>+<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i-1]<sp/>*</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1acbf9bee68fb8d13dba9b44d349f75dd8" kindref="member">b_</ref>[i-1]/3.0<sp/>+<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>[i-1]<sp/>*<sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a2aedc602998bda34827a09e4a92ab683" kindref="member">c_</ref>[i-1]/4.0)));</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="761" refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1a68a0ac422ef42a1357df863b7236ea83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1a68a0ac422ef42a1357df863b7236ea83" kindref="member">value</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>x)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>j<sp/>=<sp/>this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a2884268a09723fa87ec7146750d2d46c" kindref="member">locate</ref>(x);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref><sp/>=<sp/>x-this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>[j];</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adef37d429d0186d836878f1cc9ae3c71" kindref="member">yBegin_</ref>[j]<sp/>+<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>*(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a8acc4f29e052a398aa1ea72097b65a32" kindref="member">a_</ref>[j]<sp/>+<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>*(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1acbf9bee68fb8d13dba9b44d349f75dd8" kindref="member">b_</ref>[j]<sp/>+<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>*<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a2aedc602998bda34827a09e4a92ab683" kindref="member">c_</ref>[j]));</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766" refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1aefef8096edd8b09b95a57ac0458e516a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1aefef8096edd8b09b95a57ac0458e516a" kindref="member">primitive</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>x)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>j<sp/>=<sp/>this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a2884268a09723fa87ec7146750d2d46c" kindref="member">locate</ref>(x);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref><sp/>=<sp/>x-this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>[j];</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1aea766d3597798ed87177a110eb6b8f1f" kindref="member">primitiveConst_</ref>[j]</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>*(this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adef37d429d0186d836878f1cc9ae3c71" kindref="member">yBegin_</ref>[j]<sp/>+<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>*(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a8acc4f29e052a398aa1ea72097b65a32" kindref="member">a_</ref>[j]/2.0</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>*(<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1acbf9bee68fb8d13dba9b44d349f75dd8" kindref="member">b_</ref>[j]/3.0<sp/>+<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>*<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a2aedc602998bda34827a09e4a92ab683" kindref="member">c_</ref>[j]/4.0)));</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773" refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1a6c71937772870d6332ced58ab254ce03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1a6c71937772870d6332ced58ab254ce03" kindref="member">derivative</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>x)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>j<sp/>=<sp/>this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a2884268a09723fa87ec7146750d2d46c" kindref="member">locate</ref>(x);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref><sp/>=<sp/>x-this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>[j];</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a8acc4f29e052a398aa1ea72097b65a32" kindref="member">a_</ref>[j]<sp/>+<sp/>(2.0*<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1acbf9bee68fb8d13dba9b44d349f75dd8" kindref="member">b_</ref>[j]<sp/>+<sp/>3.0*<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a2aedc602998bda34827a09e4a92ab683" kindref="member">c_</ref>[j]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>)*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778" refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1a27ac164a9db6ac751f61d548d3fde6a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1a27ac164a9db6ac751f61d548d3fde6a9" kindref="member">secondDerivative</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>x)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>j<sp/>=<sp/>this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a2884268a09723fa87ec7146750d2d46c" kindref="member">locate</ref>(x);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref><sp/>=<sp/>x-this-&gt;<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>[j];</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2.0*<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1acbf9bee68fb8d13dba9b44d349f75dd8" kindref="member">b_</ref>[j]<sp/>+<sp/>6.0*<ref refid="classQuantLib_1_1detail_1_1CoefficientHolder_1a2aedc602998bda34827a09e4a92ab683" kindref="member">c_</ref>[j]*<ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="785" refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad0ad323c1fa9d456addc5d967fdbe3e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1a6897ea07ce6993b4df934091a3723d28" kindref="member">CubicInterpolation::DerivativeApprox</ref><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad0ad323c1fa9d456addc5d967fdbe3e3" kindref="member">da_</ref>;</highlight></codeline>
<codeline lineno="786" refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ada9121910cd5151bc5ef9791cb71c495" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ada9121910cd5151bc5ef9791cb71c495" kindref="member">monotonic_</ref>;</highlight></codeline>
<codeline lineno="787" refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1a21dc391839bf6b27405cf1861d6a0667" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1CubicInterpolation_1ae300e9cdeef2bc60889b474f01eae4c2" kindref="member">CubicInterpolation::BoundaryCondition</ref><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1a21dc391839bf6b27405cf1861d6a0667" kindref="member">leftType_</ref>,<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1a49e8c000bc8367d9ae5d29651238a93a" kindref="member">rightType_</ref>;</highlight></codeline>
<codeline lineno="788" refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1aa4a26cdfd4ddb1ef3a7a76d70e0a309f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1aa4a26cdfd4ddb1ef3a7a76d70e0a309f" kindref="member">leftValue_</ref>,<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1a0a4eaed150f41775877d3f9cab63934a" kindref="member">rightValue_</ref>;</highlight></codeline>
<codeline lineno="789" refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1af514f373f353d0f67cab5db5e171d77f" kindref="member">tmp_</ref>;</highlight></codeline>
<codeline lineno="790" refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>std::vector&lt;Real&gt;<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1adc07d7dfefbd7c3c27a266b5b7bdeada" kindref="member">dx_</ref>,<sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1ad70800a5d355647cbf9c869078127c94" kindref="member">S_</ref>;</highlight></codeline>
<codeline lineno="791" refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1abb4bc39ae50c79fe630f9016923a5ad6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1TridiagonalOperator" kindref="compound">TridiagonalOperator</ref><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1abb4bc39ae50c79fe630f9016923a5ad6" kindref="member">L_</ref>;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793" refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1a21859cf48ec01bd5fefa4b4ee832b43d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl_1a21859cf48ec01bd5fefa4b4ee832b43d" kindref="member">cubicInterpolatingPolynomialDerivative</ref>(</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>a,<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>b,<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>c,<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>d,</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>u,<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>v,<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>w,<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>z,<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>x)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-((((a-c)*(b-c)*(c-x)*z-(a-d)*(b-d)*(d-x)*w)*(a-x+b-x)</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+((a-c)*(b-c)*z-(a-d)*(b-d)*w)*(a-x)*(b-x))*(a-b)+</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((a-c)*(a-d)*v-(b-c)*(b-d)*u)*(c-d)*(c-x)*(d-x)</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+((a-c)*(a-d)*(a-x)*v-(b-c)*(b-d)*(b-x)*u)</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(c-x+d-x)*(c-d)))/</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((a-b)*(a-c)*(a-d)*(b-c)*(b-d)*(c-d));</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal">}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="ql/math/interpolations/cubicinterpolation.hpp"/>
  </compounddef>
</doxygen>
