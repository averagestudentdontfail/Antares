<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classQuantLib_1_1GaussianQuadrature" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::GaussianQuadrature</compoundname>
    <derivedcompoundref refid="classQuantLib_1_1GaussChebyshev2ndIntegration" prot="public" virt="non-virtual">QuantLib::GaussChebyshev2ndIntegration</derivedcompoundref>
    <derivedcompoundref refid="classQuantLib_1_1GaussChebyshevIntegration" prot="public" virt="non-virtual">QuantLib::GaussChebyshevIntegration</derivedcompoundref>
    <derivedcompoundref refid="classQuantLib_1_1GaussGegenbauerIntegration" prot="public" virt="non-virtual">QuantLib::GaussGegenbauerIntegration</derivedcompoundref>
    <derivedcompoundref refid="classQuantLib_1_1GaussHermiteIntegration" prot="public" virt="non-virtual">QuantLib::GaussHermiteIntegration</derivedcompoundref>
    <derivedcompoundref refid="classQuantLib_1_1GaussHyperbolicIntegration" prot="public" virt="non-virtual">QuantLib::GaussHyperbolicIntegration</derivedcompoundref>
    <derivedcompoundref refid="classQuantLib_1_1GaussJacobiIntegration" prot="public" virt="non-virtual">QuantLib::GaussJacobiIntegration</derivedcompoundref>
    <derivedcompoundref refid="classQuantLib_1_1GaussLaguerreIntegration" prot="public" virt="non-virtual">QuantLib::GaussLaguerreIntegration</derivedcompoundref>
    <derivedcompoundref refid="classQuantLib_1_1GaussLegendreIntegration" prot="public" virt="non-virtual">QuantLib::GaussLegendreIntegration</derivedcompoundref>
    <includes refid="gaussianquadratures_8hpp" local="no">gaussianquadratures.hpp</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classQuantLib_1_1GaussianQuadrature_1af3e1ece245b0a7ac19ed50228e4fc23d" prot="protected" static="no" mutable="no">
        <type><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::GaussianQuadrature::x_</definition>
        <argsstring></argsstring>
        <name>x_</name>
        <qualifiedname>QuantLib::GaussianQuadrature::x_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/gaussianquadratures.hpp" line="76" column="15" bodyfile="ql/math/integrals/gaussianquadratures.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1GaussianQuadrature_1ad4114a4dd71f01763ec24d3278f1b7e5" prot="protected" static="no" mutable="no">
        <type><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::GaussianQuadrature::w_</definition>
        <argsstring></argsstring>
        <name>w_</name>
        <qualifiedname>QuantLib::GaussianQuadrature::w_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/gaussianquadratures.hpp" line="76" column="18" bodyfile="ql/math/integrals/gaussianquadratures.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classQuantLib_1_1GaussianQuadrature_1ac7f0a881087bb0965190c2fe437fb012" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::GaussianQuadrature::GaussianQuadrature</definition>
        <argsstring>(Size n, const GaussianOrthogonalPolynomial &amp;p)</argsstring>
        <name>GaussianQuadrature</name>
        <qualifiedname>QuantLib::GaussianQuadrature::GaussianQuadrature</qualifiedname>
        <param>
          <type><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1GaussianOrthogonalPolynomial" kindref="compound">GaussianOrthogonalPolynomial</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/gaussianquadratures.hpp" line="50" column="9" bodyfile="ql/math/integrals/gaussianquadratures.cpp" bodystart="34" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1GaussianQuadrature_1a45646ffb4d6c362fa8ec2c47f314dba9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GaussianQuadrature::operator()</definition>
        <argsstring>(const F &amp;f) const</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::GaussianQuadrature::operator()</qualifiedname>
        <param>
          <type>const F &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/gaussianquadratures.hpp" line="59" column="14" bodyfile="ql/math/integrals/gaussianquadratures.hpp" bodystart="59" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1GaussianQuadrature_1aa9e5b142244bbcfc3d9ff43b43dad1f4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::GaussianQuadrature::order</definition>
        <argsstring>() const</argsstring>
        <name>order</name>
        <qualifiedname>QuantLib::GaussianQuadrature::order</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/gaussianquadratures.hpp" line="71" column="14" bodyfile="ql/math/integrals/gaussianquadratures.hpp" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1GaussianQuadrature_1a33a37156ceaf36316578ec6c6bcad40d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref> &amp;</type>
        <definition>const Array &amp; QuantLib::GaussianQuadrature::weights</definition>
        <argsstring>()</argsstring>
        <name>weights</name>
        <qualifiedname>QuantLib::GaussianQuadrature::weights</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/gaussianquadratures.hpp" line="72" column="21" bodyfile="ql/math/integrals/gaussianquadratures.hpp" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1GaussianQuadrature_1a7b1baf894ae392488221ce03fdffcdd0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref> &amp;</type>
        <definition>const Array &amp; QuantLib::GaussianQuadrature::x</definition>
        <argsstring>()</argsstring>
        <name>x</name>
        <qualifiedname>QuantLib::GaussianQuadrature::x</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/gaussianquadratures.hpp" line="73" column="21" bodyfile="ql/math/integrals/gaussianquadratures.hpp" bodystart="73" bodyend="73"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Integral of a 1-dimensional function using the Gauss quadratures method. </para>
    </briefdescription>
    <detaileddescription>
<para>References: Gauss quadratures and orthogonal polynomials</para>
<para>G.H. Gloub and J.H. Welsch: Calculation of Gauss quadrature rule. Math. Comput. 23 (1986), 221-230</para>
<para>&quot;Numerical Recipes in C&quot;, 2nd edition, Press, Teukolsky, Vetterling, Flannery,</para>
<para><xrefsect id="test_1_test000006"><xreftitle>Test</xreftitle><xrefdescription><para>the correctness of the result is tested by checking it against known good values. </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::GaussChebyshev2ndIntegration</label>
        <link refid="classQuantLib_1_1GaussChebyshev2ndIntegration"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GaussChebyshevIntegration</label>
        <link refid="classQuantLib_1_1GaussChebyshevIntegration"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::GaussGegenbauerIntegration</label>
        <link refid="classQuantLib_1_1GaussGegenbauerIntegration"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::GaussHermiteIntegration</label>
        <link refid="classQuantLib_1_1GaussHermiteIntegration"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::GaussHyperbolicIntegration</label>
        <link refid="classQuantLib_1_1GaussHyperbolicIntegration"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::GaussJacobiIntegration</label>
        <link refid="classQuantLib_1_1GaussJacobiIntegration"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::GaussLaguerreIntegration</label>
        <link refid="classQuantLib_1_1GaussLaguerreIntegration"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::GaussLegendreIntegration</label>
        <link refid="classQuantLib_1_1GaussLegendreIntegration"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::GaussianQuadrature</label>
        <link refid="classQuantLib_1_1GaussianQuadrature"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::Array</label>
        <link refid="classQuantLib_1_1Array"/>
      </node>
      <node id="1">
        <label>QuantLib::GaussianQuadrature</label>
        <link refid="classQuantLib_1_1GaussianQuadrature"/>
        <childnode refid="2" relation="usage">
          <edgelabel>w_</edgelabel>
          <edgelabel>x_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/math/integrals/gaussianquadratures.hpp" line="48" column="5" bodyfile="ql/math/integrals/gaussianquadratures.hpp" bodystart="48" bodyend="77"/>
    <listofallmembers>
      <member refid="classQuantLib_1_1GaussianQuadrature_1ac7f0a881087bb0965190c2fe437fb012" prot="public" virt="non-virtual"><scope>QuantLib::GaussianQuadrature</scope><name>GaussianQuadrature</name></member>
      <member refid="classQuantLib_1_1GaussianQuadrature_1a45646ffb4d6c362fa8ec2c47f314dba9" prot="public" virt="non-virtual"><scope>QuantLib::GaussianQuadrature</scope><name>operator()</name></member>
      <member refid="classQuantLib_1_1GaussianQuadrature_1aa9e5b142244bbcfc3d9ff43b43dad1f4" prot="public" virt="non-virtual"><scope>QuantLib::GaussianQuadrature</scope><name>order</name></member>
      <member refid="classQuantLib_1_1GaussianQuadrature_1ad4114a4dd71f01763ec24d3278f1b7e5" prot="protected" virt="non-virtual"><scope>QuantLib::GaussianQuadrature</scope><name>w_</name></member>
      <member refid="classQuantLib_1_1GaussianQuadrature_1a33a37156ceaf36316578ec6c6bcad40d" prot="public" virt="non-virtual"><scope>QuantLib::GaussianQuadrature</scope><name>weights</name></member>
      <member refid="classQuantLib_1_1GaussianQuadrature_1a7b1baf894ae392488221ce03fdffcdd0" prot="public" virt="non-virtual"><scope>QuantLib::GaussianQuadrature</scope><name>x</name></member>
      <member refid="classQuantLib_1_1GaussianQuadrature_1af3e1ece245b0a7ac19ed50228e4fc23d" prot="protected" virt="non-virtual"><scope>QuantLib::GaussianQuadrature</scope><name>x_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
