<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="interpolation_8hpp" kind="file" language="C++">
    <compoundname>interpolation.hpp</compoundname>
    <includes refid="extrapolation_8hpp" local="no">ql/math/interpolations/extrapolation.hpp</includes>
    <includes refid="comparison_8hpp" local="no">ql/math/comparison.hpp</includes>
    <includes refid="errors_8hpp" local="no">ql/errors.hpp</includes>
    <includes local="no">vector</includes>
    <includes local="no">algorithm</includes>
    <includedby refid="chebyshevinterpolation_8hpp" local="no">ql/math/interpolations/chebyshevinterpolation.hpp</includedby>
    <includedby refid="cubicinterpolation_8hpp" local="no">ql/math/interpolations/cubicinterpolation.hpp</includedby>
    <includedby refid="lagrangeinterpolation_8hpp" local="no">ql/math/interpolations/lagrangeinterpolation.hpp</includedby>
    <includedby refid="linearinterpolation_8hpp" local="no">ql/math/interpolations/linearinterpolation.hpp</includedby>
    <includedby refid="blackvariancecurve_8hpp" local="no">ql/termstructures/volatility/equityfx/blackvariancecurve.hpp</includedby>
    <incdepgraph>
      <node id="6">
        <label>ql/config.ansi.hpp</label>
        <link refid="config_8ansi_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>ql/errors.hpp</label>
        <link refid="errors_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ql/math/comparison.hpp</label>
        <link refid="comparison_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ql/math/interpolation.hpp</label>
        <link refid="interpolation_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ql/math/interpolations/extrapolation.hpp</label>
        <link refid="extrapolation_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ql/mathconstants.hpp</label>
        <link refid="mathconstants_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ql/qldefines.hpp</label>
        <link refid="qldefines_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ql/shared_ptr.hpp</label>
        <link refid="shared__ptr_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ql/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ql/userconfig.hpp</label>
        <link refid="userconfig_8hpp"/>
      </node>
      <node id="25">
        <label>algorithm</label>
      </node>
      <node id="19">
        <label>boost/assert.hpp</label>
      </node>
      <node id="4">
        <label>boost/config.hpp</label>
      </node>
      <node id="20">
        <label>boost/current_function.hpp</label>
      </node>
      <node id="17">
        <label>boost/enable_shared_from_this.hpp</label>
      </node>
      <node id="16">
        <label>boost/make_shared.hpp</label>
      </node>
      <node id="15">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="5">
        <label>boost/version.hpp</label>
      </node>
      <node id="9">
        <label>cmath</label>
      </node>
      <node id="13">
        <label>cstddef</label>
      </node>
      <node id="21">
        <label>exception</label>
      </node>
      <node id="10">
        <label>limits</label>
      </node>
      <node id="22">
        <label>sstream</label>
      </node>
      <node id="23">
        <label>string</label>
      </node>
      <node id="24">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>ql/math/interpolation.hpp</label>
        <link refid="interpolation_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ql/math/interpolations/chebyshevinterpolation.cpp</label>
        <link refid="chebyshevinterpolation_8cpp"/>
      </node>
      <node id="2">
        <label>ql/math/interpolations/chebyshevinterpolation.hpp</label>
        <link refid="chebyshevinterpolation_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>ql/math/interpolations/cubicinterpolation.hpp</label>
        <link refid="cubicinterpolation_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ql/math/interpolations/lagrangeinterpolation.hpp</label>
        <link refid="lagrangeinterpolation_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ql/math/interpolations/linearinterpolation.hpp</label>
        <link refid="linearinterpolation_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ql/methods/finitedifferences/meshers/concentrating1dmesher.cpp</label>
        <link refid="concentrating1dmesher_8cpp"/>
      </node>
      <node id="7">
        <label>ql/methods/finitedifferences/solvers/fdm1dimsolver.cpp</label>
        <link refid="fdm1dimsolver_8cpp"/>
      </node>
      <node id="11">
        <label>ql/methods/finitedifferences/utilities/fdmdividendhandler.cpp</label>
        <link refid="fdmdividendhandler_8cpp"/>
      </node>
      <node id="4">
        <label>ql/pricingengines/vanilla/qdfpamericanengine.cpp</label>
        <link refid="qdfpamericanengine_8cpp"/>
      </node>
      <node id="5">
        <label>ql/pricingengines/vanilla/qdplusamericanengine.cpp</label>
        <link refid="qdplusamericanengine_8cpp"/>
      </node>
      <node id="15">
        <label>ql/processes/blackscholesprocess.cpp</label>
        <link refid="blackscholesprocess_8cpp"/>
      </node>
      <node id="12">
        <label>ql/termstructures/volatility/equityfx/blackvariancecurve.cpp</label>
        <link refid="blackvariancecurve_8cpp"/>
      </node>
      <node id="13">
        <label>ql/termstructures/volatility/equityfx/blackvariancecurve.hpp</label>
        <link refid="blackvariancecurve_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ql/termstructures/volatility/equityfx/localvolcurve.hpp</label>
        <link refid="localvolcurve_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classQuantLib_1_1Interpolation" prot="public">QuantLib::Interpolation</innerclass>
    <innerclass refid="classQuantLib_1_1Interpolation_1_1Impl" prot="protected">QuantLib::Interpolation::Impl</innerclass>
    <innerclass refid="classQuantLib_1_1Interpolation_1_1templateImpl" prot="public">QuantLib::Interpolation::templateImpl</innerclass>
    <innernamespace refid="namespaceQuantLib">QuantLib</innernamespace>
    <briefdescription>
<para>base class for 1-D interpolations </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>c++;<sp/>tab-width:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil;<sp/>c-basic-offset:<sp/>4<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2002,<sp/>2003<sp/>Ferdinando<sp/>Ametrano</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2000,<sp/>2001,<sp/>2002,<sp/>2003<sp/>RiskMap<sp/>srl</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2003,<sp/>2004,<sp/>2005,<sp/>2006<sp/>StatPro<sp/>Italia<sp/>srl</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>QuantLib,<sp/>a<sp/>free-software/open-source<sp/>library</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>for<sp/>financial<sp/>quantitative<sp/>analysts<sp/>and<sp/>developers<sp/>-<sp/>http://quantlib.org/</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>QuantLib<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>QuantLib<sp/>license.<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>copy<sp/>of<sp/>the<sp/>license<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>please<sp/>email</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>&lt;quantlib-dev@lists.sf.net&gt;.<sp/>The<sp/>license<sp/>is<sp/>also<sp/>available<sp/>online<sp/>at</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>&lt;http://quantlib.org/license.shtml&gt;.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>license<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>quantlib_interpolation_hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>quantlib_interpolation_hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="extrapolation_8hpp" kindref="compound">ql/math/interpolations/extrapolation.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="comparison_8hpp" kindref="compound">ql/math/comparison.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="errors_8hpp" kindref="compound">ql/errors.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceQuantLib" kindref="compound">QuantLib</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classQuantLib_1_1Interpolation" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classQuantLib_1_1Interpolation" kindref="compound">Interpolation</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Extrapolator" kindref="compound">Extrapolator</ref><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58" refid="classQuantLib_1_1Interpolation_1_1Impl" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classQuantLib_1_1Interpolation_1_1Impl" kindref="compound">Impl</ref><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="60" refid="classQuantLib_1_1Interpolation_1_1Impl_1aac2065f5fde38ec969bdcb7a99430e92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Interpolation_1_1Impl_1aac2065f5fde38ec969bdcb7a99430e92" kindref="member">~Impl</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61" refid="classQuantLib_1_1Interpolation_1_1Impl_1a709278c2ce75ffc2bea488619d4997e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Interpolation_1_1Impl_1a709278c2ce75ffc2bea488619d4997e6" kindref="member">update</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62" refid="classQuantLib_1_1Interpolation_1_1Impl_1ae37cd2f4a53d875e3bea60d866baaae4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1Interpolation_1_1Impl_1ae37cd2f4a53d875e3bea60d866baaae4" kindref="member">xMin</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="63" refid="classQuantLib_1_1Interpolation_1_1Impl_1a92a99be7541d844650a401c843e122c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1Interpolation_1_1Impl_1a92a99be7541d844650a401c843e122c2" kindref="member">xMax</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="64" refid="classQuantLib_1_1Interpolation_1_1Impl_1a7c1ba222da655c2ec12caa84b0a72f9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;Real&gt;<sp/><ref refid="classQuantLib_1_1Interpolation_1_1Impl_1a7c1ba222da655c2ec12caa84b0a72f9c" kindref="member">xValues</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="65" refid="classQuantLib_1_1Interpolation_1_1Impl_1a766386c355c78d9b2415aab6ae5e071d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::vector&lt;Real&gt;<sp/><ref refid="classQuantLib_1_1Interpolation_1_1Impl_1a766386c355c78d9b2415aab6ae5e071d" kindref="member">yValues</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="66" refid="classQuantLib_1_1Interpolation_1_1Impl_1a618b9f70fa8c139c3bca8fb024be4d6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Interpolation_1_1Impl_1a618b9f70fa8c139c3bca8fb024be4d6d" kindref="member">isInRange</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="67" refid="classQuantLib_1_1Interpolation_1_1Impl_1ad99198f18adb259c124fd2df7f2c4dea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1Interpolation_1_1Impl_1ad99198f18adb259c124fd2df7f2c4dea" kindref="member">value</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="68" refid="classQuantLib_1_1Interpolation_1_1Impl_1ac7ada137d995e5b5afa466e1ea64f3af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1Interpolation_1_1Impl_1ac7ada137d995e5b5afa466e1ea64f3af" kindref="member">primitive</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69" refid="classQuantLib_1_1Interpolation_1_1Impl_1aa3d5009598ca4940c1d1abb87e821c3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1Interpolation_1_1Impl_1aa3d5009598ca4940c1d1abb87e821c3d" kindref="member">derivative</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="70" refid="classQuantLib_1_1Interpolation_1_1Impl_1a6274e96e3ee0da2e2a2d1dfd842932a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1Interpolation_1_1Impl_1a6274e96e3ee0da2e2a2d1dfd842932a7" kindref="member">secondDerivative</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="72" refid="classQuantLib_1_1Interpolation_1aef7940748a211476a0ed80e3a6ca9b9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext::shared_ptr&lt;Impl&gt;<sp/><ref refid="classQuantLib_1_1Interpolation_1aef7940748a211476a0ed80e3a6ca9b9b" kindref="member">impl_</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I2&gt;</highlight></codeline>
<codeline lineno="76" refid="classQuantLib_1_1Interpolation_1_1templateImpl" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classQuantLib_1_1Interpolation_1_1templateImpl" kindref="compound">templateImpl</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Interpolation_1_1Impl" kindref="compound">Impl</ref><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78" refid="classQuantLib_1_1Interpolation_1_1templateImpl_1afd70a6545d200055b1e7fd3ac6cc3f45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1afd70a6545d200055b1e7fd3ac6cc3f45" kindref="member">templateImpl</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xBegin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I1&amp;<sp/>xEnd,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>I2&amp;<sp/>yBegin,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>requiredPoints<sp/>=<sp/>2)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>(xBegin),<sp/><ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1ae31c6c02580a0b25b0e9c64fad90604a" kindref="member">xEnd_</ref>(xEnd),<sp/><ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adef37d429d0186d836878f1cc9ae3c71" kindref="member">yBegin_</ref>(yBegin)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1ae31c6c02580a0b25b0e9c64fad90604a" kindref="member">xEnd_</ref>-<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>)<sp/>&gt;=<sp/>requiredPoints,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;not<sp/>enough<sp/>points<sp/>to<sp/>interpolate:<sp/>at<sp/>least<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requiredPoints<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>required,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1ae31c6c02580a0b25b0e9c64fad90604a" kindref="member">xEnd_</ref>-<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>)&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>provided&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86" refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adfc3310f6f3ea269f80c21cbc9cd2480" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adfc3310f6f3ea269f80c21cbc9cd2480" kindref="member">xMin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="87" refid="classQuantLib_1_1Interpolation_1_1templateImpl_1af2ee8595e097522bbac466d2e036a536" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1af2ee8595e097522bbac466d2e036a536" kindref="member">xMax</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1ae31c6c02580a0b25b0e9c64fad90604a" kindref="member">xEnd_</ref><sp/>-<sp/>1);<sp/>}</highlight></codeline>
<codeline lineno="88" refid="classQuantLib_1_1Interpolation_1_1templateImpl_1ae58e26280490791d1704b518e4461713" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Real&gt;<sp/><ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1ae58e26280490791d1704b518e4461713" kindref="member">xValues</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::vector&lt;Real&gt;(<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>,<sp/><ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1ae31c6c02580a0b25b0e9c64fad90604a" kindref="member">xEnd_</ref>);<sp/>}</highlight></codeline>
<codeline lineno="89" refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a745482b424f51c5726caa0cc6412f1a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Real&gt;<sp/><ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a745482b424f51c5726caa0cc6412f1a0" kindref="member">yValues</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::vector&lt;Real&gt;(<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adef37d429d0186d836878f1cc9ae3c71" kindref="member">yBegin_</ref>,<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adef37d429d0186d836878f1cc9ae3c71" kindref="member">yBegin_</ref>+(<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1ae31c6c02580a0b25b0e9c64fad90604a" kindref="member">xEnd_</ref>-<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92" refid="classQuantLib_1_1Interpolation_1_1templateImpl_1aa1a96576884df7179393ce68928a85c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1aa1a96576884df7179393ce68928a85c2" kindref="member">isInRange</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>x)</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(QL_EXTRA_SAFETY_CHECKS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(I1<sp/>i=<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>,<sp/>j=<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>+1;<sp/>j!=<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1ae31c6c02580a0b25b0e9c64fad90604a" kindref="member">xEnd_</ref>;<sp/>++i,<sp/>++j)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(*j<sp/>&gt;<sp/>*i,<sp/></highlight><highlight class="stringliteral">&quot;unsorted<sp/>x<sp/>values&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>x1<sp/>=<sp/><ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adfc3310f6f3ea269f80c21cbc9cd2480" kindref="member">xMin</ref>(),<sp/>x2<sp/>=<sp/><ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1af2ee8595e097522bbac466d2e036a536" kindref="member">xMax</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x<sp/>&gt;=<sp/>x1<sp/>&amp;&amp;<sp/>x<sp/>&lt;=<sp/>x2)<sp/>||<sp/><ref refid="namespaceQuantLib_1a8c358786ff7da50c785ca5a003b1c9c1" kindref="member">close</ref>(x,x1)<sp/>||<sp/><ref refid="namespaceQuantLib_1a8c358786ff7da50c785ca5a003b1c9c1" kindref="member">close</ref>(x,x2);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="102" refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a2884268a09723fa87ec7146750d2d46c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a2884268a09723fa87ec7146750d2d46c" kindref="member">locate</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>x)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(QL_EXTRA_SAFETY_CHECKS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(I1<sp/>i=<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>,<sp/>j=<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>+1;<sp/>j!=<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1ae31c6c02580a0b25b0e9c64fad90604a" kindref="member">xEnd_</ref>;<sp/>++i,<sp/>++j)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(*j<sp/>&gt;<sp/>*i,<sp/></highlight><highlight class="stringliteral">&quot;unsorted<sp/>x<sp/>values&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>*<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;<sp/>*(<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1ae31c6c02580a0b25b0e9c64fad90604a" kindref="member">xEnd_</ref>-1))</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1ae31c6c02580a0b25b0e9c64fad90604a" kindref="member">xEnd_</ref>-<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>-2;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::upper_bound(<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>,<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1ae31c6c02580a0b25b0e9c64fad90604a" kindref="member">xEnd_</ref>-1,x)-<ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>-1;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114" refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I1<sp/><ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" kindref="member">xBegin_</ref>,<sp/><ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1ae31c6c02580a0b25b0e9c64fad90604a" kindref="member">xEnd_</ref>;</highlight></codeline>
<codeline lineno="115" refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adef37d429d0186d836878f1cc9ae3c71" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I2<sp/><ref refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adef37d429d0186d836878f1cc9ae3c71" kindref="member">yBegin_</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="classQuantLib_1_1Interpolation_1a3357fa39f1e41da02be1792133f6d622" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Interpolation_1a3357fa39f1e41da02be1792133f6d622" kindref="member">Interpolation</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119" refid="classQuantLib_1_1Interpolation_1a2b6d1246d8676354fb8f1efb03c9852f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Interpolation_1a2b6d1246d8676354fb8f1efb03c9852f" kindref="member">~Interpolation</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120" refid="classQuantLib_1_1Interpolation_1aca518c22ea0e7c6a410757877f11756c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Interpolation_1aca518c22ea0e7c6a410757877f11756c" kindref="member">empty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="classQuantLib_1_1Interpolation_1aef7940748a211476a0ed80e3a6ca9b9b" kindref="member">impl_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="121" refid="classQuantLib_1_1Interpolation_1a9e0ba688e60feed84158204bf22b678d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1Interpolation_1a9e0ba688e60feed84158204bf22b678d" kindref="member">operator()</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>x,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allowExtrapolation<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Interpolation_1ab682157f4f0585bc28beefc6c22c8ba8" kindref="member">checkRange</ref>(x,allowExtrapolation);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Interpolation_1aef7940748a211476a0ed80e3a6ca9b9b" kindref="member">impl_</ref>-&gt;value(x);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125" refid="classQuantLib_1_1Interpolation_1a5b8ec18bc4927757f4a04967f13b271c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1Interpolation_1a5b8ec18bc4927757f4a04967f13b271c" kindref="member">primitive</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>x,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allowExtrapolation<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Interpolation_1ab682157f4f0585bc28beefc6c22c8ba8" kindref="member">checkRange</ref>(x,allowExtrapolation);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Interpolation_1aef7940748a211476a0ed80e3a6ca9b9b" kindref="member">impl_</ref>-&gt;primitive(x);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129" refid="classQuantLib_1_1Interpolation_1ab52a971431083a0a474266d6cdc9f936" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1Interpolation_1ab52a971431083a0a474266d6cdc9f936" kindref="member">derivative</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>x,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allowExtrapolation<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Interpolation_1ab682157f4f0585bc28beefc6c22c8ba8" kindref="member">checkRange</ref>(x,allowExtrapolation);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Interpolation_1aef7940748a211476a0ed80e3a6ca9b9b" kindref="member">impl_</ref>-&gt;derivative(x);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133" refid="classQuantLib_1_1Interpolation_1afab97bcd82695d553682b5f6eebb1718" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1Interpolation_1afab97bcd82695d553682b5f6eebb1718" kindref="member">secondDerivative</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>x,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allowExtrapolation<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Interpolation_1ab682157f4f0585bc28beefc6c22c8ba8" kindref="member">checkRange</ref>(x,allowExtrapolation);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Interpolation_1aef7940748a211476a0ed80e3a6ca9b9b" kindref="member">impl_</ref>-&gt;secondDerivative(x);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137" refid="classQuantLib_1_1Interpolation_1afc10233f6b565f10e291389631e5ea1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1Interpolation_1afc10233f6b565f10e291389631e5ea1f" kindref="member">xMin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Interpolation_1aef7940748a211476a0ed80e3a6ca9b9b" kindref="member">impl_</ref>-&gt;xMin();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140" refid="classQuantLib_1_1Interpolation_1a12711f5ec2e165fdb5104f3979855cc4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1Interpolation_1a12711f5ec2e165fdb5104f3979855cc4" kindref="member">xMax</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Interpolation_1aef7940748a211476a0ed80e3a6ca9b9b" kindref="member">impl_</ref>-&gt;xMax();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143" refid="classQuantLib_1_1Interpolation_1af0892ba060b7b7d58943718b074f079a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Interpolation_1af0892ba060b7b7d58943718b074f079a" kindref="member">isInRange</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>x)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Interpolation_1aef7940748a211476a0ed80e3a6ca9b9b" kindref="member">impl_</ref>-&gt;isInRange(x);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146" refid="classQuantLib_1_1Interpolation_1a56cfc87cb5966ee36d72e5ffc7b1ff5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Interpolation_1a56cfc87cb5966ee36d72e5ffc7b1ff5c" kindref="member">update</ref>()<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Interpolation_1aef7940748a211476a0ed80e3a6ca9b9b" kindref="member">impl_</ref>-&gt;update();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="150" refid="classQuantLib_1_1Interpolation_1ab682157f4f0585bc28beefc6c22c8ba8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Interpolation_1ab682157f4f0585bc28beefc6c22c8ba8" kindref="member">checkRange</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>x,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>extrapolate)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(extrapolate<sp/>||<sp/><ref refid="classQuantLib_1_1Extrapolator_1ab3936a9b5b5c163d3e511437c16c1d9e" kindref="member">allowsExtrapolation</ref>()<sp/>||</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1Interpolation_1aef7940748a211476a0ed80e3a6ca9b9b" kindref="member">impl_</ref>-&gt;isInRange(x),</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;interpolation<sp/>range<sp/>is<sp/>[&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="classQuantLib_1_1Interpolation_1aef7940748a211476a0ed80e3a6ca9b9b" kindref="member">impl_</ref>-&gt;xMin()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classQuantLib_1_1Interpolation_1aef7940748a211476a0ed80e3a6ca9b9b" kindref="member">impl_</ref>-&gt;xMax()</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]:<sp/>extrapolation<sp/>at<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>x<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>allowed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="ql/math/interpolation.hpp"/>
  </compounddef>
</doxygen>
