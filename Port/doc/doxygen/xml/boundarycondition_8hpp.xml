<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="boundarycondition_8hpp" kind="file" language="C++">
    <compoundname>boundarycondition.hpp</compoundname>
    <includes refid="null_8hpp" local="no">ql/utilities/null.hpp</includes>
    <includes refid="tridiagonaloperator_8hpp" local="no">ql/methods/finitedifferences/tridiagonaloperator.hpp</includes>
    <includedby refid="boundarycondition_8cpp" local="no">ql/methods/finitedifferences/boundarycondition.cpp</includedby>
    <includedby refid="finitedifferencemodel_8hpp" local="no">ql/methods/finitedifferences/finitedifferencemodel.hpp</includedby>
    <includedby refid="operatortraits_8hpp" local="no">ql/methods/finitedifferences/operatortraits.hpp</includedby>
    <incdepgraph>
      <node id="7">
        <label>ql/config.ansi.hpp</label>
        <link refid="config_8ansi_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ql/errors.hpp</label>
        <link refid="errors_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ql/math/array.hpp</label>
        <link refid="array_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>ql/math/comparison.hpp</label>
        <link refid="comparison_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ql/mathconstants.hpp</label>
        <link refid="mathconstants_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ql/methods/finitedifferences/boundarycondition.hpp</label>
        <link refid="boundarycondition_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ql/methods/finitedifferences/tridiagonaloperator.hpp</label>
        <link refid="tridiagonaloperator_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ql/qldefines.hpp</label>
        <link refid="qldefines_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>ql/shared_ptr.hpp</label>
        <link refid="shared__ptr_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ql/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ql/userconfig.hpp</label>
        <link refid="userconfig_8hpp"/>
      </node>
      <node id="2">
        <label>ql/utilities/null.hpp</label>
        <link refid="null_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>algorithm</label>
      </node>
      <node id="21">
        <label>boost/assert.hpp</label>
      </node>
      <node id="5">
        <label>boost/config.hpp</label>
      </node>
      <node id="22">
        <label>boost/current_function.hpp</label>
      </node>
      <node id="20">
        <label>boost/enable_shared_from_this.hpp</label>
      </node>
      <node id="19">
        <label>boost/make_shared.hpp</label>
      </node>
      <node id="18">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="6">
        <label>boost/version.hpp</label>
      </node>
      <node id="10">
        <label>cmath</label>
      </node>
      <node id="12">
        <label>cstddef</label>
      </node>
      <node id="23">
        <label>exception</label>
      </node>
      <node id="27">
        <label>functional</label>
      </node>
      <node id="31">
        <label>initializer_list</label>
      </node>
      <node id="32">
        <label>iomanip</label>
      </node>
      <node id="26">
        <label>iterator</label>
      </node>
      <node id="11">
        <label>limits</label>
      </node>
      <node id="33">
        <label>memory</label>
      </node>
      <node id="29">
        <label>numeric</label>
      </node>
      <node id="24">
        <label>sstream</label>
      </node>
      <node id="25">
        <label>string</label>
      </node>
      <node id="13">
        <label>type_traits</label>
      </node>
      <node id="30">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="32">
        <label>ql/instruments/vanillaoption.cpp</label>
        <link refid="vanillaoption_8cpp"/>
      </node>
      <node id="2">
        <label>ql/methods/finitedifferences/boundarycondition.cpp</label>
        <link refid="boundarycondition_8cpp"/>
      </node>
      <node id="1">
        <label>ql/methods/finitedifferences/boundarycondition.hpp</label>
        <link refid="boundarycondition_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ql/methods/finitedifferences/finitedifferencemodel.hpp</label>
        <link refid="finitedifferencemodel_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>ql/methods/finitedifferences/operatortraits.hpp</label>
        <link refid="operatortraits_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>ql/methods/finitedifferences/schemes/boundaryconditionschemehelper.hpp</label>
        <link refid="boundaryconditionschemehelper_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ql/methods/finitedifferences/schemes/craigsneydscheme.cpp</label>
        <link refid="craigsneydscheme_8cpp"/>
      </node>
      <node id="7">
        <label>ql/methods/finitedifferences/schemes/craigsneydscheme.hpp</label>
        <link refid="craigsneydscheme_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ql/methods/finitedifferences/schemes/cranknicolsonscheme.cpp</label>
        <link refid="cranknicolsonscheme_8cpp"/>
      </node>
      <node id="17">
        <label>ql/methods/finitedifferences/schemes/cranknicolsonscheme.hpp</label>
        <link refid="cranknicolsonscheme_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ql/methods/finitedifferences/schemes/douglasscheme.cpp</label>
        <link refid="douglasscheme_8cpp"/>
      </node>
      <node id="9">
        <label>ql/methods/finitedifferences/schemes/douglasscheme.hpp</label>
        <link refid="douglasscheme_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>ql/methods/finitedifferences/schemes/expliciteulerscheme.cpp</label>
        <link refid="expliciteulerscheme_8cpp"/>
      </node>
      <node id="11">
        <label>ql/methods/finitedifferences/schemes/expliciteulerscheme.hpp</label>
        <link refid="expliciteulerscheme_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ql/methods/finitedifferences/schemes/hundsdorferscheme.cpp</label>
        <link refid="hundsdorferscheme_8cpp"/>
      </node>
      <node id="14">
        <label>ql/methods/finitedifferences/schemes/hundsdorferscheme.hpp</label>
        <link refid="hundsdorferscheme_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>ql/methods/finitedifferences/schemes/impliciteulerscheme.cpp</label>
        <link refid="impliciteulerscheme_8cpp"/>
      </node>
      <node id="16">
        <label>ql/methods/finitedifferences/schemes/impliciteulerscheme.hpp</label>
        <link refid="impliciteulerscheme_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>ql/methods/finitedifferences/schemes/methodoflinesscheme.cpp</label>
        <link refid="methodoflinesscheme_8cpp"/>
      </node>
      <node id="19">
        <label>ql/methods/finitedifferences/schemes/methodoflinesscheme.hpp</label>
        <link refid="methodoflinesscheme_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>ql/methods/finitedifferences/schemes/modifiedcraigsneydscheme.cpp</label>
        <link refid="modifiedcraigsneydscheme_8cpp"/>
      </node>
      <node id="21">
        <label>ql/methods/finitedifferences/schemes/modifiedcraigsneydscheme.hpp</label>
        <link refid="modifiedcraigsneydscheme_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>ql/methods/finitedifferences/schemes/trbdf2scheme.hpp</label>
        <link refid="trbdf2scheme_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ql/methods/finitedifferences/solvers/fdm1dimsolver.cpp</label>
        <link refid="fdm1dimsolver_8cpp"/>
      </node>
      <node id="27">
        <label>ql/methods/finitedifferences/solvers/fdm1dimsolver.hpp</label>
        <link refid="fdm1dimsolver_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ql/methods/finitedifferences/solvers/fdmbackwardsolver.cpp</label>
        <link refid="fdmbackwardsolver_8cpp"/>
      </node>
      <node id="26">
        <label>ql/methods/finitedifferences/solvers/fdmbackwardsolver.hpp</label>
        <link refid="fdmbackwardsolver_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>ql/methods/finitedifferences/solvers/fdmblackscholessolver.cpp</label>
        <link refid="fdmblackscholessolver_8cpp"/>
      </node>
      <node id="29">
        <label>ql/methods/finitedifferences/solvers/fdmblackscholessolver.hpp</label>
        <link refid="fdmblackscholessolver_8hpp"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>ql/methods/finitedifferences/solvers/fdmsolverdesc.hpp</label>
        <link refid="fdmsolverdesc_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>ql/methods/finitedifferences/utilities/fdmboundaryconditionset.hpp</label>
        <link refid="fdmboundaryconditionset_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>ql/pricingengines/vanilla/fdblackscholesvanillaengine.cpp</label>
        <link refid="fdblackscholesvanillaengine_8cpp"/>
      </node>
      <node id="31">
        <label>ql/pricingengines/vanilla/fdblackscholesvanillaengine.hpp</label>
        <link refid="fdblackscholesvanillaengine_8hpp"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classQuantLib_1_1BoundaryCondition" prot="public">QuantLib::BoundaryCondition</innerclass>
    <innerclass refid="classQuantLib_1_1NeumannBC" prot="public">QuantLib::NeumannBC</innerclass>
    <innerclass refid="classQuantLib_1_1DirichletBC" prot="public">QuantLib::DirichletBC</innerclass>
    <innernamespace refid="namespaceQuantLib">QuantLib</innernamespace>
    <briefdescription>
<para>boundary conditions for differential operators </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>c++;<sp/>tab-width:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil;<sp/>c-basic-offset:<sp/>4<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2000,<sp/>2001,<sp/>2002,<sp/>2003<sp/>RiskMap<sp/>srl</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>QuantLib,<sp/>a<sp/>free-software/open-source<sp/>library</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>for<sp/>financial<sp/>quantitative<sp/>analysts<sp/>and<sp/>developers<sp/>-<sp/>http://quantlib.org/</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>QuantLib<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>QuantLib<sp/>license.<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>copy<sp/>of<sp/>the<sp/>license<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>please<sp/>email</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>&lt;quantlib-dev@lists.sf.net&gt;.<sp/>The<sp/>license<sp/>is<sp/>also<sp/>available<sp/>online<sp/>at</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>&lt;http://quantlib.org/license.shtml&gt;.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>license<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>quantlib_boundary_condition_hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>quantlib_boundary_condition_hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="null_8hpp" kindref="compound">ql/utilities/null.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="tridiagonaloperator_8hpp" kindref="compound">ql/methods/finitedifferences/tridiagonaloperator.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceQuantLib" kindref="compound">QuantLib</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Operator&gt;</highlight></codeline>
<codeline lineno="35" refid="classQuantLib_1_1BoundaryCondition" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classQuantLib_1_1BoundaryCondition" kindref="compound">BoundaryCondition</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>types<sp/>and<sp/>enumerations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classQuantLib_1_1BoundaryCondition_1adcd0cbae913cd891085312f3719efb3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Operator<sp/><ref refid="classQuantLib_1_1BoundaryCondition_1adcd0cbae913cd891085312f3719efb3c" kindref="member">operator_type</ref>;</highlight></codeline>
<codeline lineno="39" refid="classQuantLib_1_1BoundaryCondition_1a61ad23b096be9049f1fe9402c95956da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Operator::array_type<sp/><ref refid="classQuantLib_1_1BoundaryCondition_1a61ad23b096be9049f1fe9402c95956da" kindref="member">array_type</ref>;</highlight></codeline>
<codeline lineno="41" refid="classQuantLib_1_1BoundaryCondition_1ab685ab8e5ea909d20f659fab031a3dcbafddc4f73585f67e4c01a46c1baf4d3e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1BoundaryCondition_1ab685ab8e5ea909d20f659fab031a3dcb" kindref="member">Side</ref><sp/>{<sp/><ref refid="classQuantLib_1_1BoundaryCondition_1ab685ab8e5ea909d20f659fab031a3dcba48c5df323aff7c2236f668e0d163972a" kindref="member">None</ref>,<sp/><ref refid="classQuantLib_1_1BoundaryCondition_1ab685ab8e5ea909d20f659fab031a3dcba3d5d43fcd0df2653be0ec400275f1c44" kindref="member">Upper</ref>,<sp/><ref refid="classQuantLib_1_1BoundaryCondition_1ab685ab8e5ea909d20f659fab031a3dcbafddc4f73585f67e4c01a46c1baf4d3e6" kindref="member">Lower</ref><sp/>};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classQuantLib_1_1BoundaryCondition_1ab0b634722e1c2ffe8e994b443decd603" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1BoundaryCondition_1ab0b634722e1c2ffe8e994b443decd603" kindref="member">~BoundaryCondition</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>interface</highlight></codeline>
<codeline lineno="48" refid="classQuantLib_1_1BoundaryCondition_1a090e687cdd747c7131aa95d564a26cff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1BoundaryCondition_1a090e687cdd747c7131aa95d564a26cff" kindref="member">applyBeforeApplying</ref>(<ref refid="classQuantLib_1_1BoundaryCondition_1adcd0cbae913cd891085312f3719efb3c" kindref="member">operator_type</ref>&amp;)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="51" refid="classQuantLib_1_1BoundaryCondition_1af885136ffc2b670924fd6579b6fb360e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1BoundaryCondition_1af885136ffc2b670924fd6579b6fb360e" kindref="member">applyAfterApplying</ref>(<ref refid="classQuantLib_1_1BoundaryCondition_1a61ad23b096be9049f1fe9402c95956da" kindref="member">array_type</ref>&amp;)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55" refid="classQuantLib_1_1BoundaryCondition_1a1d5d7879dbecac59bef8df64e3b10fa7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1BoundaryCondition_1a1d5d7879dbecac59bef8df64e3b10fa7" kindref="member">applyBeforeSolving</ref>(<ref refid="classQuantLib_1_1BoundaryCondition_1adcd0cbae913cd891085312f3719efb3c" kindref="member">operator_type</ref>&amp;,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1BoundaryCondition_1a61ad23b096be9049f1fe9402c95956da" kindref="member">array_type</ref>&amp;<sp/>rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59" refid="classQuantLib_1_1BoundaryCondition_1ab63c69a9c991dcb908d399c2e6304970" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1BoundaryCondition_1ab63c69a9c991dcb908d399c2e6304970" kindref="member">applyAfterSolving</ref>(<ref refid="classQuantLib_1_1BoundaryCondition_1a61ad23b096be9049f1fe9402c95956da" kindref="member">array_type</ref>&amp;)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62" refid="classQuantLib_1_1BoundaryCondition_1a391ec4058846a3d2f0cd49324c3de790" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1BoundaryCondition_1a391ec4058846a3d2f0cd49324c3de790" kindref="member">setTime</ref>(<ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref><sp/>t)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Time-independent<sp/>boundary<sp/>conditions<sp/>for<sp/>tridiagonal<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classQuantLib_1_1NeumannBC" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classQuantLib_1_1NeumannBC" kindref="compound">NeumannBC</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1BoundaryCondition" kindref="compound">BoundaryCondition</ref>&lt;TridiagonalOperator&gt;<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1NeumannBC" kindref="compound">NeumannBC</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>value,<sp/><ref refid="classQuantLib_1_1BoundaryCondition_1ab685ab8e5ea909d20f659fab031a3dcb" kindref="member">Side</ref><sp/>side);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1NeumannBC_1aee8d2b79d26946bae0fff30bf6c9ae10" kindref="member">applyBeforeApplying</ref>(<ref refid="classQuantLib_1_1TridiagonalOperator" kindref="compound">TridiagonalOperator</ref>&amp;)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1NeumannBC_1a46574aeb587edd7da26c8b8697e7e027" kindref="member">applyAfterApplying</ref>(<ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref>&amp;)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1NeumannBC_1a0b65a0a6818fb1ddcd4cd1dc85751777" kindref="member">applyBeforeSolving</ref>(<ref refid="classQuantLib_1_1TridiagonalOperator" kindref="compound">TridiagonalOperator</ref>&amp;,<sp/><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref>&amp;<sp/>rhs)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1NeumannBC_1a21148dd45b0e910f60319966ef539ccb" kindref="member">applyAfterSolving</ref>(<ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref>&amp;)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84" refid="classQuantLib_1_1NeumannBC_1a959a84d01a7c46ad5ed042278d85f5c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1NeumannBC_1a959a84d01a7c46ad5ed042278d85f5c8" kindref="member">setTime</ref>(<ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref>)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="87" refid="classQuantLib_1_1NeumannBC_1a657915e0c4d2c4b2ea4ce394ac943f50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1NeumannBC_1a657915e0c4d2c4b2ea4ce394ac943f50" kindref="member">value_</ref>;</highlight></codeline>
<codeline lineno="88" refid="classQuantLib_1_1NeumannBC_1a629f725afc891a4d06acbfe9cab1238c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1BoundaryCondition_1ab685ab8e5ea909d20f659fab031a3dcb" kindref="member">Side</ref><sp/><ref refid="classQuantLib_1_1NeumannBC_1a629f725afc891a4d06acbfe9cab1238c" kindref="member">side_</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="classQuantLib_1_1DirichletBC" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classQuantLib_1_1DirichletBC" kindref="compound">DirichletBC</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1BoundaryCondition" kindref="compound">BoundaryCondition</ref>&lt;TridiagonalOperator&gt;<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1DirichletBC" kindref="compound">DirichletBC</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>value,<sp/><ref refid="classQuantLib_1_1BoundaryCondition_1ab685ab8e5ea909d20f659fab031a3dcb" kindref="member">Side</ref><sp/>side);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1DirichletBC_1a3121ac03df8ca5b4c050318ed601226d" kindref="member">applyBeforeApplying</ref>(<ref refid="classQuantLib_1_1TridiagonalOperator" kindref="compound">TridiagonalOperator</ref>&amp;)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1DirichletBC_1a107da3510517ee27cbe5711a01ddc17e" kindref="member">applyAfterApplying</ref>(<ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref>&amp;)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1DirichletBC_1adf82dd5aa567ffd92d677983329e42fd" kindref="member">applyBeforeSolving</ref>(<ref refid="classQuantLib_1_1TridiagonalOperator" kindref="compound">TridiagonalOperator</ref>&amp;,<sp/><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref>&amp;<sp/>rhs)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1DirichletBC_1a4873c11ee8d117df6557c8123fe21b5c" kindref="member">applyAfterSolving</ref>(<ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref>&amp;)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104" refid="classQuantLib_1_1DirichletBC_1ad0e0a84f21eca06bce8d8eff830f9fa2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1DirichletBC_1ad0e0a84f21eca06bce8d8eff830f9fa2" kindref="member">setTime</ref>(<ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref>)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="107" refid="classQuantLib_1_1DirichletBC_1afe2a67feb2c0d93149688dc0fa650909" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1DirichletBC_1afe2a67feb2c0d93149688dc0fa650909" kindref="member">value_</ref>;</highlight></codeline>
<codeline lineno="108" refid="classQuantLib_1_1DirichletBC_1a7ee6daa1c8df2b14034dc1466641a445" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1BoundaryCondition_1ab685ab8e5ea909d20f659fab031a3dcb" kindref="member">Side</ref><sp/><ref refid="classQuantLib_1_1DirichletBC_1a7ee6daa1c8df2b14034dc1466641a445" kindref="member">side_</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="ql/methods/finitedifferences/boundarycondition.hpp"/>
  </compounddef>
</doxygen>
