<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="dataformatters_8hpp" kind="file" language="C++">
    <compoundname>dataformatters.hpp</compoundname>
    <includes refid="null_8hpp" local="no">ql/utilities/null.hpp</includes>
    <includes local="no">ostream</includes>
    <includedby refid="interestrate_8cpp" local="no">ql/interestrate.cpp</includedby>
    <includedby refid="yieldtermstructure_8cpp" local="no">ql/termstructures/yieldtermstructure.cpp</includedby>
    <includedby refid="date_8cpp" local="no">ql/time/date.cpp</includedby>
    <includedby refid="dataformatters_8cpp" local="no">ql/utilities/dataformatters.cpp</includedby>
    <incdepgraph>
      <node id="7">
        <label>ql/config.ansi.hpp</label>
        <link refid="config_8ansi_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ql/mathconstants.hpp</label>
        <link refid="mathconstants_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ql/qldefines.hpp</label>
        <link refid="qldefines_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ql/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ql/userconfig.hpp</label>
        <link refid="userconfig_8hpp"/>
      </node>
      <node id="1">
        <label>ql/utilities/dataformatters.hpp</label>
        <link refid="dataformatters_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ql/utilities/null.hpp</label>
        <link refid="null_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>boost/config.hpp</label>
      </node>
      <node id="6">
        <label>boost/version.hpp</label>
      </node>
      <node id="10">
        <label>cmath</label>
      </node>
      <node id="12">
        <label>cstddef</label>
      </node>
      <node id="11">
        <label>limits</label>
      </node>
      <node id="14">
        <label>ostream</label>
      </node>
      <node id="13">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>ql/interestrate.cpp</label>
        <link refid="interestrate_8cpp"/>
      </node>
      <node id="3">
        <label>ql/termstructures/yieldtermstructure.cpp</label>
        <link refid="yieldtermstructure_8cpp"/>
      </node>
      <node id="4">
        <label>ql/time/date.cpp</label>
        <link refid="date_8cpp"/>
      </node>
      <node id="5">
        <label>ql/utilities/dataformatters.cpp</label>
        <link refid="dataformatters_8cpp"/>
      </node>
      <node id="1">
        <label>ql/utilities/dataformatters.hpp</label>
        <link refid="dataformatters_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structQuantLib_1_1detail_1_1null__checker" prot="public">QuantLib::detail::null_checker</innerclass>
    <innerclass refid="structQuantLib_1_1detail_1_1ordinal__holder" prot="public">QuantLib::detail::ordinal_holder</innerclass>
    <innerclass refid="structQuantLib_1_1detail_1_1power__of__two__holder" prot="public">QuantLib::detail::power_of_two_holder</innerclass>
    <innerclass refid="structQuantLib_1_1detail_1_1percent__holder" prot="public">QuantLib::detail::percent_holder</innerclass>
    <innerclass refid="structQuantLib_1_1detail_1_1sequence__holder" prot="public">QuantLib::detail::sequence_holder</innerclass>
    <innernamespace refid="namespaceQuantLib">QuantLib</innernamespace>
    <innernamespace refid="namespaceQuantLib_1_1detail">QuantLib::detail</innernamespace>
    <innernamespace refid="namespaceQuantLib_1_1io">QuantLib::io</innernamespace>
    <briefdescription>
<para>output manipulators </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>c++;<sp/>tab-width:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil;<sp/>c-basic-offset:<sp/>4<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2005,<sp/>2009<sp/>StatPro<sp/>Italia<sp/>srl</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>QuantLib,<sp/>a<sp/>free-software/open-source<sp/>library</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>for<sp/>financial<sp/>quantitative<sp/>analysts<sp/>and<sp/>developers<sp/>-<sp/>http://quantlib.org/</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>QuantLib<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>QuantLib<sp/>license.<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>copy<sp/>of<sp/>the<sp/>license<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>please<sp/>email</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>&lt;quantlib-dev@lists.sf.net&gt;.<sp/>The<sp/>license<sp/>is<sp/>also<sp/>available<sp/>online<sp/>at</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>&lt;http://quantlib.org/license.shtml&gt;.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>license<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>quantlib_data_formatters_hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>quantlib_data_formatters_hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="null_8hpp" kindref="compound">ql/utilities/null.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceQuantLib" kindref="compound">QuantLib</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="structQuantLib_1_1detail_1_1null__checker" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structQuantLib_1_1detail_1_1null__checker" kindref="compound">null_checker</ref><sp/>{</highlight></codeline>
<codeline lineno="35" refid="structQuantLib_1_1detail_1_1null__checker_1a12998089a083a30bfbebcb631623ff20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structQuantLib_1_1detail_1_1null__checker_1a12998089a083a30bfbebcb631623ff20" kindref="member">null_checker</ref>(T<sp/><ref refid="structQuantLib_1_1detail_1_1null__checker_1a39697e4259e4319b077742e5b5393066" kindref="member">value</ref>)<sp/>:<sp/><ref refid="structQuantLib_1_1detail_1_1null__checker_1a39697e4259e4319b077742e5b5393066" kindref="member">value</ref>(<ref refid="structQuantLib_1_1detail_1_1null__checker_1a39697e4259e4319b077742e5b5393066" kindref="member">value</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="36" refid="structQuantLib_1_1detail_1_1null__checker_1a39697e4259e4319b077742e5b5393066" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><ref refid="structQuantLib_1_1detail_1_1null__checker_1a39697e4259e4319b077742e5b5393066" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream&amp;<sp/><ref refid="namespaceQuantLib_1_1detail_1a081e3d826897f7d0f8851f9c34158a29" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structQuantLib_1_1detail_1_1null__checker" kindref="compound">null_checker&lt;T&gt;</ref>&amp;);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structQuantLib_1_1detail_1_1ordinal__holder" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structQuantLib_1_1detail_1_1ordinal__holder" kindref="compound">ordinal_holder</ref><sp/>{</highlight></codeline>
<codeline lineno="42" refid="structQuantLib_1_1detail_1_1ordinal__holder_1a851bd9e440825e7ff117109ffc0405ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structQuantLib_1_1detail_1_1ordinal__holder_1a851bd9e440825e7ff117109ffc0405ce" kindref="member">ordinal_holder</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="structQuantLib_1_1detail_1_1ordinal__holder_1a9850f1ba4129fa6538046e0f23b29374" kindref="member">n</ref>)<sp/>:<sp/><ref refid="structQuantLib_1_1detail_1_1ordinal__holder_1a9850f1ba4129fa6538046e0f23b29374" kindref="member">n</ref>(<ref refid="structQuantLib_1_1detail_1_1ordinal__holder_1a9850f1ba4129fa6538046e0f23b29374" kindref="member">n</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="43" refid="structQuantLib_1_1detail_1_1ordinal__holder_1a9850f1ba4129fa6538046e0f23b29374" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="structQuantLib_1_1detail_1_1ordinal__holder_1a9850f1ba4129fa6538046e0f23b29374" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream&amp;<sp/><ref refid="namespaceQuantLib_1_1detail_1a081e3d826897f7d0f8851f9c34158a29" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structQuantLib_1_1detail_1_1ordinal__holder" kindref="compound">ordinal_holder</ref>&amp;);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="structQuantLib_1_1detail_1_1power__of__two__holder" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structQuantLib_1_1detail_1_1power__of__two__holder" kindref="compound">power_of_two_holder</ref><sp/>{</highlight></codeline>
<codeline lineno="48" refid="structQuantLib_1_1detail_1_1power__of__two__holder_1a020bda0e8495592ee6b70c75b392b3cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structQuantLib_1_1detail_1_1power__of__two__holder_1a020bda0e8495592ee6b70c75b392b3cd" kindref="member">power_of_two_holder</ref>(T<sp/><ref refid="structQuantLib_1_1detail_1_1power__of__two__holder_1a935e2a9a094b407727afc6f62d0e3856" kindref="member">n</ref>)<sp/>:<sp/><ref refid="structQuantLib_1_1detail_1_1power__of__two__holder_1a935e2a9a094b407727afc6f62d0e3856" kindref="member">n</ref>(<ref refid="structQuantLib_1_1detail_1_1power__of__two__holder_1a935e2a9a094b407727afc6f62d0e3856" kindref="member">n</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="49" refid="structQuantLib_1_1detail_1_1power__of__two__holder_1a935e2a9a094b407727afc6f62d0e3856" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/><ref refid="structQuantLib_1_1detail_1_1power__of__two__holder_1a935e2a9a094b407727afc6f62d0e3856" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream&amp;<sp/><ref refid="namespaceQuantLib_1_1detail_1a081e3d826897f7d0f8851f9c34158a29" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structQuantLib_1_1detail_1_1power__of__two__holder" kindref="compound">power_of_two_holder&lt;T&gt;</ref>&amp;);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="structQuantLib_1_1detail_1_1percent__holder" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structQuantLib_1_1detail_1_1percent__holder" kindref="compound">percent_holder</ref><sp/>{</highlight></codeline>
<codeline lineno="56" refid="structQuantLib_1_1detail_1_1percent__holder_1a3ca8d6780d83bdab7f76e7174b1b4818" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structQuantLib_1_1detail_1_1percent__holder_1a3ca8d6780d83bdab7f76e7174b1b4818" kindref="member">percent_holder</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="structQuantLib_1_1detail_1_1percent__holder_1ac530959c772318b6a65285038849263a" kindref="member">value</ref>)<sp/>:<sp/><ref refid="structQuantLib_1_1detail_1_1percent__holder_1ac530959c772318b6a65285038849263a" kindref="member">value</ref>(<ref refid="structQuantLib_1_1detail_1_1percent__holder_1ac530959c772318b6a65285038849263a" kindref="member">value</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="57" refid="structQuantLib_1_1detail_1_1percent__holder_1ac530959c772318b6a65285038849263a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="structQuantLib_1_1detail_1_1percent__holder_1ac530959c772318b6a65285038849263a" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream&amp;<sp/><ref refid="namespaceQuantLib_1_1detail_1a081e3d826897f7d0f8851f9c34158a29" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structQuantLib_1_1detail_1_1percent__holder" kindref="compound">percent_holder</ref>&amp;);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="structQuantLib_1_1detail_1_1sequence__holder" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InputIterator&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structQuantLib_1_1detail_1_1sequence__holder" kindref="compound">sequence_holder</ref><sp/>{</highlight></codeline>
<codeline lineno="62" refid="structQuantLib_1_1detail_1_1sequence__holder_1a2fab48d23643f13d097ab924b2da3364" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structQuantLib_1_1detail_1_1sequence__holder_1a2fab48d23643f13d097ab924b2da3364" kindref="member">sequence_holder</ref>(InputIterator<sp/><ref refid="structQuantLib_1_1detail_1_1sequence__holder_1aec7d70dfa53217b042d609d868b41cc6" kindref="member">begin</ref>,<sp/>InputIterator<sp/><ref refid="structQuantLib_1_1detail_1_1sequence__holder_1ade4c2a73bac62f184d3133435bf252f4" kindref="member">end</ref>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structQuantLib_1_1detail_1_1sequence__holder_1aec7d70dfa53217b042d609d868b41cc6" kindref="member">begin</ref>(<ref refid="structQuantLib_1_1detail_1_1sequence__holder_1aec7d70dfa53217b042d609d868b41cc6" kindref="member">begin</ref>),<sp/><ref refid="structQuantLib_1_1detail_1_1sequence__holder_1ade4c2a73bac62f184d3133435bf252f4" kindref="member">end</ref>(<ref refid="structQuantLib_1_1detail_1_1sequence__holder_1ade4c2a73bac62f184d3133435bf252f4" kindref="member">end</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="64" refid="structQuantLib_1_1detail_1_1sequence__holder_1aec7d70dfa53217b042d609d868b41cc6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InputIterator<sp/><ref refid="structQuantLib_1_1detail_1_1sequence__holder_1aec7d70dfa53217b042d609d868b41cc6" kindref="member">begin</ref>,<sp/><ref refid="structQuantLib_1_1detail_1_1sequence__holder_1ade4c2a73bac62f184d3133435bf252f4" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream&amp;<sp/><ref refid="namespaceQuantLib_1_1detail_1a081e3d826897f7d0f8851f9c34158a29" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structQuantLib_1_1detail_1_1sequence__holder" kindref="compound">sequence_holder&lt;I&gt;</ref>&amp;);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">io<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structQuantLib_1_1detail_1_1null__checker" kindref="compound">detail::null_checker&lt;T&gt;</ref><sp/><ref refid="group__manips_1ga99123ed23086645a51814084d01650f8" kindref="member">checknull</ref>(T);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structQuantLib_1_1detail_1_1ordinal__holder" kindref="compound">detail::ordinal_holder</ref><sp/><ref refid="group__manips_1ga9645f8136bf2eabd3bca2955ce5be730" kindref="member">ordinal</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structQuantLib_1_1detail_1_1power__of__two__holder" kindref="compound">detail::power_of_two_holder&lt;T&gt;</ref><sp/><ref refid="group__manips_1ga1aec40d03e1902f486894d1f4946f14c" kindref="member">power_of_two</ref>(T);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structQuantLib_1_1detail_1_1percent__holder" kindref="compound">detail::percent_holder</ref><sp/><ref refid="group__manips_1gad6429b50a94e20956091bff348f5fda3" kindref="member">percent</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structQuantLib_1_1detail_1_1percent__holder" kindref="compound">detail::percent_holder</ref><sp/><ref refid="group__manips_1gac9152aad6a69c41f5d30bb1dcb9b2236" kindref="member">rate</ref>(<ref refid="namespaceQuantLib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structQuantLib_1_1detail_1_1percent__holder" kindref="compound">detail::percent_holder</ref><sp/><ref refid="group__manips_1ga9890b88f8d11494a518492be973b9046" kindref="member">volatility</ref>(<ref refid="namespaceQuantLib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Container&gt;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structQuantLib_1_1detail_1_1sequence__holder" kindref="compound">detail::sequence_holder&lt;typename Container::const_iterator&gt;</ref></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__manips_1gadafc7499c9eb17fd7b18d60ca3c797a7" kindref="member">sequence</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Container&amp;<sp/>c);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inline<sp/>definitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="112" refid="group__manips_1ga99123ed23086645a51814084d01650f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structQuantLib_1_1detail_1_1null__checker" kindref="compound">detail::null_checker&lt;T&gt;</ref><sp/><ref refid="group__manips_1ga99123ed23086645a51814084d01650f8" kindref="member">checknull</ref>(T<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structQuantLib_1_1detail_1_1null__checker" kindref="compound">detail::null_checker&lt;T&gt;</ref>(x);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="group__manips_1ga9645f8136bf2eabd3bca2955ce5be730" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structQuantLib_1_1detail_1_1ordinal__holder" kindref="compound">detail::ordinal_holder</ref><sp/><ref refid="group__manips_1ga9645f8136bf2eabd3bca2955ce5be730" kindref="member">ordinal</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structQuantLib_1_1detail_1_1ordinal__holder" kindref="compound">detail::ordinal_holder</ref>(n);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="121" refid="group__manips_1ga1aec40d03e1902f486894d1f4946f14c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structQuantLib_1_1detail_1_1power__of__two__holder" kindref="compound">detail::power_of_two_holder&lt;T&gt;</ref><sp/><ref refid="group__manips_1ga1aec40d03e1902f486894d1f4946f14c" kindref="member">power_of_two</ref>(T<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structQuantLib_1_1detail_1_1power__of__two__holder" kindref="compound">detail::power_of_two_holder&lt;T&gt;</ref>(n);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="group__manips_1gad6429b50a94e20956091bff348f5fda3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structQuantLib_1_1detail_1_1percent__holder" kindref="compound">detail::percent_holder</ref><sp/><ref refid="group__manips_1gad6429b50a94e20956091bff348f5fda3" kindref="member">percent</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structQuantLib_1_1detail_1_1percent__holder" kindref="compound">detail::percent_holder</ref>(x);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="group__manips_1gac9152aad6a69c41f5d30bb1dcb9b2236" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structQuantLib_1_1detail_1_1percent__holder" kindref="compound">detail::percent_holder</ref><sp/><ref refid="group__manips_1gac9152aad6a69c41f5d30bb1dcb9b2236" kindref="member">rate</ref>(<ref refid="namespaceQuantLib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref><sp/>r)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structQuantLib_1_1detail_1_1percent__holder" kindref="compound">detail::percent_holder</ref>(r);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="group__manips_1ga9890b88f8d11494a518492be973b9046" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structQuantLib_1_1detail_1_1percent__holder" kindref="compound">detail::percent_holder</ref><sp/><ref refid="group__manips_1ga9890b88f8d11494a518492be973b9046" kindref="member">volatility</ref>(<ref refid="namespaceQuantLib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref><sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structQuantLib_1_1detail_1_1percent__holder" kindref="compound">detail::percent_holder</ref>(v);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Container&gt;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structQuantLib_1_1detail_1_1sequence__holder" kindref="compound">detail::sequence_holder&lt;typename Container::const_iterator&gt;</ref></highlight></codeline>
<codeline lineno="139" refid="group__manips_1gadafc7499c9eb17fd7b18d60ca3c797a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__manips_1gadafc7499c9eb17fd7b18d60ca3c797a7" kindref="member">sequence</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Container&amp;<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structQuantLib_1_1detail_1_1sequence__holder" kindref="compound">detail::sequence_holder&lt;typename Container::const_iterator&gt;</ref>(</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.begin(),<sp/>c.end());</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="149" refid="namespaceQuantLib_1_1detail_1a096a01f5d5eda5c27f55bdb9cab08c7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespaceQuantLib_1_1detail_1a081e3d826897f7d0f8851f9c34158a29" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structQuantLib_1_1detail_1_1null__checker" kindref="compound">null_checker&lt;T&gt;</ref>&amp;<sp/>checker)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(checker.<ref refid="structQuantLib_1_1detail_1_1null__checker_1a39697e4259e4319b077742e5b5393066" kindref="member">value</ref><sp/>==<sp/><ref refid="classQuantLib_1_1Null" kindref="compound">Null&lt;T&gt;</ref>())</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out<sp/>&lt;&lt;<sp/>checker.<ref refid="structQuantLib_1_1detail_1_1null__checker_1a39697e4259e4319b077742e5b5393066" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="158" refid="namespaceQuantLib_1_1detail_1a3610c09876d0efbe92d54c545a977bde" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespaceQuantLib_1_1detail_1a081e3d826897f7d0f8851f9c34158a29" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structQuantLib_1_1detail_1_1power__of__two__holder" kindref="compound">power_of_two_holder&lt;T&gt;</ref>&amp;<sp/>holder)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(holder.<ref refid="structQuantLib_1_1detail_1_1power__of__two__holder_1a935e2a9a094b407727afc6f62d0e3856" kindref="member">n</ref><sp/>==<sp/><ref refid="classQuantLib_1_1Null" kindref="compound">Null&lt;T&gt;</ref>())</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>n<sp/>=<sp/>holder.<ref refid="structQuantLib_1_1detail_1_1power__of__two__holder_1a935e2a9a094b407727afc6f62d0e3856" kindref="member">n</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref><sp/>power<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!(n<sp/>&amp;<sp/>1UL))<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power++;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out<sp/>&lt;&lt;<sp/>n<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;*2^&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>power;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>I&gt;</highlight></codeline>
<codeline lineno="175" refid="namespaceQuantLib_1_1detail_1a5a45288d328b31dcabf4abdb791c8266" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespaceQuantLib_1_1detail_1a081e3d826897f7d0f8851f9c34158a29" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structQuantLib_1_1detail_1_1sequence__holder" kindref="compound">sequence_holder&lt;I&gt;</ref>&amp;<sp/>holder)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(I<sp/>i<sp/>=<sp/>holder.<ref refid="structQuantLib_1_1detail_1_1sequence__holder_1aec7d70dfa53217b042d609d868b41cc6" kindref="member">begin</ref>;<sp/>i<sp/>!=<sp/>holder.<ref refid="structQuantLib_1_1detail_1_1sequence__holder_1ade4c2a73bac62f184d3133435bf252f4" kindref="member">end</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>*i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="ql/utilities/dataformatters.hpp"/>
  </compounddef>
</doxygen>
