<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classQuantLib_1_1FdmMesherComposite" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::FdmMesherComposite</compoundname>
    <basecompoundref refid="classQuantLib_1_1FdmMesher" prot="public" virt="non-virtual">QuantLib::FdmMesher</basecompoundref>
    <includes refid="fdmmeshercomposite_8hpp" local="no">fdmmeshercomposite.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQuantLib_1_1FdmMesherComposite_1a34e63149686e617dca8d897ed9d6ae2f" prot="private" static="no" mutable="no">
        <type>const std::vector&lt; ext::shared_ptr&lt; <ref refid="classQuantLib_1_1Fdm1dMesher" kindref="compound">Fdm1dMesher</ref> &gt; &gt;</type>
        <definition>const std::vector&lt;ext::shared_ptr&lt;Fdm1dMesher&gt; &gt; QuantLib::FdmMesherComposite::mesher_</definition>
        <argsstring></argsstring>
        <name>mesher_</name>
        <qualifiedname>QuantLib::FdmMesherComposite::mesher_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/meshers/fdmmeshercomposite.hpp" line="66" column="27" bodyfile="ql/methods/finitedifferences/meshers/fdmmeshercomposite.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classQuantLib_1_1FdmMesherComposite_1ad55004663774370c54b8d10d66120912" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FdmMesherComposite::FdmMesherComposite</definition>
        <argsstring>(const ext::shared_ptr&lt; FdmLinearOpLayout &gt; &amp;layout, const std::vector&lt; ext::shared_ptr&lt; Fdm1dMesher &gt; &gt; &amp;mesher)</argsstring>
        <name>FdmMesherComposite</name>
        <qualifiedname>QuantLib::FdmMesherComposite::FdmMesherComposite</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="classQuantLib_1_1FdmLinearOpLayout" kindref="compound">FdmLinearOpLayout</ref> &gt; &amp;</type>
          <declname>layout</declname>
        </param>
        <param>
          <type>const std::vector&lt; ext::shared_ptr&lt; <ref refid="classQuantLib_1_1Fdm1dMesher" kindref="compound">Fdm1dMesher</ref> &gt; &gt; &amp;</type>
          <declname>mesher</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/meshers/fdmmeshercomposite.hpp" line="37" column="9" bodyfile="ql/methods/finitedifferences/meshers/fdmmeshercomposite.cpp" bodystart="76" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1FdmMesherComposite_1a87eda3ba4bb03bf39c619389504919bb" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FdmMesherComposite::FdmMesherComposite</definition>
        <argsstring>(const std::vector&lt; ext::shared_ptr&lt; Fdm1dMesher &gt; &gt; &amp;mesher)</argsstring>
        <name>FdmMesherComposite</name>
        <qualifiedname>QuantLib::FdmMesherComposite::FdmMesherComposite</qualifiedname>
        <param>
          <type>const std::vector&lt; ext::shared_ptr&lt; <ref refid="classQuantLib_1_1Fdm1dMesher" kindref="compound">Fdm1dMesher</ref> &gt; &gt; &amp;</type>
          <declname>mesher</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/meshers/fdmmeshercomposite.hpp" line="42" column="18" bodyfile="ql/methods/finitedifferences/meshers/fdmmeshercomposite.cpp" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1FdmMesherComposite_1aedc46edd6a4f62b3a991ac9f797de845" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FdmMesherComposite::FdmMesherComposite</definition>
        <argsstring>(const ext::shared_ptr&lt; Fdm1dMesher &gt; &amp;mesher)</argsstring>
        <name>FdmMesherComposite</name>
        <qualifiedname>QuantLib::FdmMesherComposite::FdmMesherComposite</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="classQuantLib_1_1Fdm1dMesher" kindref="compound">Fdm1dMesher</ref> &gt; &amp;</type>
          <declname>mesher</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/meshers/fdmmeshercomposite.hpp" line="44" column="18" bodyfile="ql/methods/finitedifferences/meshers/fdmmeshercomposite.cpp" bodystart="40" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1FdmMesherComposite_1afae2c69a76d9343fd0bf178c0ec8f622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FdmMesherComposite::FdmMesherComposite</definition>
        <argsstring>(const ext::shared_ptr&lt; Fdm1dMesher &gt; &amp;m1, const ext::shared_ptr&lt; Fdm1dMesher &gt; &amp;m2)</argsstring>
        <name>FdmMesherComposite</name>
        <qualifiedname>QuantLib::FdmMesherComposite::FdmMesherComposite</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="classQuantLib_1_1Fdm1dMesher" kindref="compound">Fdm1dMesher</ref> &gt; &amp;</type>
          <declname>m1</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="classQuantLib_1_1Fdm1dMesher" kindref="compound">Fdm1dMesher</ref> &gt; &amp;</type>
          <declname>m2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/meshers/fdmmeshercomposite.hpp" line="46" column="9" bodyfile="ql/methods/finitedifferences/meshers/fdmmeshercomposite.cpp" bodystart="47" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1FdmMesherComposite_1af0fa22649e813bf79eb470edc1553d2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FdmMesherComposite::FdmMesherComposite</definition>
        <argsstring>(const ext::shared_ptr&lt; Fdm1dMesher &gt; &amp;m1, const ext::shared_ptr&lt; Fdm1dMesher &gt; &amp;m2, const ext::shared_ptr&lt; Fdm1dMesher &gt; &amp;m3)</argsstring>
        <name>FdmMesherComposite</name>
        <qualifiedname>QuantLib::FdmMesherComposite::FdmMesherComposite</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="classQuantLib_1_1Fdm1dMesher" kindref="compound">Fdm1dMesher</ref> &gt; &amp;</type>
          <declname>m1</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="classQuantLib_1_1Fdm1dMesher" kindref="compound">Fdm1dMesher</ref> &gt; &amp;</type>
          <declname>m2</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="classQuantLib_1_1Fdm1dMesher" kindref="compound">Fdm1dMesher</ref> &gt; &amp;</type>
          <declname>m3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/meshers/fdmmeshercomposite.hpp" line="48" column="9" bodyfile="ql/methods/finitedifferences/meshers/fdmmeshercomposite.cpp" bodystart="54" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1FdmMesherComposite_1a97bc6f280fcef856175aa3565c773719" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FdmMesherComposite::FdmMesherComposite</definition>
        <argsstring>(const ext::shared_ptr&lt; Fdm1dMesher &gt; &amp;m1, const ext::shared_ptr&lt; Fdm1dMesher &gt; &amp;m2, const ext::shared_ptr&lt; Fdm1dMesher &gt; &amp;m3, const ext::shared_ptr&lt; Fdm1dMesher &gt; &amp;m4)</argsstring>
        <name>FdmMesherComposite</name>
        <qualifiedname>QuantLib::FdmMesherComposite::FdmMesherComposite</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="classQuantLib_1_1Fdm1dMesher" kindref="compound">Fdm1dMesher</ref> &gt; &amp;</type>
          <declname>m1</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="classQuantLib_1_1Fdm1dMesher" kindref="compound">Fdm1dMesher</ref> &gt; &amp;</type>
          <declname>m2</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="classQuantLib_1_1Fdm1dMesher" kindref="compound">Fdm1dMesher</ref> &gt; &amp;</type>
          <declname>m3</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="classQuantLib_1_1Fdm1dMesher" kindref="compound">Fdm1dMesher</ref> &gt; &amp;</type>
          <declname>m4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/meshers/fdmmeshercomposite.hpp" line="51" column="9" bodyfile="ql/methods/finitedifferences/meshers/fdmmeshercomposite.cpp" bodystart="62" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1FdmMesherComposite_1a5f577ba6bbf31fcc063d5a76822d92e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FdmMesherComposite::dplus</definition>
        <argsstring>(const FdmLinearOpIterator &amp;iter, Size direction) const override</argsstring>
        <name>dplus</name>
        <qualifiedname>QuantLib::FdmMesherComposite::dplus</qualifiedname>
        <reimplements refid="classQuantLib_1_1FdmMesher_1abbe15f0c491a30520de9eb480aa0f6b3">dplus</reimplements>
        <param>
          <type>const <ref refid="classQuantLib_1_1FdmLinearOpIterator" kindref="compound">FdmLinearOpIterator</ref> &amp;</type>
          <declname>iter</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/meshers/fdmmeshercomposite.hpp" line="57" column="14" bodyfile="ql/methods/finitedifferences/meshers/fdmmeshercomposite.cpp" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1FdmMesherComposite_1a89c74838bfe932ec437df513cbb545a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FdmMesherComposite::dminus</definition>
        <argsstring>(const FdmLinearOpIterator &amp;iter, Size direction) const override</argsstring>
        <name>dminus</name>
        <qualifiedname>QuantLib::FdmMesherComposite::dminus</qualifiedname>
        <reimplements refid="classQuantLib_1_1FdmMesher_1a3ba09eeba0b4df689098a7c393530924">dminus</reimplements>
        <param>
          <type>const <ref refid="classQuantLib_1_1FdmLinearOpIterator" kindref="compound">FdmLinearOpIterator</ref> &amp;</type>
          <declname>iter</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/meshers/fdmmeshercomposite.hpp" line="58" column="14" bodyfile="ql/methods/finitedifferences/meshers/fdmmeshercomposite.cpp" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1FdmMesherComposite_1aeeb1a14f803d20296ab46a3106f82fd3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FdmMesherComposite::location</definition>
        <argsstring>(const FdmLinearOpIterator &amp;iter, Size direction) const override</argsstring>
        <name>location</name>
        <qualifiedname>QuantLib::FdmMesherComposite::location</qualifiedname>
        <reimplements refid="classQuantLib_1_1FdmMesher_1a205d871f28e13de692c8f0eff9b2ac34">location</reimplements>
        <param>
          <type>const <ref refid="classQuantLib_1_1FdmLinearOpIterator" kindref="compound">FdmLinearOpIterator</ref> &amp;</type>
          <declname>iter</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/meshers/fdmmeshercomposite.hpp" line="59" column="14" bodyfile="ql/methods/finitedifferences/meshers/fdmmeshercomposite.cpp" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1FdmMesherComposite_1a08be2983eaee4e5c734d9f462e78ef9b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQuantLib_1_1Array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmMesherComposite::locations</definition>
        <argsstring>(Size direction) const override</argsstring>
        <name>locations</name>
        <qualifiedname>QuantLib::FdmMesherComposite::locations</qualifiedname>
        <reimplements refid="classQuantLib_1_1FdmMesher_1a1a10cb45aab3b7078b83e6568f545775">locations</reimplements>
        <param>
          <type><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/meshers/fdmmeshercomposite.hpp" line="60" column="15" bodyfile="ql/methods/finitedifferences/meshers/fdmmeshercomposite.cpp" bodystart="101" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1FdmMesherComposite_1add2eb15f112226f7fd38cd72f1b1d0f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; ext::shared_ptr&lt; <ref refid="classQuantLib_1_1Fdm1dMesher" kindref="compound">Fdm1dMesher</ref> &gt; &gt; &amp;</type>
        <definition>const std::vector&lt; ext::shared_ptr&lt; Fdm1dMesher &gt; &gt; &amp; QuantLib::FdmMesherComposite::getFdm1dMeshers</definition>
        <argsstring>() const</argsstring>
        <name>getFdm1dMeshers</name>
        <qualifiedname>QuantLib::FdmMesherComposite::getFdm1dMeshers</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/meshers/fdmmeshercomposite.hpp" line="63" column="13" bodyfile="ql/methods/finitedifferences/meshers/fdmmeshercomposite.cpp" bodystart="113" bodyend="115"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::FdmMesher</label>
        <link refid="classQuantLib_1_1FdmMesher"/>
      </node>
      <node id="1">
        <label>QuantLib::FdmMesherComposite</label>
        <link refid="classQuantLib_1_1FdmMesherComposite"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::FdmMesher</label>
        <link refid="classQuantLib_1_1FdmMesher"/>
      </node>
      <node id="1">
        <label>QuantLib::FdmMesherComposite</label>
        <link refid="classQuantLib_1_1FdmMesherComposite"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/methods/finitedifferences/meshers/fdmmeshercomposite.hpp" line="35" column="5" bodyfile="ql/methods/finitedifferences/meshers/fdmmeshercomposite.hpp" bodystart="35" bodyend="67"/>
    <listofallmembers>
      <member refid="classQuantLib_1_1FdmMesherComposite_1a89c74838bfe932ec437df513cbb545a5" prot="public" virt="virtual"><scope>QuantLib::FdmMesherComposite</scope><name>dminus</name></member>
      <member refid="classQuantLib_1_1FdmMesherComposite_1a5f577ba6bbf31fcc063d5a76822d92e4" prot="public" virt="virtual"><scope>QuantLib::FdmMesherComposite</scope><name>dplus</name></member>
      <member refid="classQuantLib_1_1FdmMesher_1a7abb544e86efae914d75a4a543885138" prot="public" virt="non-virtual"><scope>QuantLib::FdmMesherComposite</scope><name>FdmMesher</name></member>
      <member refid="classQuantLib_1_1FdmMesherComposite_1ad55004663774370c54b8d10d66120912" prot="public" virt="non-virtual"><scope>QuantLib::FdmMesherComposite</scope><name>FdmMesherComposite</name></member>
      <member refid="classQuantLib_1_1FdmMesherComposite_1a87eda3ba4bb03bf39c619389504919bb" prot="public" virt="non-virtual"><scope>QuantLib::FdmMesherComposite</scope><name>FdmMesherComposite</name></member>
      <member refid="classQuantLib_1_1FdmMesherComposite_1aedc46edd6a4f62b3a991ac9f797de845" prot="public" virt="non-virtual"><scope>QuantLib::FdmMesherComposite</scope><name>FdmMesherComposite</name></member>
      <member refid="classQuantLib_1_1FdmMesherComposite_1afae2c69a76d9343fd0bf178c0ec8f622" prot="public" virt="non-virtual"><scope>QuantLib::FdmMesherComposite</scope><name>FdmMesherComposite</name></member>
      <member refid="classQuantLib_1_1FdmMesherComposite_1af0fa22649e813bf79eb470edc1553d2e" prot="public" virt="non-virtual"><scope>QuantLib::FdmMesherComposite</scope><name>FdmMesherComposite</name></member>
      <member refid="classQuantLib_1_1FdmMesherComposite_1a97bc6f280fcef856175aa3565c773719" prot="public" virt="non-virtual"><scope>QuantLib::FdmMesherComposite</scope><name>FdmMesherComposite</name></member>
      <member refid="classQuantLib_1_1FdmMesherComposite_1add2eb15f112226f7fd38cd72f1b1d0f7" prot="public" virt="non-virtual"><scope>QuantLib::FdmMesherComposite</scope><name>getFdm1dMeshers</name></member>
      <member refid="classQuantLib_1_1FdmMesher_1a7c07721ba054e2a0e502b6d09efa85d7" prot="public" virt="non-virtual"><scope>QuantLib::FdmMesherComposite</scope><name>layout</name></member>
      <member refid="classQuantLib_1_1FdmMesher_1a20075162770284b8a2b0c3bc227be686" prot="protected" virt="non-virtual"><scope>QuantLib::FdmMesherComposite</scope><name>layout_</name></member>
      <member refid="classQuantLib_1_1FdmMesherComposite_1aeeb1a14f803d20296ab46a3106f82fd3" prot="public" virt="virtual"><scope>QuantLib::FdmMesherComposite</scope><name>location</name></member>
      <member refid="classQuantLib_1_1FdmMesherComposite_1a08be2983eaee4e5c734d9f462e78ef9b" prot="public" virt="virtual"><scope>QuantLib::FdmMesherComposite</scope><name>locations</name></member>
      <member refid="classQuantLib_1_1FdmMesherComposite_1a34e63149686e617dca8d897ed9d6ae2f" prot="private" virt="non-virtual"><scope>QuantLib::FdmMesherComposite</scope><name>mesher_</name></member>
      <member refid="classQuantLib_1_1FdmMesher_1a277836c0aae5b79e13fb54f29be10186" prot="public" virt="virtual"><scope>QuantLib::FdmMesherComposite</scope><name>~FdmMesher</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
