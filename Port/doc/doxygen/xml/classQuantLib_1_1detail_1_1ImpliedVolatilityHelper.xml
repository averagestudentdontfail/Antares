<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classQuantLib_1_1detail_1_1ImpliedVolatilityHelper" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::detail::ImpliedVolatilityHelper</compoundname>
    <includes refid="impliedvolatility_8hpp" local="no">impliedvolatility.hpp</includes>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQuantLib_1_1detail_1_1ImpliedVolatilityHelper_1a2aa818e310c5b8f72585861b3192a8fc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceQuantLib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>Volatility QuantLib::detail::ImpliedVolatilityHelper::calculate</definition>
        <argsstring>(const Instrument &amp;instrument, const PricingEngine &amp;engine, SimpleQuote &amp;volQuote, Real targetValue, Real accuracy, Natural maxEvaluations, Volatility minVol, Volatility maxVol)</argsstring>
        <name>calculate</name>
        <qualifiedname>QuantLib::detail::ImpliedVolatilityHelper::calculate</qualifiedname>
        <param>
          <type>const <ref refid="classQuantLib_1_1Instrument" kindref="compound">Instrument</ref> &amp;</type>
          <declname>instrument</declname>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1PricingEngine" kindref="compound">PricingEngine</ref> &amp;</type>
          <declname>engine</declname>
        </param>
        <param>
          <type><ref refid="classQuantLib_1_1SimpleQuote" kindref="compound">SimpleQuote</ref> &amp;</type>
          <declname>volQuote</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>targetValue</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>accuracy</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>maxEvaluations</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
          <declname>minVol</declname>
        </param>
        <param>
          <type><ref refid="namespaceQuantLib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
          <declname>maxVol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/impliedvolatility.hpp" line="43" column="31" bodyfile="ql/instruments/impliedvolatility.cpp" bodystart="61" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1detail_1_1ImpliedVolatilityHelper_1ab84299a0aff4c45a09270c0ca95054ec" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="classQuantLib_1_1GeneralizedBlackScholesProcess" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; GeneralizedBlackScholesProcess &gt; QuantLib::detail::ImpliedVolatilityHelper::clone</definition>
        <argsstring>(const ext::shared_ptr&lt; GeneralizedBlackScholesProcess &gt; &amp;, const ext::shared_ptr&lt; SimpleQuote &gt; &amp;)</argsstring>
        <name>clone</name>
        <qualifiedname>QuantLib::detail::ImpliedVolatilityHelper::clone</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="classQuantLib_1_1GeneralizedBlackScholesProcess" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt; &amp;</type>
          <defname>process</defname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="classQuantLib_1_1SimpleQuote" kindref="compound">SimpleQuote</ref> &gt; &amp;</type>
          <defname>volQuote</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The returned process is equal to the passed one, except for the volatility which is flat and whose value is driven by the passed quote. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/impliedvolatility.hpp" line="57" column="36" bodyfile="ql/instruments/impliedvolatility.cpp" bodystart="84" bodyend="103"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>helper class for one-asset implied-volatility calculation </para>
    </briefdescription>
    <detaileddescription>
<para>The passed engine must be linked to the passed quote (see, e.g., <ref refid="classQuantLib_1_1VanillaOption" kindref="compound">VanillaOption</ref> to see how this can be achieved.)</para>
<para><simplesect kind="note"><para>this function is meant for developers of option classes so that they can implement an impliedVolatility() method. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="ql/instruments/impliedvolatility.hpp" line="41" column="9" bodyfile="ql/instruments/impliedvolatility.hpp" bodystart="41" bodyend="60"/>
    <listofallmembers>
      <member refid="classQuantLib_1_1detail_1_1ImpliedVolatilityHelper_1a2aa818e310c5b8f72585861b3192a8fc" prot="public" virt="non-virtual"><scope>QuantLib::detail::ImpliedVolatilityHelper</scope><name>calculate</name></member>
      <member refid="classQuantLib_1_1detail_1_1ImpliedVolatilityHelper_1ab84299a0aff4c45a09270c0ca95054ec" prot="public" virt="non-virtual"><scope>QuantLib::detail::ImpliedVolatilityHelper</scope><name>clone</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
