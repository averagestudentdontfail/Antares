<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classQuantLib_1_1LazyObject_1_1Defaults" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::LazyObject::Defaults</compoundname>
    <basecompoundref refid="classQuantLib_1_1Singleton" prot="public" virt="non-virtual">QuantLib::Singleton&lt; LazyObject::Defaults &gt;</basecompoundref>
    <includes refid="lazyobject_8hpp" local="no">lazyobject.hpp</includes>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="classQuantLib_1_1LazyObject_1_1Defaults_1aa1345fc01ad94b3dc7289acdc403c9ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Singleton&lt; LazyObject::Defaults &gt;</definition>
        <argsstring></argsstring>
        <name>Singleton&lt; LazyObject::Defaults &gt;</name>
        <qualifiedname>QuantLib::LazyObject::Defaults::Singleton&lt; LazyObject::Defaults &gt;</qualifiedname>
        <param>
          <type><ref refid="classQuantLib_1_1Singleton" kindref="compound">Singleton</ref>&lt; <ref refid="classQuantLib_1_1LazyObject_1_1Defaults" kindref="compound">LazyObject::Defaults</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/patterns/lazyobject.hpp" line="138" column="13" bodyfile="ql/patterns/lazyobject.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classQuantLib_1_1LazyObject_1_1Defaults_1acaf0e4ebb4a0861ff1a7b840c6a0d0d0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::LazyObject::Defaults::forwardsAllNotifications_</definition>
        <argsstring></argsstring>
        <name>forwardsAllNotifications_</name>
        <qualifiedname>QuantLib::LazyObject::Defaults::forwardsAllNotifications_</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/patterns/lazyobject.hpp" line="179" column="14" bodyfile="ql/patterns/lazyobject.hpp" bodystart="179" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classQuantLib_1_1LazyObject_1_1Defaults_1a5b1867d4aec2bd8e2120f59d82327bb7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::LazyObject::Defaults::Defaults</definition>
        <argsstring>()=default</argsstring>
        <name>Defaults</name>
        <qualifiedname>QuantLib::LazyObject::Defaults::Defaults</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/patterns/lazyobject.hpp" line="150" column="9"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classQuantLib_1_1LazyObject_1_1Defaults_1abd5daf52a0484b279f72aeb846017941" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::LazyObject::Defaults::forwardFirstNotificationOnly</definition>
        <argsstring>()</argsstring>
        <name>forwardFirstNotificationOnly</name>
        <qualifiedname>QuantLib::LazyObject::Defaults::forwardFirstNotificationOnly</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>by default, lazy objects created after calling this method will only forward the first notification after successful recalculation; see <ref refid="classQuantLib_1_1LazyObject_1afac6ee19c3107c453e1347dd8000e023" kindref="member">LazyObject::forwardFirstNotificationOnly</ref> for details. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/patterns/lazyobject.hpp" line="158" column="14" bodyfile="ql/patterns/lazyobject.hpp" bodystart="158" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1LazyObject_1_1Defaults_1aad220c732eec6e1dde108ebbee58b27e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::LazyObject::Defaults::alwaysForwardNotifications</definition>
        <argsstring>()</argsstring>
        <name>alwaysForwardNotifications</name>
        <qualifiedname>QuantLib::LazyObject::Defaults::alwaysForwardNotifications</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>by default, lazy objects created after calling this method will always forward notifications; see <ref refid="classQuantLib_1_1LazyObject_1a17c9433135a259e4776baec66204a484" kindref="member">LazyObject::alwaysForwardNotifications</ref> for details. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/patterns/lazyobject.hpp" line="166" column="14" bodyfile="ql/patterns/lazyobject.hpp" bodystart="166" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1LazyObject_1_1Defaults_1abc37a8f964e86f387cf4eeea4a816644" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::LazyObject::Defaults::forwardsAllNotifications</definition>
        <argsstring>() const</argsstring>
        <name>forwardsAllNotifications</name>
        <qualifiedname>QuantLib::LazyObject::Defaults::forwardsAllNotifications</qualifiedname>
        <briefdescription>
<para>returns the current default </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/patterns/lazyobject.hpp" line="171" column="14" bodyfile="ql/patterns/lazyobject.hpp" bodystart="171" bodyend="173"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Per-session settings for the <ref refid="classQuantLib_1_1LazyObject" kindref="compound">LazyObject</ref> class. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::LazyObject::Defaults</label>
        <link refid="classQuantLib_1_1LazyObject_1_1Defaults"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Singleton&lt; LazyObject::Defaults &gt;</label>
        <link refid="classQuantLib_1_1Singleton"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::LazyObject::Defaults</label>
        <link refid="classQuantLib_1_1LazyObject_1_1Defaults"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Singleton&lt; LazyObject::Defaults &gt;</label>
        <link refid="classQuantLib_1_1Singleton"/>
      </node>
    </collaborationgraph>
    <location file="ql/patterns/lazyobject.hpp" line="147" column="5" bodyfile="ql/patterns/lazyobject.hpp" bodystart="147" bodyend="181"/>
    <listofallmembers>
      <member refid="classQuantLib_1_1LazyObject_1_1Defaults_1aad220c732eec6e1dde108ebbee58b27e" prot="public" virt="non-virtual"><scope>QuantLib::LazyObject::Defaults</scope><name>alwaysForwardNotifications</name></member>
      <member refid="classQuantLib_1_1LazyObject_1_1Defaults_1a5b1867d4aec2bd8e2120f59d82327bb7" prot="private" virt="non-virtual"><scope>QuantLib::LazyObject::Defaults</scope><name>Defaults</name></member>
      <member refid="classQuantLib_1_1LazyObject_1_1Defaults_1abd5daf52a0484b279f72aeb846017941" prot="public" virt="non-virtual"><scope>QuantLib::LazyObject::Defaults</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="classQuantLib_1_1LazyObject_1_1Defaults_1abc37a8f964e86f387cf4eeea4a816644" prot="public" virt="non-virtual"><scope>QuantLib::LazyObject::Defaults</scope><name>forwardsAllNotifications</name></member>
      <member refid="classQuantLib_1_1LazyObject_1_1Defaults_1acaf0e4ebb4a0861ff1a7b840c6a0d0d0" prot="private" virt="non-virtual"><scope>QuantLib::LazyObject::Defaults</scope><name>forwardsAllNotifications_</name></member>
      <member refid="classQuantLib_1_1Singleton_1ac412b7766b32f56372a3e966c5f3f386" prot="public" virt="non-virtual"><scope>QuantLib::LazyObject::Defaults</scope><name>instance</name></member>
      <member refid="classQuantLib_1_1Singleton_1a9d8c762b553192d479d7ff7edb20624d" prot="public" virt="non-virtual"><scope>QuantLib::LazyObject::Defaults</scope><name>operator=</name></member>
      <member refid="classQuantLib_1_1Singleton_1a87afbf4a53f4a13d2b64135656dc23ba" prot="public" virt="non-virtual"><scope>QuantLib::LazyObject::Defaults</scope><name>operator=</name></member>
      <member refid="classQuantLib_1_1Singleton_1aec6ad8083eb125b47049a296aa078da3" prot="public" virt="non-virtual"><scope>QuantLib::LazyObject::Defaults</scope><name>Singleton</name></member>
      <member refid="classQuantLib_1_1Singleton_1adba174550e55859f5a7cf6fc060c3b24" prot="public" virt="non-virtual"><scope>QuantLib::LazyObject::Defaults</scope><name>Singleton</name></member>
      <member refid="classQuantLib_1_1Singleton_1a711b37092c979a43c38a4ac40dadd4d3" prot="protected" virt="non-virtual"><scope>QuantLib::LazyObject::Defaults</scope><name>Singleton</name></member>
      <member refid="classQuantLib_1_1LazyObject_1_1Defaults_1aa1345fc01ad94b3dc7289acdc403c9ba" prot="public" virt="non-virtual"><scope>QuantLib::LazyObject::Defaults</scope><name>Singleton&lt; LazyObject::Defaults &gt;</name></member>
      <member refid="classQuantLib_1_1Singleton_1ac8b95ca8ebb2759f6dda65e3c787bc99" prot="public" virt="non-virtual"><scope>QuantLib::LazyObject::Defaults</scope><name>~Singleton</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
