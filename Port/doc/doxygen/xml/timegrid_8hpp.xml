<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="timegrid_8hpp" kind="file" language="C++">
    <compoundname>timegrid.hpp</compoundname>
    <includes refid="errors_8hpp" local="no">ql/errors.hpp</includes>
    <includes refid="comparison_8hpp" local="no">ql/math/comparison.hpp</includes>
    <includes local="no">vector</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">iterator</includes>
    <includes local="no">numeric</includes>
    <includes local="no">cmath</includes>
    <includedby refid="concentrating1dmesher_8cpp" local="no">ql/methods/finitedifferences/meshers/concentrating1dmesher.cpp</includedby>
    <includedby refid="timegrid_8cpp" local="no">ql/timegrid.cpp</includedby>
    <incdepgraph>
      <node id="6">
        <label>ql/config.ansi.hpp</label>
        <link refid="config_8ansi_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ql/errors.hpp</label>
        <link refid="errors_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>ql/math/comparison.hpp</label>
        <link refid="comparison_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ql/mathconstants.hpp</label>
        <link refid="mathconstants_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ql/qldefines.hpp</label>
        <link refid="qldefines_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ql/shared_ptr.hpp</label>
        <link refid="shared__ptr_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ql/timegrid.hpp</label>
        <link refid="timegrid_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>ql/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ql/userconfig.hpp</label>
        <link refid="userconfig_8hpp"/>
      </node>
      <node id="24">
        <label>algorithm</label>
      </node>
      <node id="15">
        <label>boost/assert.hpp</label>
      </node>
      <node id="4">
        <label>boost/config.hpp</label>
      </node>
      <node id="16">
        <label>boost/current_function.hpp</label>
      </node>
      <node id="14">
        <label>boost/enable_shared_from_this.hpp</label>
      </node>
      <node id="13">
        <label>boost/make_shared.hpp</label>
      </node>
      <node id="12">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="5">
        <label>boost/version.hpp</label>
      </node>
      <node id="9">
        <label>cmath</label>
      </node>
      <node id="22">
        <label>cstddef</label>
      </node>
      <node id="17">
        <label>exception</label>
      </node>
      <node id="25">
        <label>iterator</label>
      </node>
      <node id="10">
        <label>limits</label>
      </node>
      <node id="26">
        <label>numeric</label>
      </node>
      <node id="18">
        <label>sstream</label>
      </node>
      <node id="19">
        <label>string</label>
      </node>
      <node id="23">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>ql/methods/finitedifferences/meshers/concentrating1dmesher.cpp</label>
        <link refid="concentrating1dmesher_8cpp"/>
      </node>
      <node id="3">
        <label>ql/timegrid.cpp</label>
        <link refid="timegrid_8cpp"/>
      </node>
      <node id="1">
        <label>ql/timegrid.hpp</label>
        <link refid="timegrid_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classQuantLib_1_1TimeGrid" prot="public">QuantLib::TimeGrid</innerclass>
    <innernamespace refid="namespaceQuantLib">QuantLib</innernamespace>
    <briefdescription>
<para>discrete time grid </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>c++;<sp/>tab-width:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil;<sp/>c-basic-offset:<sp/>4<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2001,<sp/>2002,<sp/>2003<sp/>Sadruddin<sp/>Rejeb</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2005,<sp/>2006<sp/>StatPro<sp/>Italia<sp/>srl</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>QuantLib,<sp/>a<sp/>free-software/open-source<sp/>library</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>for<sp/>financial<sp/>quantitative<sp/>analysts<sp/>and<sp/>developers<sp/>-<sp/>http://quantlib.org/</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>QuantLib<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>QuantLib<sp/>license.<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>copy<sp/>of<sp/>the<sp/>license<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>please<sp/>email</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>&lt;quantlib-dev@lists.sf.net&gt;.<sp/>The<sp/>license<sp/>is<sp/>also<sp/>available<sp/>online<sp/>at</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>&lt;http://quantlib.org/license.shtml&gt;.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>license<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="19"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>quantlib_time_grid_hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>quantlib_time_grid_hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="errors_8hpp" kindref="compound">ql/errors.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="comparison_8hpp" kindref="compound">ql/math/comparison.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceQuantLib" kindref="compound">QuantLib</ref><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classQuantLib_1_1TimeGrid" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classQuantLib_1_1TimeGrid" kindref="compound">TimeGrid</ref><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"></codeline>
<codeline lineno="47" refid="classQuantLib_1_1TimeGrid_1a66bd9108eb08da6249cc443fd02fcdee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1TimeGrid_1a66bd9108eb08da6249cc443fd02fcdee" kindref="member">TimeGrid</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1TimeGrid_1a66bd9108eb08da6249cc443fd02fcdee" kindref="member">TimeGrid</ref>(<ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref><sp/><ref refid="classQuantLib_1_1TimeGrid_1a3a0f0e49f49a35822bede8b716781bf9" kindref="member">end</ref>,<sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>steps);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Iterator&gt;</highlight></codeline>
<codeline lineno="55" refid="classQuantLib_1_1TimeGrid_1ad08acee76ee9ad24d19cbaabc3760df5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1TimeGrid_1ad08acee76ee9ad24d19cbaabc3760df5" kindref="member">TimeGrid</ref>(Iterator<sp/><ref refid="classQuantLib_1_1TimeGrid_1a89303535849d55a1ee593d8cf984881c" kindref="member">begin</ref>,<sp/>Iterator<sp/><ref refid="classQuantLib_1_1TimeGrid_1a3a0f0e49f49a35822bede8b716781bf9" kindref="member">end</ref>)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" kindref="member">mandatoryTimes_</ref>(<ref refid="classQuantLib_1_1TimeGrid_1a89303535849d55a1ee593d8cf984881c" kindref="member">begin</ref>,<sp/><ref refid="classQuantLib_1_1TimeGrid_1a3a0f0e49f49a35822bede8b716781bf9" kindref="member">end</ref>)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(<ref refid="classQuantLib_1_1TimeGrid_1a89303535849d55a1ee593d8cf984881c" kindref="member">begin</ref><sp/>!=<sp/><ref refid="classQuantLib_1_1TimeGrid_1a3a0f0e49f49a35822bede8b716781bf9" kindref="member">end</ref>,<sp/></highlight><highlight class="stringliteral">&quot;empty<sp/>time<sp/>sequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sort(<ref refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" kindref="member">mandatoryTimes_</ref>.begin(),<ref refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" kindref="member">mandatoryTimes_</ref>.end());</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>seem<sp/>to<sp/>assume<sp/>that<sp/>the<sp/>grid<sp/>begins<sp/>at<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let&apos;s<sp/>enforce<sp/>the<sp/>assumption<sp/>for<sp/>the<sp/>time<sp/>being</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(even<sp/>though<sp/>I&apos;m<sp/>not<sp/>sure<sp/>that<sp/>I<sp/>agree.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(<ref refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" kindref="member">mandatoryTimes_</ref>.front()<sp/>&gt;=<sp/>0.0,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;negative<sp/>times<sp/>not<sp/>allowed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>e<sp/>=<sp/>std::unique(<ref refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" kindref="member">mandatoryTimes_</ref>.begin(),<sp/><ref refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" kindref="member">mandatoryTimes_</ref>.end(),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>(*)(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>,<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>)</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespaceQuantLib_1acba7cc9670305b8b6164bc87319313de" kindref="member">close_enough</ref>));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" kindref="member">mandatoryTimes_</ref>.resize(e<sp/>-<sp/><ref refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" kindref="member">mandatoryTimes_</ref>.begin());</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" kindref="member">mandatoryTimes_</ref>[0]<sp/>&gt;<sp/>0.0)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1TimeGrid_1a98e857470faa1cdb20a9aa9e284225ab" kindref="member">times_</ref>.push_back(0.0);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1TimeGrid_1a98e857470faa1cdb20a9aa9e284225ab" kindref="member">times_</ref>.insert(<ref refid="classQuantLib_1_1TimeGrid_1a98e857470faa1cdb20a9aa9e284225ab" kindref="member">times_</ref>.end(),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" kindref="member">mandatoryTimes_</ref>.begin(),<sp/><ref refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" kindref="member">mandatoryTimes_</ref>.end());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1TimeGrid_1a1cd90b8dfe10dbee3874d31bfb62ca59" kindref="member">dt_</ref>.reserve(<ref refid="classQuantLib_1_1TimeGrid_1a98e857470faa1cdb20a9aa9e284225ab" kindref="member">times_</ref>.size()-1);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::adjacent_difference(<ref refid="classQuantLib_1_1TimeGrid_1a98e857470faa1cdb20a9aa9e284225ab" kindref="member">times_</ref>.begin()+1,<ref refid="classQuantLib_1_1TimeGrid_1a98e857470faa1cdb20a9aa9e284225ab" kindref="member">times_</ref>.end(),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::back_inserter(<ref refid="classQuantLib_1_1TimeGrid_1a1cd90b8dfe10dbee3874d31bfb62ca59" kindref="member">dt_</ref>));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Iterator&gt;</highlight></codeline>
<codeline lineno="86" refid="classQuantLib_1_1TimeGrid_1a7f5715c4aea6c0a7319961a08297eb57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1TimeGrid_1a7f5715c4aea6c0a7319961a08297eb57" kindref="member">TimeGrid</ref>(Iterator<sp/><ref refid="classQuantLib_1_1TimeGrid_1a89303535849d55a1ee593d8cf984881c" kindref="member">begin</ref>,<sp/>Iterator<sp/><ref refid="classQuantLib_1_1TimeGrid_1a3a0f0e49f49a35822bede8b716781bf9" kindref="member">end</ref>,<sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>steps)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" kindref="member">mandatoryTimes_</ref>(<ref refid="classQuantLib_1_1TimeGrid_1a89303535849d55a1ee593d8cf984881c" kindref="member">begin</ref>,<sp/><ref refid="classQuantLib_1_1TimeGrid_1a3a0f0e49f49a35822bede8b716781bf9" kindref="member">end</ref>)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(<ref refid="classQuantLib_1_1TimeGrid_1a89303535849d55a1ee593d8cf984881c" kindref="member">begin</ref><sp/>!=<sp/><ref refid="classQuantLib_1_1TimeGrid_1a3a0f0e49f49a35822bede8b716781bf9" kindref="member">end</ref>,<sp/></highlight><highlight class="stringliteral">&quot;empty<sp/>time<sp/>sequence&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sort(<ref refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" kindref="member">mandatoryTimes_</ref>.begin(),<ref refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" kindref="member">mandatoryTimes_</ref>.end());</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>seem<sp/>to<sp/>assume<sp/>that<sp/>the<sp/>grid<sp/>begins<sp/>at<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let&apos;s<sp/>enforce<sp/>the<sp/>assumption<sp/>for<sp/>the<sp/>time<sp/>being</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(even<sp/>though<sp/>I&apos;m<sp/>not<sp/>sure<sp/>that<sp/>I<sp/>agree.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(<ref refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" kindref="member">mandatoryTimes_</ref>.front()<sp/>&gt;=<sp/>0.0,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;negative<sp/>times<sp/>not<sp/>allowed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>e<sp/>=<sp/>std::unique(<ref refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" kindref="member">mandatoryTimes_</ref>.begin(),<sp/><ref refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" kindref="member">mandatoryTimes_</ref>.end(),</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>(*)(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>,<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>)</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespaceQuantLib_1acba7cc9670305b8b6164bc87319313de" kindref="member">close_enough</ref>));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" kindref="member">mandatoryTimes_</ref>.resize(e<sp/>-<sp/><ref refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" kindref="member">mandatoryTimes_</ref>.begin());</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref><sp/>last<sp/>=<sp/><ref refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" kindref="member">mandatoryTimes_</ref>.back();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref><sp/>dtMax;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>resulting<sp/>timegrid<sp/>have<sp/>points<sp/>at<sp/>times<sp/>listed<sp/>in<sp/>the<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>list.<sp/>Between<sp/>these<sp/>points,<sp/>there<sp/>are<sp/>inner-points<sp/>which<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>regularly<sp/>spaced.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(steps<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Time&gt;<sp/>diff;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::adjacent_difference(<ref refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" kindref="member">mandatoryTimes_</ref>.begin(),</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" kindref="member">mandatoryTimes_</ref>.end(),</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::back_inserter(diff));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(!diff.empty(),<sp/></highlight><highlight class="stringliteral">&quot;at<sp/>least<sp/>two<sp/>distinct<sp/>points<sp/>required<sp/>in<sp/>time<sp/>grid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(diff.front()==0.0)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff.erase(diff.begin());</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>std::min_element(diff.begin(),<sp/>diff.end());</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(i<sp/>!=<sp/>diff.end(),<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>enough<sp/>distinct<sp/>points<sp/>in<sp/>time<sp/>grid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtMax<sp/>=<sp/>*i;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtMax<sp/>=<sp/>last/steps;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref><sp/>periodBegin<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1TimeGrid_1a98e857470faa1cdb20a9aa9e284225ab" kindref="member">times_</ref>.push_back(periodBegin);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t=<ref refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" kindref="member">mandatoryTimes_</ref>.begin();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t&lt;<ref refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" kindref="member">mandatoryTimes_</ref>.end();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++t)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref><sp/>periodEnd<sp/>=<sp/>*t;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(periodEnd<sp/>!=<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>nearest<sp/>integer,<sp/>at<sp/>least<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>nSteps<sp/>=<sp/>std::max(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>(std::lround((periodEnd<sp/>-<sp/>periodBegin)/dtMax)),<sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>(1));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref><sp/><ref refid="classQuantLib_1_1TimeGrid_1a449ce5eb258510a4f936d9ebc4088f6a" kindref="member">dt</ref><sp/>=<sp/>(periodEnd<sp/>-<sp/>periodBegin)/nSteps;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>n=1;<sp/>n&lt;=nSteps;<sp/>++n)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1TimeGrid_1a98e857470faa1cdb20a9aa9e284225ab" kindref="member">times_</ref>.push_back(periodBegin<sp/>+<sp/>n*<ref refid="classQuantLib_1_1TimeGrid_1a449ce5eb258510a4f936d9ebc4088f6a" kindref="member">dt</ref>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>periodBegin<sp/>=<sp/>periodEnd;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1TimeGrid_1a1cd90b8dfe10dbee3874d31bfb62ca59" kindref="member">dt_</ref>.reserve(<ref refid="classQuantLib_1_1TimeGrid_1a98e857470faa1cdb20a9aa9e284225ab" kindref="member">times_</ref>.size()-1);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::adjacent_difference(<ref refid="classQuantLib_1_1TimeGrid_1a98e857470faa1cdb20a9aa9e284225ab" kindref="member">times_</ref>.begin()+1,<ref refid="classQuantLib_1_1TimeGrid_1a98e857470faa1cdb20a9aa9e284225ab" kindref="member">times_</ref>.end(),</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::back_inserter(<ref refid="classQuantLib_1_1TimeGrid_1a1cd90b8dfe10dbee3874d31bfb62ca59" kindref="member">dt_</ref>));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141" refid="classQuantLib_1_1TimeGrid_1a1b7889ee766b7f7d76e1761f53e421c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1TimeGrid_1a1b7889ee766b7f7d76e1761f53e421c9" kindref="member">TimeGrid</ref>(std::initializer_list&lt;Time&gt;<sp/>times)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classQuantLib_1_1TimeGrid" kindref="compound">TimeGrid</ref>(times.<ref refid="classQuantLib_1_1TimeGrid_1a89303535849d55a1ee593d8cf984881c" kindref="member">begin</ref>(),<sp/>times.<ref refid="classQuantLib_1_1TimeGrid_1a3a0f0e49f49a35822bede8b716781bf9" kindref="member">end</ref>())<sp/>{}</highlight></codeline>
<codeline lineno="143" refid="classQuantLib_1_1TimeGrid_1a5be3a69959ac0cd5483709a85cf94c4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1TimeGrid_1a5be3a69959ac0cd5483709a85cf94c4a" kindref="member">TimeGrid</ref>(std::initializer_list&lt;Time&gt;<sp/>times,<sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>steps)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classQuantLib_1_1TimeGrid" kindref="compound">TimeGrid</ref>(times.<ref refid="classQuantLib_1_1TimeGrid_1a89303535849d55a1ee593d8cf984881c" kindref="member">begin</ref>(),<sp/>times.<ref refid="classQuantLib_1_1TimeGrid_1a3a0f0e49f49a35822bede8b716781bf9" kindref="member">end</ref>(),<sp/>steps)<sp/>{}</highlight></codeline>
<codeline lineno="146"></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1TimeGrid_1ac95c7456057a0627560e9c9a7548939e" kindref="member">index</ref>(<ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref><sp/>t)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1TimeGrid_1a9f6ed6633abef8fb220c07e97a94c337" kindref="member">closestIndex</ref>(<ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref><sp/>t)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153" refid="classQuantLib_1_1TimeGrid_1a14155bfd9f9355e7a1c77e207ed71bd7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref><sp/><ref refid="classQuantLib_1_1TimeGrid_1a14155bfd9f9355e7a1c77e207ed71bd7" kindref="member">closestTime</ref>(<ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref><sp/>t)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1TimeGrid_1a98e857470faa1cdb20a9aa9e284225ab" kindref="member">times_</ref>[<ref refid="classQuantLib_1_1TimeGrid_1a9f6ed6633abef8fb220c07e97a94c337" kindref="member">closestIndex</ref>(t)];</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156" refid="classQuantLib_1_1TimeGrid_1a85e68f438095e3400ff76a875a788a5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Time&gt;&amp;<sp/><ref refid="classQuantLib_1_1TimeGrid_1a85e68f438095e3400ff76a875a788a5c" kindref="member">mandatoryTimes</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" kindref="member">mandatoryTimes_</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159" refid="classQuantLib_1_1TimeGrid_1a449ce5eb258510a4f936d9ebc4088f6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref><sp/><ref refid="classQuantLib_1_1TimeGrid_1a449ce5eb258510a4f936d9ebc4088f6a" kindref="member">dt</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1TimeGrid_1a1cd90b8dfe10dbee3874d31bfb62ca59" kindref="member">dt_</ref>[i];<sp/>}</highlight></codeline>
<codeline lineno="161"></codeline>
<codeline lineno="163" refid="classQuantLib_1_1TimeGrid_1ab8bf260154547bec92ccb8a5decb4777" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;Time&gt;::const_iterator<sp/><ref refid="classQuantLib_1_1TimeGrid_1ab8bf260154547bec92ccb8a5decb4777" kindref="member">const_iterator</ref>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;Time&gt;::const_reverse_iterator</highlight></codeline>
<codeline lineno="165" refid="classQuantLib_1_1TimeGrid_1a611645e046baaac99d9982af249c0cbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1TimeGrid_1a611645e046baaac99d9982af249c0cbd" kindref="member">const_reverse_iterator</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="classQuantLib_1_1TimeGrid_1ab5bbb09fa2033be7b3abde674c12384a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref><sp/><ref refid="classQuantLib_1_1TimeGrid_1ab5bbb09fa2033be7b3abde674c12384a" kindref="member">operator[]</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1TimeGrid_1a98e857470faa1cdb20a9aa9e284225ab" kindref="member">times_</ref>[i];<sp/>}</highlight></codeline>
<codeline lineno="168" refid="classQuantLib_1_1TimeGrid_1acc2f018f12e4462f1b7ee27ea1301ea4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref><sp/><ref refid="classQuantLib_1_1TimeGrid_1acc2f018f12e4462f1b7ee27ea1301ea4" kindref="member">at</ref>(<ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1TimeGrid_1a98e857470faa1cdb20a9aa9e284225ab" kindref="member">times_</ref>.at(i);<sp/>}</highlight></codeline>
<codeline lineno="169" refid="classQuantLib_1_1TimeGrid_1a8a43e86086987f90809dffda7a6405b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/><ref refid="classQuantLib_1_1TimeGrid_1a8a43e86086987f90809dffda7a6405b9" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1TimeGrid_1a98e857470faa1cdb20a9aa9e284225ab" kindref="member">times_</ref>.size();<sp/>}</highlight></codeline>
<codeline lineno="170" refid="classQuantLib_1_1TimeGrid_1ae2410ba8a3cef87a5a3c91716a1dfcea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1TimeGrid_1ae2410ba8a3cef87a5a3c91716a1dfcea" kindref="member">empty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1TimeGrid_1a98e857470faa1cdb20a9aa9e284225ab" kindref="member">times_</ref>.empty();<sp/>}</highlight></codeline>
<codeline lineno="171" refid="classQuantLib_1_1TimeGrid_1a89303535849d55a1ee593d8cf984881c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1TimeGrid_1ab8bf260154547bec92ccb8a5decb4777" kindref="member">const_iterator</ref><sp/><ref refid="classQuantLib_1_1TimeGrid_1a89303535849d55a1ee593d8cf984881c" kindref="member">begin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1TimeGrid_1a98e857470faa1cdb20a9aa9e284225ab" kindref="member">times_</ref>.begin();<sp/>}</highlight></codeline>
<codeline lineno="172" refid="classQuantLib_1_1TimeGrid_1a3a0f0e49f49a35822bede8b716781bf9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1TimeGrid_1ab8bf260154547bec92ccb8a5decb4777" kindref="member">const_iterator</ref><sp/><ref refid="classQuantLib_1_1TimeGrid_1a3a0f0e49f49a35822bede8b716781bf9" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1TimeGrid_1a98e857470faa1cdb20a9aa9e284225ab" kindref="member">times_</ref>.end();<sp/>}</highlight></codeline>
<codeline lineno="173" refid="classQuantLib_1_1TimeGrid_1a8b0c00bfa719704b98879f1f1ab85442" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1TimeGrid_1a611645e046baaac99d9982af249c0cbd" kindref="member">const_reverse_iterator</ref><sp/><ref refid="classQuantLib_1_1TimeGrid_1a8b0c00bfa719704b98879f1f1ab85442" kindref="member">rbegin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1TimeGrid_1a98e857470faa1cdb20a9aa9e284225ab" kindref="member">times_</ref>.rbegin();<sp/>}</highlight></codeline>
<codeline lineno="174" refid="classQuantLib_1_1TimeGrid_1ab122216ebd6971e2903ff08be851bac7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1TimeGrid_1a611645e046baaac99d9982af249c0cbd" kindref="member">const_reverse_iterator</ref><sp/><ref refid="classQuantLib_1_1TimeGrid_1ab122216ebd6971e2903ff08be851bac7" kindref="member">rend</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1TimeGrid_1a98e857470faa1cdb20a9aa9e284225ab" kindref="member">times_</ref>.rend();<sp/>}</highlight></codeline>
<codeline lineno="175" refid="classQuantLib_1_1TimeGrid_1a73af48730fb1ce06375b002602e47fb5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref><sp/><ref refid="classQuantLib_1_1TimeGrid_1a73af48730fb1ce06375b002602e47fb5" kindref="member">front</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1TimeGrid_1a98e857470faa1cdb20a9aa9e284225ab" kindref="member">times_</ref>.front();<sp/>}</highlight></codeline>
<codeline lineno="176" refid="classQuantLib_1_1TimeGrid_1a9789a98d3d3a08645fd99e48a1d563d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref><sp/><ref refid="classQuantLib_1_1TimeGrid_1a9789a98d3d3a08645fd99e48a1d563d1" kindref="member">back</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1TimeGrid_1a98e857470faa1cdb20a9aa9e284225ab" kindref="member">times_</ref>.back();<sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="179" refid="classQuantLib_1_1TimeGrid_1a98e857470faa1cdb20a9aa9e284225ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Time&gt;<sp/><ref refid="classQuantLib_1_1TimeGrid_1a98e857470faa1cdb20a9aa9e284225ab" kindref="member">times_</ref>;</highlight></codeline>
<codeline lineno="180" refid="classQuantLib_1_1TimeGrid_1a1cd90b8dfe10dbee3874d31bfb62ca59" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Time&gt;<sp/><ref refid="classQuantLib_1_1TimeGrid_1a1cd90b8dfe10dbee3874d31bfb62ca59" kindref="member">dt_</ref>;</highlight></codeline>
<codeline lineno="181" refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Time&gt;<sp/><ref refid="classQuantLib_1_1TimeGrid_1acf0643788c8248a426bc56ebd9e1e162" kindref="member">mandatoryTimes_</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="ql/timegrid.hpp"/>
  </compounddef>
</doxygen>
