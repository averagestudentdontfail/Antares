<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classQuantLib_1_1Interpolation_1_1templateImpl" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::Interpolation::templateImpl</compoundname>
    <basecompoundref refid="classQuantLib_1_1Interpolation_1_1Impl" prot="public" virt="non-virtual">QuantLib::Interpolation::Impl</basecompoundref>
    <derivedcompoundref refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl" prot="public" virt="non-virtual">QuantLib::detail::CubicInterpolationImpl&lt; I1, I2 &gt;</derivedcompoundref>
    <derivedcompoundref refid="classQuantLib_1_1detail_1_1LagrangeInterpolationImpl" prot="public" virt="non-virtual">QuantLib::detail::LagrangeInterpolationImpl&lt; I1, I2 &gt;</derivedcompoundref>
    <derivedcompoundref refid="classQuantLib_1_1detail_1_1LinearInterpolationImpl" prot="public" virt="non-virtual">QuantLib::detail::LinearInterpolationImpl&lt; I1, I2 &gt;</derivedcompoundref>
    <includes refid="interpolation_8hpp" local="no">interpolation.hpp</includes>
    <templateparamlist>
      <param>
        <type>class I1</type>
      </param>
      <param>
        <type>class I2</type>
      </param>
    </templateparamlist>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" prot="protected" static="no" mutable="no">
        <type>I1</type>
        <definition>I1 QuantLib::Interpolation::templateImpl&lt; I1, I2 &gt;::xBegin_</definition>
        <argsstring></argsstring>
        <name>xBegin_</name>
        <qualifiedname>QuantLib::Interpolation::templateImpl::xBegin_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolation.hpp" line="114" column="16" bodyfile="ql/math/interpolation.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1Interpolation_1_1templateImpl_1ae31c6c02580a0b25b0e9c64fad90604a" prot="protected" static="no" mutable="no">
        <type>I1</type>
        <definition>I1 QuantLib::Interpolation::templateImpl&lt; I1, I2 &gt;::xEnd_</definition>
        <argsstring></argsstring>
        <name>xEnd_</name>
        <qualifiedname>QuantLib::Interpolation::templateImpl::xEnd_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolation.hpp" line="114" column="24" bodyfile="ql/math/interpolation.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQuantLib_1_1Interpolation_1_1templateImpl_1adef37d429d0186d836878f1cc9ae3c71" prot="protected" static="no" mutable="no">
        <type>I2</type>
        <definition>I2 QuantLib::Interpolation::templateImpl&lt; I1, I2 &gt;::yBegin_</definition>
        <argsstring></argsstring>
        <name>yBegin_</name>
        <qualifiedname>QuantLib::Interpolation::templateImpl::yBegin_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolation.hpp" line="115" column="16" bodyfile="ql/math/interpolation.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classQuantLib_1_1Interpolation_1_1templateImpl_1afd70a6545d200055b1e7fd3ac6cc3f45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Interpolation::templateImpl&lt; I1, I2 &gt;::templateImpl</definition>
        <argsstring>(const I1 &amp;xBegin, const I1 &amp;xEnd, const I2 &amp;yBegin, const int requiredPoints=2)</argsstring>
        <name>templateImpl</name>
        <qualifiedname>QuantLib::Interpolation::templateImpl::templateImpl</qualifiedname>
        <param>
          <type>const I1 &amp;</type>
          <declname>xBegin</declname>
        </param>
        <param>
          <type>const I1 &amp;</type>
          <declname>xEnd</declname>
        </param>
        <param>
          <type>const I2 &amp;</type>
          <declname>yBegin</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>requiredPoints</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolation.hpp" line="78" column="13" bodyfile="ql/math/interpolation.hpp" bodystart="78" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1Interpolation_1_1templateImpl_1adfc3310f6f3ea269f80c21cbc9cd2480" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Interpolation::templateImpl&lt; I1, I2 &gt;::xMin</definition>
        <argsstring>() const override</argsstring>
        <name>xMin</name>
        <qualifiedname>QuantLib::Interpolation::templateImpl::xMin</qualifiedname>
        <reimplements refid="classQuantLib_1_1Interpolation_1_1Impl_1ae37cd2f4a53d875e3bea60d866baaae4">xMin</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolation.hpp" line="86" column="18" bodyfile="ql/math/interpolation.hpp" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1Interpolation_1_1templateImpl_1af2ee8595e097522bbac466d2e036a536" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Interpolation::templateImpl&lt; I1, I2 &gt;::xMax</definition>
        <argsstring>() const override</argsstring>
        <name>xMax</name>
        <qualifiedname>QuantLib::Interpolation::templateImpl::xMax</qualifiedname>
        <reimplements refid="classQuantLib_1_1Interpolation_1_1Impl_1a92a99be7541d844650a401c843e122c2">xMax</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolation.hpp" line="87" column="18" bodyfile="ql/math/interpolation.hpp" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1Interpolation_1_1templateImpl_1ae58e26280490791d1704b518e4461713" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; <ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::Interpolation::templateImpl&lt; I1, I2 &gt;::xValues</definition>
        <argsstring>() const override</argsstring>
        <name>xValues</name>
        <qualifiedname>QuantLib::Interpolation::templateImpl::xValues</qualifiedname>
        <reimplements refid="classQuantLib_1_1Interpolation_1_1Impl_1a7c1ba222da655c2ec12caa84b0a72f9c">xValues</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolation.hpp" line="88" column="25" bodyfile="ql/math/interpolation.hpp" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1Interpolation_1_1templateImpl_1a745482b424f51c5726caa0cc6412f1a0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; <ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::Interpolation::templateImpl&lt; I1, I2 &gt;::yValues</definition>
        <argsstring>() const override</argsstring>
        <name>yValues</name>
        <qualifiedname>QuantLib::Interpolation::templateImpl::yValues</qualifiedname>
        <reimplements refid="classQuantLib_1_1Interpolation_1_1Impl_1a766386c355c78d9b2415aab6ae5e071d">yValues</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolation.hpp" line="89" column="25" bodyfile="ql/math/interpolation.hpp" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1Interpolation_1_1templateImpl_1aa1a96576884df7179393ce68928a85c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool QuantLib::Interpolation::templateImpl&lt; I1, I2 &gt;::isInRange</definition>
        <argsstring>(Real x) const override</argsstring>
        <name>isInRange</name>
        <qualifiedname>QuantLib::Interpolation::templateImpl::isInRange</qualifiedname>
        <reimplements refid="classQuantLib_1_1Interpolation_1_1Impl_1a618b9f70fa8c139c3bca8fb024be4d6d">isInRange</reimplements>
        <param>
          <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolation.hpp" line="92" column="18" bodyfile="ql/math/interpolation.hpp" bodystart="92" bodyend="99"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="classQuantLib_1_1Interpolation_1_1templateImpl_1a2884268a09723fa87ec7146750d2d46c" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceQuantLib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::Interpolation::templateImpl&lt; I1, I2 &gt;::locate</definition>
        <argsstring>(Real x) const</argsstring>
        <name>locate</name>
        <qualifiedname>QuantLib::Interpolation::templateImpl::locate</qualifiedname>
        <param>
          <type><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolation.hpp" line="102" column="18" bodyfile="ql/math/interpolation.hpp" bodystart="102" bodyend="113"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>basic template implementation </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::Interpolation::Impl</label>
        <link refid="classQuantLib_1_1Interpolation_1_1Impl"/>
      </node>
      <node id="1">
        <label>QuantLib::Interpolation::templateImpl&lt; I1, I2 &gt;</label>
        <link refid="classQuantLib_1_1Interpolation_1_1templateImpl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::detail::CubicInterpolationImpl&lt; I1, I2 &gt;</label>
        <link refid="classQuantLib_1_1detail_1_1CubicInterpolationImpl"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::detail::LagrangeInterpolationImpl&lt; I1, I2 &gt;</label>
        <link refid="classQuantLib_1_1detail_1_1LagrangeInterpolationImpl"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::detail::LinearInterpolationImpl&lt; I1, I2 &gt;</label>
        <link refid="classQuantLib_1_1detail_1_1LinearInterpolationImpl"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::Interpolation::Impl</label>
        <link refid="classQuantLib_1_1Interpolation_1_1Impl"/>
      </node>
      <node id="1">
        <label>QuantLib::Interpolation::templateImpl&lt; I1, I2 &gt;</label>
        <link refid="classQuantLib_1_1Interpolation_1_1templateImpl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/math/interpolation.hpp" line="76" column="9" bodyfile="ql/math/interpolation.hpp" bodystart="76" bodyend="116"/>
    <listofallmembers>
      <member refid="classQuantLib_1_1Interpolation_1_1Impl_1aa3d5009598ca4940c1d1abb87e821c3d" prot="public" virt="pure-virtual"><scope>QuantLib::Interpolation::templateImpl</scope><name>derivative</name></member>
      <member refid="classQuantLib_1_1Interpolation_1_1templateImpl_1aa1a96576884df7179393ce68928a85c2" prot="public" virt="virtual"><scope>QuantLib::Interpolation::templateImpl</scope><name>isInRange</name></member>
      <member refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a2884268a09723fa87ec7146750d2d46c" prot="protected" virt="non-virtual"><scope>QuantLib::Interpolation::templateImpl</scope><name>locate</name></member>
      <member refid="classQuantLib_1_1Interpolation_1_1Impl_1ac7ada137d995e5b5afa466e1ea64f3af" prot="public" virt="pure-virtual"><scope>QuantLib::Interpolation::templateImpl</scope><name>primitive</name></member>
      <member refid="classQuantLib_1_1Interpolation_1_1Impl_1a6274e96e3ee0da2e2a2d1dfd842932a7" prot="public" virt="pure-virtual"><scope>QuantLib::Interpolation::templateImpl</scope><name>secondDerivative</name></member>
      <member refid="classQuantLib_1_1Interpolation_1_1templateImpl_1afd70a6545d200055b1e7fd3ac6cc3f45" prot="public" virt="non-virtual"><scope>QuantLib::Interpolation::templateImpl</scope><name>templateImpl</name></member>
      <member refid="classQuantLib_1_1Interpolation_1_1Impl_1a709278c2ce75ffc2bea488619d4997e6" prot="public" virt="pure-virtual"><scope>QuantLib::Interpolation::templateImpl</scope><name>update</name></member>
      <member refid="classQuantLib_1_1Interpolation_1_1Impl_1ad99198f18adb259c124fd2df7f2c4dea" prot="public" virt="pure-virtual"><scope>QuantLib::Interpolation::templateImpl</scope><name>value</name></member>
      <member refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a4224a56b414e92505e5b1e2b83282d80" prot="protected" virt="non-virtual"><scope>QuantLib::Interpolation::templateImpl</scope><name>xBegin_</name></member>
      <member refid="classQuantLib_1_1Interpolation_1_1templateImpl_1ae31c6c02580a0b25b0e9c64fad90604a" prot="protected" virt="non-virtual"><scope>QuantLib::Interpolation::templateImpl</scope><name>xEnd_</name></member>
      <member refid="classQuantLib_1_1Interpolation_1_1templateImpl_1af2ee8595e097522bbac466d2e036a536" prot="public" virt="virtual"><scope>QuantLib::Interpolation::templateImpl</scope><name>xMax</name></member>
      <member refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adfc3310f6f3ea269f80c21cbc9cd2480" prot="public" virt="virtual"><scope>QuantLib::Interpolation::templateImpl</scope><name>xMin</name></member>
      <member refid="classQuantLib_1_1Interpolation_1_1templateImpl_1ae58e26280490791d1704b518e4461713" prot="public" virt="virtual"><scope>QuantLib::Interpolation::templateImpl</scope><name>xValues</name></member>
      <member refid="classQuantLib_1_1Interpolation_1_1templateImpl_1adef37d429d0186d836878f1cc9ae3c71" prot="protected" virt="non-virtual"><scope>QuantLib::Interpolation::templateImpl</scope><name>yBegin_</name></member>
      <member refid="classQuantLib_1_1Interpolation_1_1templateImpl_1a745482b424f51c5726caa0cc6412f1a0" prot="public" virt="virtual"><scope>QuantLib::Interpolation::templateImpl</scope><name>yValues</name></member>
      <member refid="classQuantLib_1_1Interpolation_1_1Impl_1aac2065f5fde38ec969bdcb7a99430e92" prot="public" virt="virtual"><scope>QuantLib::Interpolation::templateImpl</scope><name>~Impl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
