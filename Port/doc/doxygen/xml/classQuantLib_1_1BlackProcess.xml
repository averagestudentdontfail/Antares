<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classQuantLib_1_1BlackProcess" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::BlackProcess</compoundname>
    <basecompoundref refid="classQuantLib_1_1GeneralizedBlackScholesProcess" prot="public" virt="non-virtual">QuantLib::GeneralizedBlackScholesProcess</basecompoundref>
    <includes refid="blackscholesprocess_8hpp" local="no">blackscholesprocess.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classQuantLib_1_1BlackProcess_1af4d828b24feafbeed9cf2b24f557894e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::BlackProcess::BlackProcess</definition>
        <argsstring>(const Handle&lt; Quote &gt; &amp;x0, const Handle&lt; YieldTermStructure &gt; &amp;riskFreeTS, const Handle&lt; BlackVolTermStructure &gt; &amp;blackVolTS, const ext::shared_ptr&lt; discretization &gt; &amp;d=ext::shared_ptr&lt; discretization &gt;(new EulerDiscretization), bool forceDiscretization=false)</argsstring>
        <name>BlackProcess</name>
        <qualifiedname>QuantLib::BlackProcess::BlackProcess</qualifiedname>
        <param>
          <type>const <ref refid="classQuantLib_1_1Handle" kindref="compound">Handle</ref>&lt; <ref refid="classQuantLib_1_1Quote" kindref="compound">Quote</ref> &gt; &amp;</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1Handle" kindref="compound">Handle</ref>&lt; <ref refid="classQuantLib_1_1YieldTermStructure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>riskFreeTS</declname>
        </param>
        <param>
          <type>const <ref refid="classQuantLib_1_1Handle" kindref="compound">Handle</ref>&lt; <ref refid="classQuantLib_1_1BlackVolTermStructure" kindref="compound">BlackVolTermStructure</ref> &gt; &amp;</type>
          <declname>blackVolTS</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="classQuantLib_1_1StochasticProcess_1_1discretization" kindref="compound">discretization</ref> &gt; &amp;</type>
          <declname>d</declname>
          <defval>ext::shared_ptr&lt; <ref refid="classQuantLib_1_1StochasticProcess_1_1discretization" kindref="compound">discretization</ref> &gt;(new <ref refid="classQuantLib_1_1EulerDiscretization" kindref="compound">EulerDiscretization</ref>)</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>forceDiscretization</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/blackscholesprocess.hpp" line="170" column="9" bodyfile="ql/processes/blackscholesprocess.cpp" bodystart="256" bodyend="262"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Black (1976) stochastic process. </para>
    </briefdescription>
    <detaileddescription>
<para>This class describes the stochastic process <formula id="59">$ S $</formula> for a forward or futures contract given by  <formula id="64">\[
    d\ln S(t) = -\frac{\sigma(t, S)^2}{2} dt + \sigma dW_t.
\]</formula></para>
<para><simplesect kind="warning"><para>while the interface is expressed in terms of <formula id="59">$ S $</formula>, the internal calculations work on <formula id="61">$ ln S $</formula>. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::BlackProcess</label>
        <link refid="classQuantLib_1_1BlackProcess"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::GeneralizedBlackScholesProcess</label>
        <link refid="classQuantLib_1_1GeneralizedBlackScholesProcess"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="classQuantLib_1_1Observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="classQuantLib_1_1Observer"/>
      </node>
      <node id="4">
        <label>QuantLib::StochasticProcess</label>
        <link refid="classQuantLib_1_1StochasticProcess"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::StochasticProcess1D</label>
        <link refid="classQuantLib_1_1StochasticProcess1D"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9">
        <label>QuantLib::Handle&lt; QuantLib::BlackVolTermStructure &gt;</label>
        <link refid="classQuantLib_1_1Handle"/>
      </node>
      <node id="10">
        <label>QuantLib::Handle&lt; QuantLib::LocalVolTermStructure &gt;</label>
        <link refid="classQuantLib_1_1Handle"/>
      </node>
      <node id="7">
        <label>QuantLib::Handle&lt; QuantLib::Quote &gt;</label>
        <link refid="classQuantLib_1_1Handle"/>
      </node>
      <node id="8">
        <label>QuantLib::Handle&lt; QuantLib::YieldTermStructure &gt;</label>
        <link refid="classQuantLib_1_1Handle"/>
      </node>
      <node id="1">
        <label>QuantLib::BlackProcess</label>
        <link refid="classQuantLib_1_1BlackProcess"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::GeneralizedBlackScholesProcess</label>
        <link refid="classQuantLib_1_1GeneralizedBlackScholesProcess"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>x0_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>dividendYield_</edgelabel>
          <edgelabel>riskFreeRate_</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>blackVolatility_</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>externalLocalVolTS_</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>localVolatility_</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>QuantLib::Handle&lt; T &gt;</label>
        <link refid="classQuantLib_1_1Handle"/>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="classQuantLib_1_1Observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="classQuantLib_1_1Observer"/>
      </node>
      <node id="4">
        <label>QuantLib::StochasticProcess</label>
        <link refid="classQuantLib_1_1StochasticProcess"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::StochasticProcess1D</label>
        <link refid="classQuantLib_1_1StochasticProcess1D"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::RelinkableHandle&lt; QuantLib::LocalVolTermStructure &gt;</label>
        <link refid="classQuantLib_1_1RelinkableHandle"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/processes/blackscholesprocess.hpp" line="168" column="5" bodyfile="ql/processes/blackscholesprocess.hpp" bodystart="168" bodyend="177"/>
    <listofallmembers>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1af138c8d7679ab9ee3c1196db728a309c" prot="public" virt="virtual"><scope>QuantLib::BlackProcess</scope><name>apply</name></member>
      <member refid="classQuantLib_1_1BlackProcess_1af4d828b24feafbeed9cf2b24f557894e" prot="public" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>BlackProcess</name></member>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1a6da3dae01e3435556a3b14a06887aaa1" prot="public" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>blackVolatility</name></member>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1a9b218cfaa19894f11dbe7e76e09efbb3" prot="private" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>blackVolatility_</name></member>
      <member refid="classQuantLib_1_1StochasticProcess1D_1a7a6f6dbd4dcd88d7793c718ec4e2d7a9" prot="private" virt="virtual"><scope>QuantLib::BlackProcess</scope><name>covariance</name></member>
      <member refid="classQuantLib_1_1Observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::BlackProcess</scope><name>deepUpdate</name></member>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1a72dbcf1a1c410debf2b0b1d07124a3bf" prot="public" virt="virtual"><scope>QuantLib::BlackProcess</scope><name>diffusion</name></member>
      <member refid="classQuantLib_1_1StochasticProcess1D_1aff0e6c615f076baf4393abe860794583" prot="protected" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>discretization_</name></member>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1af0b5ea3952602e4e9fb96cd63228ff1b" prot="public" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>dividendYield</name></member>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1a28e309e4c23ce613ad03ce6e6f43e756" prot="private" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>dividendYield_</name></member>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1abf46d8ac312c489f2fcf00fefc734953" prot="public" virt="virtual"><scope>QuantLib::BlackProcess</scope><name>drift</name></member>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1a208d564850f58a2e14f5711bba553e34" prot="public" virt="virtual"><scope>QuantLib::BlackProcess</scope><name>evolve</name></member>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1a942429a2002692b5ceb0cfc646beb174" prot="public" virt="virtual"><scope>QuantLib::BlackProcess</scope><name>expectation</name></member>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1afcc420dec2f8f374e0c0fb7c3139577b" prot="private" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>externalLocalVolTS_</name></member>
      <member refid="classQuantLib_1_1StochasticProcess_1a0346d38598fb9a5a1cd58024f05081aa" prot="public" virt="virtual"><scope>QuantLib::BlackProcess</scope><name>factors</name></member>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1a01901a9e22b45706dfcbc59be5341066" prot="private" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>forceDiscretization_</name></member>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1a6191843b621dcc99f9a94734bbf6548e" prot="public" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>GeneralizedBlackScholesProcess</name></member>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1abb0647caeacde504b534fdb76a435cc6" prot="public" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>GeneralizedBlackScholesProcess</name></member>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1ad9d39bd485c87ffd5d57cc267751948f" prot="private" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>hasExternalLocalVol_</name></member>
      <member refid="classQuantLib_1_1StochasticProcess1D_1afe261942062a36caf1d2902a0791331d" prot="private" virt="virtual"><scope>QuantLib::BlackProcess</scope><name>initialValues</name></member>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1aca13e238e040922695d4e69ec4b19872" prot="private" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>isStrikeIndependent_</name></member>
      <member refid="classQuantLib_1_1Observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::BlackProcess</scope><name>iterator</name></member>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1aeb481d0cd90e889c59593a433416f3f0" prot="public" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>localVolatility</name></member>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1aa87d7c4188d91737c019c2b136227fae" prot="private" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>localVolatility_</name></member>
      <member refid="classQuantLib_1_1Observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>notifyObservers</name></member>
      <member refid="classQuantLib_1_1Observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>Observable</name></member>
      <member refid="classQuantLib_1_1Observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>Observable</name></member>
      <member refid="classQuantLib_1_1Observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>Observable</name></member>
      <member refid="classQuantLib_1_1Observer_1a85e3adb273b706155ea7e8bd98ee460b" prot="private" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>observables_</name></member>
      <member refid="classQuantLib_1_1Observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::BlackProcess</scope><name>Observer</name></member>
      <member refid="classQuantLib_1_1Observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::BlackProcess</scope><name>Observer</name></member>
      <member refid="classQuantLib_1_1Observable_1a4da6017619203dcb570d5f4174f0beea" prot="private" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>observers_</name></member>
      <member refid="classQuantLib_1_1Observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::BlackProcess</scope><name>operator=</name></member>
      <member refid="classQuantLib_1_1Observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::BlackProcess</scope><name>operator=</name></member>
      <member refid="classQuantLib_1_1Observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::BlackProcess</scope><name>operator=</name></member>
      <member refid="classQuantLib_1_1Observable_1a1eb87a03e7e1fd43377bce32e0c21bce" prot="private" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>registerObserver</name></member>
      <member refid="classQuantLib_1_1Observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>registerWith</name></member>
      <member refid="classQuantLib_1_1Observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>registerWithObservables</name></member>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1aefe8b195c9074f66515647d1ddc7f16c" prot="public" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>riskFreeRate</name></member>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1a5c225dd089833f460a1025e1379febbe" prot="private" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>riskFreeRate_</name></member>
      <member refid="classQuantLib_1_1Observer_1a3dcd7d8542d1142f29da8326919e863f" prot="private" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::BlackProcess</scope><name>set_type</name></member>
      <member refid="classQuantLib_1_1StochasticProcess1D_1a427495e858236ca1692eff7c771b6e2a" prot="private" virt="virtual"><scope>QuantLib::BlackProcess</scope><name>size</name></member>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1a2fe1299eb59ac276c49a9f7544e16f19" prot="public" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>stateVariable</name></member>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1a7eacd46b71b39baa72872d454acdeeaf" prot="public" virt="virtual"><scope>QuantLib::BlackProcess</scope><name>stdDeviation</name></member>
      <member refid="classQuantLib_1_1StochasticProcess_1a2dd24b794a6b320bc60ba9e1a87bf48e" prot="protected" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>StochasticProcess</name></member>
      <member refid="classQuantLib_1_1StochasticProcess_1a957ee9776d6048835106ea29ea44927f" prot="protected" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>StochasticProcess</name></member>
      <member refid="classQuantLib_1_1StochasticProcess1D_1a8fd2dc83f956da3dd008242ee5a5c926" prot="protected" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>StochasticProcess1D</name></member>
      <member refid="classQuantLib_1_1StochasticProcess1D_1a0971f058bea9a93d2ced17c685576686" prot="protected" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>StochasticProcess1D</name></member>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1aadbaae308a4066e94a3aa913b444ed52" prot="public" virt="virtual"><scope>QuantLib::BlackProcess</scope><name>time</name></member>
      <member refid="classQuantLib_1_1Observable_1abd81ef8b87594aa6f9d2a5bd5de3e628" prot="private" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>unregisterObserver</name></member>
      <member refid="classQuantLib_1_1Observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>unregisterWith</name></member>
      <member refid="classQuantLib_1_1Observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>unregisterWithAll</name></member>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1a3a8724db10cd68b424d5572a4ebc7a62" prot="public" virt="virtual"><scope>QuantLib::BlackProcess</scope><name>update</name></member>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1ad3800d0625aab0a0e18d09f62439a6ef" prot="private" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>updated_</name></member>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1a17b17c60b8a56d8eab8ed63ad7ff64d1" prot="public" virt="virtual"><scope>QuantLib::BlackProcess</scope><name>variance</name></member>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1ae765ed8c43a8a485adf8baf3dcf608ba" prot="public" virt="virtual"><scope>QuantLib::BlackProcess</scope><name>x0</name></member>
      <member refid="classQuantLib_1_1GeneralizedBlackScholesProcess_1a3ff5941b67ba2be9b59b16519bb795e0" prot="private" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>x0_</name></member>
      <member refid="classQuantLib_1_1Observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::BlackProcess</scope><name>~Observable</name></member>
      <member refid="classQuantLib_1_1Observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::BlackProcess</scope><name>~Observer</name></member>
      <member refid="classQuantLib_1_1StochasticProcess_1a0e2b6a14e675db5abd0ab8965ff7b2c3" prot="public" virt="non-virtual"><scope>QuantLib::BlackProcess</scope><name>~StochasticProcess</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
