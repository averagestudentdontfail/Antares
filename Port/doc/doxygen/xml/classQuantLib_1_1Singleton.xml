<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classQuantLib_1_1Singleton" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::Singleton</compoundname>
    <includes refid="singleton_8hpp" local="no">singleton.hpp</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
      <param>
        <type>class Global</type>
        <defval>std::integral_constant&lt;bool, false&gt;</defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classQuantLib_1_1Singleton_1aec6ad8083eb125b47049a296aa078da3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Singleton&lt; T, Global &gt;::Singleton</definition>
        <argsstring>(const Singleton &amp;)=delete</argsstring>
        <name>Singleton</name>
        <qualifiedname>QuantLib::Singleton::Singleton</qualifiedname>
        <param>
          <type>const <ref refid="classQuantLib_1_1Singleton" kindref="compound">Singleton</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/patterns/singleton.hpp" line="61" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1Singleton_1adba174550e55859f5a7cf6fc060c3b24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Singleton&lt; T, Global &gt;::Singleton</definition>
        <argsstring>(Singleton &amp;&amp;)=delete</argsstring>
        <name>Singleton</name>
        <qualifiedname>QuantLib::Singleton::Singleton</qualifiedname>
        <param>
          <type><ref refid="classQuantLib_1_1Singleton" kindref="compound">Singleton</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/patterns/singleton.hpp" line="62" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1Singleton_1a9d8c762b553192d479d7ff7edb20624d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQuantLib_1_1Singleton" kindref="compound">Singleton</ref> &amp;</type>
        <definition>Singleton &amp; QuantLib::Singleton&lt; T, Global &gt;::operator=</definition>
        <argsstring>(const Singleton &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>QuantLib::Singleton::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classQuantLib_1_1Singleton" kindref="compound">Singleton</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/patterns/singleton.hpp" line="63" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1Singleton_1a87afbf4a53f4a13d2b64135656dc23ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classQuantLib_1_1Singleton" kindref="compound">Singleton</ref> &amp;</type>
        <definition>Singleton &amp; QuantLib::Singleton&lt; T, Global &gt;::operator=</definition>
        <argsstring>(Singleton &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>QuantLib::Singleton::operator=</qualifiedname>
        <param>
          <type><ref refid="classQuantLib_1_1Singleton" kindref="compound">Singleton</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/patterns/singleton.hpp" line="64" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classQuantLib_1_1Singleton_1ac8b95ca8ebb2759f6dda65e3c787bc99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Singleton&lt; T, Global &gt;::~Singleton</definition>
        <argsstring>()=default</argsstring>
        <name>~Singleton</name>
        <qualifiedname>QuantLib::Singleton::~Singleton</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/patterns/singleton.hpp" line="65" column="9"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQuantLib_1_1Singleton_1ac412b7766b32f56372a3e966c5f3f386" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; QuantLib::Singleton&lt; T, Global &gt;::instance</definition>
        <argsstring>()</argsstring>
        <name>instance</name>
        <qualifiedname>QuantLib::Singleton::instance</qualifiedname>
        <briefdescription>
<para>access to the unique instance </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/patterns/singleton.hpp" line="68" column="18" bodyfile="ql/patterns/singleton.hpp" bodystart="104" bodyend="107"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="classQuantLib_1_1Singleton_1a711b37092c979a43c38a4ac40dadd4d3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Singleton&lt; T, Global &gt;::Singleton</definition>
        <argsstring>()=default</argsstring>
        <name>Singleton</name>
        <qualifiedname>QuantLib::Singleton::Singleton</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/patterns/singleton.hpp" line="71" column="9"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Basic support for the singleton pattern. </para>
    </briefdescription>
    <detaileddescription>
<para>The typical use of this class is:</para>
<para><programlisting><codeline><highlight class="keyword">class<sp/></highlight><highlight class="normal">Foo<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1Singleton_1a711b37092c979a43c38a4ac40dadd4d3" kindref="member">Singleton</ref>&lt;Foo&gt;<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Singleton&lt;Foo&gt;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Foo()<sp/>{}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting></para>
<para>which, albeit sub-optimal, frees one from the concerns of creating and managing the unique instance and can serve later as a single implemementation point should synchronization features be added.</para>
<para>Global can be used to distinguish Singletons that are local to a session (Global = false) or that are global across all sessions (B = true). This is only relevant if QL_ENABLE_SESSIONS is enabled.</para>
<para>Notice that the creation and retrieval of (local or global) singleton instances through <ref refid="classQuantLib_1_1Singleton_1ac412b7766b32f56372a3e966c5f3f386" kindref="member">instance()</ref> is thread safe, but obviously subsequent operations on the singleton have to be synchronized within the singleton implementation itself. </para>
    </detaileddescription>
    <location file="ql/patterns/singleton.hpp" line="58" column="5" bodyfile="ql/patterns/singleton.hpp" bodystart="58" bodyend="72"/>
    <listofallmembers>
      <member refid="classQuantLib_1_1Singleton_1ac412b7766b32f56372a3e966c5f3f386" prot="public" virt="non-virtual"><scope>QuantLib::Singleton</scope><name>instance</name></member>
      <member refid="classQuantLib_1_1Singleton_1a9d8c762b553192d479d7ff7edb20624d" prot="public" virt="non-virtual"><scope>QuantLib::Singleton</scope><name>operator=</name></member>
      <member refid="classQuantLib_1_1Singleton_1a87afbf4a53f4a13d2b64135656dc23ba" prot="public" virt="non-virtual"><scope>QuantLib::Singleton</scope><name>operator=</name></member>
      <member refid="classQuantLib_1_1Singleton_1aec6ad8083eb125b47049a296aa078da3" prot="public" virt="non-virtual"><scope>QuantLib::Singleton</scope><name>Singleton</name></member>
      <member refid="classQuantLib_1_1Singleton_1adba174550e55859f5a7cf6fc060c3b24" prot="public" virt="non-virtual"><scope>QuantLib::Singleton</scope><name>Singleton</name></member>
      <member refid="classQuantLib_1_1Singleton_1a711b37092c979a43c38a4ac40dadd4d3" prot="protected" virt="non-virtual"><scope>QuantLib::Singleton</scope><name>Singleton</name></member>
      <member refid="classQuantLib_1_1Singleton_1ac8b95ca8ebb2759f6dda65e3c787bc99" prot="public" virt="non-virtual"><scope>QuantLib::Singleton</scope><name>~Singleton</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
