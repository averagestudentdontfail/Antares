<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="normaldistribution_8cpp" kind="file" language="C++">
    <compoundname>normaldistribution.cpp</compoundname>
    <includes refid="normaldistribution_8hpp" local="no">ql/math/distributions/normaldistribution.hpp</includes>
    <includes refid="comparison_8hpp" local="no">ql/math/comparison.hpp</includes>
    <includes local="no">boost/math/distributions/normal.hpp</includes>
    <incdepgraph>
      <node id="8">
        <label>ql/config.ansi.hpp</label>
        <link refid="config_8ansi_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ql/errors.hpp</label>
        <link refid="errors_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>ql/math/comparison.hpp</label>
        <link refid="comparison_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ql/math/distributions/normaldistribution.cpp</label>
        <link refid="normaldistribution_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ql/math/distributions/normaldistribution.hpp</label>
        <link refid="normaldistribution_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ql/math/errorfunction.hpp</label>
        <link refid="errorfunction_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ql/mathconstants.hpp</label>
        <link refid="mathconstants_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ql/qldefines.hpp</label>
        <link refid="qldefines_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ql/shared_ptr.hpp</label>
        <link refid="shared__ptr_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ql/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ql/userconfig.hpp</label>
        <link refid="userconfig_8hpp"/>
      </node>
      <node id="20">
        <label>boost/assert.hpp</label>
      </node>
      <node id="6">
        <label>boost/config.hpp</label>
      </node>
      <node id="21">
        <label>boost/current_function.hpp</label>
      </node>
      <node id="19">
        <label>boost/enable_shared_from_this.hpp</label>
      </node>
      <node id="18">
        <label>boost/make_shared.hpp</label>
      </node>
      <node id="26">
        <label>boost/math/distributions/normal.hpp</label>
      </node>
      <node id="17">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="7">
        <label>boost/version.hpp</label>
      </node>
      <node id="11">
        <label>cmath</label>
      </node>
      <node id="13">
        <label>cstddef</label>
      </node>
      <node id="22">
        <label>exception</label>
      </node>
      <node id="14">
        <label>functional</label>
      </node>
      <node id="12">
        <label>limits</label>
      </node>
      <node id="23">
        <label>sstream</label>
      </node>
      <node id="24">
        <label>string</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceQuantLib">QuantLib</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>c++;<sp/>tab-width:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil;<sp/>c-basic-offset:<sp/>4<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2000,<sp/>2001,<sp/>2002,<sp/>2003<sp/>RiskMap<sp/>srl</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2002,<sp/>2003<sp/>Ferdinando<sp/>Ametrano</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2008<sp/>StatPro<sp/>Italia<sp/>srl</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2010<sp/>Kakhkhor<sp/>Abdijalilov</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>QuantLib,<sp/>a<sp/>free-software/open-source<sp/>library</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>for<sp/>financial<sp/>quantitative<sp/>analysts<sp/>and<sp/>developers<sp/>-<sp/>http://quantlib.org/</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>QuantLib<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>QuantLib<sp/>license.<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>copy<sp/>of<sp/>the<sp/>license<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>please<sp/>email</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>&lt;quantlib-dev@lists.sf.net&gt;.<sp/>The<sp/>license<sp/>is<sp/>also<sp/>available<sp/>online<sp/>at</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>&lt;http://quantlib.org/license.shtml&gt;.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>license<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="normaldistribution_8hpp" kindref="compound">ql/math/distributions/normaldistribution.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="comparison_8hpp" kindref="compound">ql/math/comparison.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/math/distributions/normal.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceQuantLib" kindref="compound">QuantLib</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1CumulativeNormalDistribution_1aae667074551e83f4ce38b72fc951f669" kindref="member">CumulativeNormalDistribution::operator()</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>z)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//QL_REQUIRE(!(z<sp/>&gt;=<sp/>average_<sp/>&amp;&amp;<sp/>2.0*average_-z<sp/>&gt;<sp/>average_),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;not<sp/>a<sp/>real<sp/>number.<sp/>&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>(z<sp/>-<sp/><ref refid="classQuantLib_1_1CumulativeNormalDistribution_1a4c1be050448a40440602f7ea440b14c2" kindref="member">average_</ref>)<sp/>/<sp/><ref refid="classQuantLib_1_1CumulativeNormalDistribution_1a3f810a0ada8939b7f50c35b8f75a2fc5" kindref="member">sigma_</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>result<sp/>=<sp/>0.5<sp/>*<sp/>(<sp/>1.0<sp/>+<sp/><ref refid="classQuantLib_1_1CumulativeNormalDistribution_1a83262f19294542fccd506e8a34550c26" kindref="member">errorFunction_</ref>(<sp/>z*<ref refid="mathconstants_8hpp_1a54bca7e66258614c65e873a2fce393ac" kindref="member">M_SQRT_2</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result&lt;=1e-8)<sp/>{<sp/></highlight><highlight class="comment">//todo:<sp/>investigate<sp/>the<sp/>threshold<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Asymptotic<sp/>expansion<sp/>for<sp/>very<sp/>negative<sp/>z<sp/>following<sp/>(26.2.12)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>page<sp/>408<sp/>in<sp/>M.<sp/>Abramowitz<sp/>and<sp/>A.<sp/>Stegun,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pocketbook<sp/>of<sp/>Mathematical<sp/>Functions,<sp/>ISBN<sp/>3-87144818-4.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>sum=1.0,<sp/>zsqr=z*z,<sp/>i=1.0,<sp/>g=1.0,<sp/>x,<sp/>y,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a=<ref refid="group__limitMacros_1ga31675a375a563ed7a1bba05c664489af" kindref="member">QL_MAX_REAL</ref>,<sp/>lasta;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lasta=a;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>(4.0*i-3.0)/zsqr;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>x*((4.0*i-1)/zsqr);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>g*(x-y);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>-=<sp/>a;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>*=<sp/>y;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>std::fabs(a);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(lasta&gt;a<sp/>&amp;&amp;<sp/>a&gt;=std::fabs(sum*<ref refid="group__limitMacros_1ga4f2e6bcf6b19224bce1a5a6234286c17" kindref="member">QL_EPSILON</ref>));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>-<ref refid="classQuantLib_1_1CumulativeNormalDistribution_1aa23792f1c276e755b7a738374cfefe0a" kindref="member">gaussian_</ref>(z)/z*sum;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>!defined(QL_PATCH_SOLARIS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CumulativeNormalDistribution<sp/><ref refid="classQuantLib_1_1InverseCumulativeNormal_1a273b5c80ff8c7bbdab08456d7a57b7a1" kindref="member">InverseCumulativeNormal::f_</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Coefficients<sp/>for<sp/>the<sp/>rational<sp/>approximation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1InverseCumulativeNormal_1aa5c4ca22778db0e32e6e97a6b90bf98b" kindref="member">InverseCumulativeNormal::a1_</ref><sp/>=<sp/>-3.969683028665376e+01;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1InverseCumulativeNormal_1af4e5464b19312873d10203197b07fc3e" kindref="member">InverseCumulativeNormal::a2_</ref><sp/>=<sp/><sp/>2.209460984245205e+02;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1InverseCumulativeNormal_1a136d90b79e00bf885a9ce9739bcf0448" kindref="member">InverseCumulativeNormal::a3_</ref><sp/>=<sp/>-2.759285104469687e+02;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1InverseCumulativeNormal_1ab89bf1ad1d8b906276a7c64f89d9c8b7" kindref="member">InverseCumulativeNormal::a4_</ref><sp/>=<sp/><sp/>1.383577518672690e+02;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1InverseCumulativeNormal_1a3fb52665bb115e443b8ea80a5ac0c873" kindref="member">InverseCumulativeNormal::a5_</ref><sp/>=<sp/>-3.066479806614716e+01;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1InverseCumulativeNormal_1a02ab764faec5ed464aa48c1ec8d52657" kindref="member">InverseCumulativeNormal::a6_</ref><sp/>=<sp/><sp/>2.506628277459239e+00;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1InverseCumulativeNormal_1ae2d35c76061b58607891bfd80973083d" kindref="member">InverseCumulativeNormal::b1_</ref><sp/>=<sp/>-5.447609879822406e+01;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1InverseCumulativeNormal_1a8767f2e0c9be038a98c9a40114d1d5fa" kindref="member">InverseCumulativeNormal::b2_</ref><sp/>=<sp/><sp/>1.615858368580409e+02;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1InverseCumulativeNormal_1ae66af0fbad41177c67e5108057791b1d" kindref="member">InverseCumulativeNormal::b3_</ref><sp/>=<sp/>-1.556989798598866e+02;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1InverseCumulativeNormal_1a5753bdcd9e9e70c457723a5cf4f05666" kindref="member">InverseCumulativeNormal::b4_</ref><sp/>=<sp/><sp/>6.680131188771972e+01;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1InverseCumulativeNormal_1af362842e0460ca6607f0c7cad4ea83be" kindref="member">InverseCumulativeNormal::b5_</ref><sp/>=<sp/>-1.328068155288572e+01;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1InverseCumulativeNormal_1aa4cbd357aaf811fdb78eaa098c6f9e7b" kindref="member">InverseCumulativeNormal::c1_</ref><sp/>=<sp/>-7.784894002430293e-03;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1InverseCumulativeNormal_1af789cb42b3e6e28f9dcd6b3201981454" kindref="member">InverseCumulativeNormal::c2_</ref><sp/>=<sp/>-3.223964580411365e-01;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1InverseCumulativeNormal_1a018fcd769e23e8e8627cf25ce544933a" kindref="member">InverseCumulativeNormal::c3_</ref><sp/>=<sp/>-2.400758277161838e+00;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1InverseCumulativeNormal_1ac500307167dc71b20cfd3862e79a3301" kindref="member">InverseCumulativeNormal::c4_</ref><sp/>=<sp/>-2.549732539343734e+00;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1InverseCumulativeNormal_1a02d6354eb094b4ba2e32062362bf4a5b" kindref="member">InverseCumulativeNormal::c5_</ref><sp/>=<sp/><sp/>4.374664141464968e+00;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1InverseCumulativeNormal_1a357214481943e298736dfc04c3ae3c6e" kindref="member">InverseCumulativeNormal::c6_</ref><sp/>=<sp/><sp/>2.938163982698783e+00;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1InverseCumulativeNormal_1af80c0deaa1f468c73560b4aa6a36028c" kindref="member">InverseCumulativeNormal::d1_</ref><sp/>=<sp/><sp/>7.784695709041462e-03;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1InverseCumulativeNormal_1a6a36a1cab33dcf47411fd98e8baeb613" kindref="member">InverseCumulativeNormal::d2_</ref><sp/>=<sp/><sp/>3.224671290700398e-01;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1InverseCumulativeNormal_1ae7a74b687cfcba8f9255f63fadace84f" kindref="member">InverseCumulativeNormal::d3_</ref><sp/>=<sp/><sp/>2.445134137142996e+00;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1InverseCumulativeNormal_1a23341b94e4f648f904416ce7c84fe1c2" kindref="member">InverseCumulativeNormal::d4_</ref><sp/>=<sp/><sp/>3.754408661907416e+00;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Limits<sp/>of<sp/>the<sp/>approximation<sp/>regions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1InverseCumulativeNormal_1a61ee64d817beca47c71351b7be7768c2" kindref="member">InverseCumulativeNormal::x_low_</ref><sp/>=<sp/>0.02425;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1InverseCumulativeNormal_1a47e84203c3573443b6c3590e3f1a57f7" kindref="member">InverseCumulativeNormal::x_high_</ref>=<sp/>1.0<sp/>-<sp/>x_low_;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1InverseCumulativeNormal_1a64bd700c164b8118e3065f4cea15012e" kindref="member">InverseCumulativeNormal::tail_value</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;=<sp/>0.0<sp/>||<sp/>x<sp/>&gt;=<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>recover<sp/>if<sp/>due<sp/>to<sp/>numerical<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespaceQuantLib_1acba7cc9670305b8b6164bc87319313de" kindref="member">close_enough</ref>(x,<sp/>1.0))<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__limitMacros_1ga31675a375a563ed7a1bba05c664489af" kindref="member">QL_MAX_REAL</ref>;<sp/></highlight><highlight class="comment">//<sp/>largest<sp/>value<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::fabs(x)<sp/>&lt;<sp/><ref refid="group__limitMacros_1ga4f2e6bcf6b19224bce1a5a6234286c17" kindref="member">QL_EPSILON</ref>)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__limitMacros_1ga8a6736b7bfef354a1fc507317d49117a" kindref="member">QL_MIN_REAL</ref>;<sp/></highlight><highlight class="comment">//<sp/>largest<sp/>negative<sp/>value<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a8efe9cb3e67c8d0585e57b4d53c5d2fe" kindref="member">QL_FAIL</ref>(</highlight><highlight class="stringliteral">&quot;InverseCumulativeNormal(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>x</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>undefined:<sp/>must<sp/>be<sp/>0<sp/>&lt;<sp/>x<sp/>&lt;<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>z;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/><ref refid="classQuantLib_1_1InverseCumulativeNormal_1a61ee64d817beca47c71351b7be7768c2" kindref="member">x_low_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rational<sp/>approximation<sp/>for<sp/>the<sp/>lower<sp/>region<sp/>0&lt;x&lt;u_low</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>std::sqrt(-2.0*std::log(x));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>(((((<ref refid="classQuantLib_1_1InverseCumulativeNormal_1aa4cbd357aaf811fdb78eaa098c6f9e7b" kindref="member">c1_</ref>*z+<ref refid="classQuantLib_1_1InverseCumulativeNormal_1af789cb42b3e6e28f9dcd6b3201981454" kindref="member">c2_</ref>)*z+<ref refid="classQuantLib_1_1InverseCumulativeNormal_1a018fcd769e23e8e8627cf25ce544933a" kindref="member">c3_</ref>)*z+<ref refid="classQuantLib_1_1InverseCumulativeNormal_1ac500307167dc71b20cfd3862e79a3301" kindref="member">c4_</ref>)*z+<ref refid="classQuantLib_1_1InverseCumulativeNormal_1a02d6354eb094b4ba2e32062362bf4a5b" kindref="member">c5_</ref>)*z+<ref refid="classQuantLib_1_1InverseCumulativeNormal_1a357214481943e298736dfc04c3ae3c6e" kindref="member">c6_</ref>)<sp/>/</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((<ref refid="classQuantLib_1_1InverseCumulativeNormal_1af80c0deaa1f468c73560b4aa6a36028c" kindref="member">d1_</ref>*z+<ref refid="classQuantLib_1_1InverseCumulativeNormal_1a6a36a1cab33dcf47411fd98e8baeb613" kindref="member">d2_</ref>)*z+<ref refid="classQuantLib_1_1InverseCumulativeNormal_1ae7a74b687cfcba8f9255f63fadace84f" kindref="member">d3_</ref>)*z+<ref refid="classQuantLib_1_1InverseCumulativeNormal_1a23341b94e4f648f904416ce7c84fe1c2" kindref="member">d4_</ref>)*z+1.0);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rational<sp/>approximation<sp/>for<sp/>the<sp/>upper<sp/>region<sp/>u_high&lt;x&lt;1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>std::sqrt(-2.0*std::log(1.0-x));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>-(((((<ref refid="classQuantLib_1_1InverseCumulativeNormal_1aa4cbd357aaf811fdb78eaa098c6f9e7b" kindref="member">c1_</ref>*z+<ref refid="classQuantLib_1_1InverseCumulativeNormal_1af789cb42b3e6e28f9dcd6b3201981454" kindref="member">c2_</ref>)*z+<ref refid="classQuantLib_1_1InverseCumulativeNormal_1a018fcd769e23e8e8627cf25ce544933a" kindref="member">c3_</ref>)*z+<ref refid="classQuantLib_1_1InverseCumulativeNormal_1ac500307167dc71b20cfd3862e79a3301" kindref="member">c4_</ref>)*z+<ref refid="classQuantLib_1_1InverseCumulativeNormal_1a02d6354eb094b4ba2e32062362bf4a5b" kindref="member">c5_</ref>)*z+<ref refid="classQuantLib_1_1InverseCumulativeNormal_1a357214481943e298736dfc04c3ae3c6e" kindref="member">c6_</ref>)<sp/>/</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((<ref refid="classQuantLib_1_1InverseCumulativeNormal_1af80c0deaa1f468c73560b4aa6a36028c" kindref="member">d1_</ref>*z+<ref refid="classQuantLib_1_1InverseCumulativeNormal_1a6a36a1cab33dcf47411fd98e8baeb613" kindref="member">d2_</ref>)*z+<ref refid="classQuantLib_1_1InverseCumulativeNormal_1ae7a74b687cfcba8f9255f63fadace84f" kindref="member">d3_</ref>)*z+<ref refid="classQuantLib_1_1InverseCumulativeNormal_1a23341b94e4f648f904416ce7c84fe1c2" kindref="member">d4_</ref>)*z+1.0);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1a83a9845ffb7adfd7a6713bc44c4ec393" kindref="member">MoroInverseCumulativeNormal::a0_</ref><sp/>=<sp/><sp/>2.50662823884;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1a57a8feefa32ea9b266528a611f9bc4ce" kindref="member">MoroInverseCumulativeNormal::a1_</ref><sp/>=-18.61500062529;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1a339d7ce411f63ae235fd901cd62ab0f7" kindref="member">MoroInverseCumulativeNormal::a2_</ref><sp/>=<sp/>41.39119773534;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1a87f240233a914a16c60fc698f5daaabe" kindref="member">MoroInverseCumulativeNormal::a3_</ref><sp/>=-25.44106049637;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1aac5ced0832c62e61a39bc2f591e2abd2" kindref="member">MoroInverseCumulativeNormal::b0_</ref><sp/>=<sp/>-8.47351093090;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1af969e52c031137cf0e786b3d68b751c4" kindref="member">MoroInverseCumulativeNormal::b1_</ref><sp/>=<sp/>23.08336743743;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1ae967922723d27ea2a87e2996dba82405" kindref="member">MoroInverseCumulativeNormal::b2_</ref><sp/>=-21.06224101826;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1a4676efaf297abff0d886ffd54d3f3003" kindref="member">MoroInverseCumulativeNormal::b3_</ref><sp/>=<sp/><sp/>3.13082909833;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1aa1c42055a3705d1b98422339a08a0244" kindref="member">MoroInverseCumulativeNormal::c0_</ref><sp/>=<sp/>0.3374754822726147;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1aceca3b9b51498d6396531eb2fd9fa8ea" kindref="member">MoroInverseCumulativeNormal::c1_</ref><sp/>=<sp/>0.9761690190917186;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1a74c8cb392c26d746db8fa8d6bfa4da2b" kindref="member">MoroInverseCumulativeNormal::c2_</ref><sp/>=<sp/>0.1607979714918209;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1a8e9579ae73e0e37c18797ee6f826f730" kindref="member">MoroInverseCumulativeNormal::c3_</ref><sp/>=<sp/>0.0276438810333863;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1a74ed2c14dde4eac29097cc3018b52096" kindref="member">MoroInverseCumulativeNormal::c4_</ref><sp/>=<sp/>0.0038405729373609;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1a1e73ffb6d1a5aa0d6e4b7ffbea24b8f2" kindref="member">MoroInverseCumulativeNormal::c5_</ref><sp/>=<sp/>0.0003951896511919;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1a601e731aea6cbf909687eef4a991f824" kindref="member">MoroInverseCumulativeNormal::c6_</ref><sp/>=<sp/>0.0000321767881768;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1a46bd54898892fbeab169a06cfd23853c" kindref="member">MoroInverseCumulativeNormal::c7_</ref><sp/>=<sp/>0.0000002888167364;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1a3c2ac255e47ccec13bf5f407937e6dbd" kindref="member">MoroInverseCumulativeNormal::c8_</ref><sp/>=<sp/>0.0000003960315187;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1a005a787de0b504994868d77e1b351e44" kindref="member">MoroInverseCumulativeNormal::operator()</ref>(<ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>x)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errors_8hpp_1a7a9bcab8006882bc7d5302a0861ab1a6" kindref="member">QL_REQUIRE</ref>(x<sp/>&gt;<sp/>0.0<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>1.0,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MoroInverseCumulativeNormal(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>x</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>undefined:<sp/>must<sp/>be<sp/>0&lt;x&lt;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>result;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>temp=x-0.5;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::fabs(temp)<sp/>&lt;<sp/>0.42)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Beasley<sp/>and<sp/>Springer,<sp/>1977</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result=temp*temp;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result=temp*</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((<ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1a87f240233a914a16c60fc698f5daaabe" kindref="member">a3_</ref>*result+<ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1a339d7ce411f63ae235fd901cd62ab0f7" kindref="member">a2_</ref>)*result+<ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1a57a8feefa32ea9b266528a611f9bc4ce" kindref="member">a1_</ref>)*result+<ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1a83a9845ffb7adfd7a6713bc44c4ec393" kindref="member">a0_</ref>)<sp/>/</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((((<ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1a4676efaf297abff0d886ffd54d3f3003" kindref="member">b3_</ref>*result+<ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1ae967922723d27ea2a87e2996dba82405" kindref="member">b2_</ref>)*result+<ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1af969e52c031137cf0e786b3d68b751c4" kindref="member">b1_</ref>)*result+<ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1aac5ced0832c62e61a39bc2f591e2abd2" kindref="member">b0_</ref>)*result+1.0);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>improved<sp/>approximation<sp/>for<sp/>the<sp/>tail<sp/>(Moro<sp/>1995)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x&lt;0.5)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result=1.0-x;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>std::log(-std::log(result));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1aa1c42055a3705d1b98422339a08a0244" kindref="member">c0_</ref>+result*(<ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1aceca3b9b51498d6396531eb2fd9fa8ea" kindref="member">c1_</ref>+result*(<ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1a74c8cb392c26d746db8fa8d6bfa4da2b" kindref="member">c2_</ref>+result*(<ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1a8e9579ae73e0e37c18797ee6f826f730" kindref="member">c3_</ref>+result*</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1a74ed2c14dde4eac29097cc3018b52096" kindref="member">c4_</ref>+result*(<ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1a1e73ffb6d1a5aa0d6e4b7ffbea24b8f2" kindref="member">c5_</ref>+result*(<ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1a601e731aea6cbf909687eef4a991f824" kindref="member">c6_</ref>+result*</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1a46bd54898892fbeab169a06cfd23853c" kindref="member">c7_</ref>+result*<ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1a3c2ac255e47ccec13bf5f407937e6dbd" kindref="member">c8_</ref>)))))));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x&lt;0.5)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result=-result;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1a0e65c14d48c3cd81d1adc9f1f8b7b388" kindref="member">average_</ref><sp/>+<sp/>result*<ref refid="classQuantLib_1_1MoroInverseCumulativeNormal_1ac91e7039d4519df476648abc61e40d86" kindref="member">sigma_</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classQuantLib_1_1MaddockInverseCumulativeNormal_1acb581f2d8eef145eb16e90262c7900b5" kindref="member">MaddockInverseCumulativeNormal::MaddockInverseCumulativeNormal</ref>(</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>average,<sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>sigma)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>average_(average),<sp/>sigma_(sigma)<sp/>{}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>MaddockInverseCumulativeNormal::operator()(Real<sp/>x)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::math::quantile(</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::math::normal_distribution&lt;Real&gt;(average_,<sp/>sigma_),<sp/>x);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>MaddockCumulativeNormal::MaddockCumulativeNormal(</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Real<sp/>average,<sp/>Real<sp/>sigma)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>average_(average),<sp/>sigma_(sigma)<sp/>{}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceQuantLib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>MaddockCumulativeNormal::operator()(Real<sp/>x)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::math::cdf(</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::math::normal_distribution&lt;Real&gt;(average_,<sp/>sigma_),<sp/>x);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="ql/math/distributions/normaldistribution.cpp"/>
  </compounddef>
</doxygen>
