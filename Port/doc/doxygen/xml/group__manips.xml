<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="group__manips" kind="group">
    <compoundname>manips</compoundname>
    <title>Output manipulators</title>
    <sectiondef kind="var">
      <memberdef kind="variable" id="group__manips_1gad167f4e6391385217e46dfa4827884bc" prot="public" static="no" mutable="no">
        <type>detail::long_weekday_holder</type>
        <definition>detail::long_weekday_holder QuantLib::io::long_weekday</definition>
        <argsstring>(Weekday)</argsstring>
        <name>long_weekday</name>
        <qualifiedname>QuantLib::io::long_weekday</qualifiedname>
        <briefdescription>
<para>output weekdays in long format </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/weekday.hpp" line="87" column="37" bodyfile="ql/time/weekday.cpp" bodystart="108" bodyend="110"/>
      </memberdef>
      <memberdef kind="variable" id="group__manips_1ga5be437350e5e56a699ba0f53bf25b2ce" prot="public" static="no" mutable="no">
        <type>detail::short_weekday_holder</type>
        <definition>detail::short_weekday_holder QuantLib::io::short_weekday</definition>
        <argsstring>(Weekday)</argsstring>
        <name>short_weekday</name>
        <qualifiedname>QuantLib::io::short_weekday</qualifiedname>
        <briefdescription>
<para>output weekdays in short format (three letters) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/weekday.hpp" line="91" column="38" bodyfile="ql/time/weekday.cpp" bodystart="112" bodyend="114"/>
      </memberdef>
      <memberdef kind="variable" id="group__manips_1ga951de1277920bcbcfb757a4f5a254d03" prot="public" static="no" mutable="no">
        <type>detail::shortest_weekday_holder</type>
        <definition>detail::shortest_weekday_holder QuantLib::io::shortest_weekday</definition>
        <argsstring>(Weekday)</argsstring>
        <name>shortest_weekday</name>
        <qualifiedname>QuantLib::io::shortest_weekday</qualifiedname>
        <briefdescription>
<para>output weekdays in shortest format (two letters) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/weekday.hpp" line="95" column="41" bodyfile="ql/time/weekday.cpp" bodystart="116" bodyend="118"/>
      </memberdef>
      <memberdef kind="variable" id="group__manips_1ga99123ed23086645a51814084d01650f8" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>detail::null_checker&lt; T &gt;</type>
        <definition>detail::null_checker&lt; T &gt; QuantLib::io::checknull</definition>
        <argsstring>(T)</argsstring>
        <name>checknull</name>
        <qualifiedname>QuantLib::io::checknull</qualifiedname>
        <briefdescription>
<para>check for nulls before output </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/utilities/dataformatters.hpp" line="83" column="30" bodyfile="ql/utilities/dataformatters.hpp" bodystart="112" bodyend="114"/>
      </memberdef>
      <memberdef kind="variable" id="group__manips_1ga1aec40d03e1902f486894d1f4946f14c" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>detail::power_of_two_holder&lt; T &gt;</type>
        <definition>detail::power_of_two_holder&lt; T &gt; QuantLib::io::power_of_two</definition>
        <argsstring>(T)</argsstring>
        <name>power_of_two</name>
        <qualifiedname>QuantLib::io::power_of_two</qualifiedname>
        <briefdescription>
<para>output integers as powers of two </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/utilities/dataformatters.hpp" line="90" column="37" bodyfile="ql/utilities/dataformatters.hpp" bodystart="121" bodyend="123"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__manips_1gab9e306f9ec0855319cbb452f6a7b3627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>detail::short_date_holder</type>
        <definition>detail::short_date_holder QuantLib::io::short_date</definition>
        <argsstring>(const Date &amp;)</argsstring>
        <name>short_date</name>
        <qualifiedname>QuantLib::io::short_date</qualifiedname>
        <param>
          <type>const Date &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>output dates in short format (mm/dd/yyyy) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/date.cpp" line="983" column="35" bodyfile="ql/time/date.cpp" bodystart="983" bodyend="985" declfile="ql/time/date.hpp" declline="354" declcolumn="35"/>
      </memberdef>
      <memberdef kind="function" id="group__manips_1gad2cba1797c1cf63c02d899696b343ee8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>detail::long_date_holder</type>
        <definition>detail::long_date_holder QuantLib::io::long_date</definition>
        <argsstring>(const Date &amp;)</argsstring>
        <name>long_date</name>
        <qualifiedname>QuantLib::io::long_date</qualifiedname>
        <param>
          <type>const Date &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>output dates in long format (Month ddth, yyyy) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/date.cpp" line="987" column="34" bodyfile="ql/time/date.cpp" bodystart="987" bodyend="989" declfile="ql/time/date.hpp" declline="358" declcolumn="34"/>
      </memberdef>
      <memberdef kind="function" id="group__manips_1ga0921b3ae46195feff93b2a4388e05d63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>detail::iso_date_holder</type>
        <definition>detail::iso_date_holder QuantLib::io::iso_date</definition>
        <argsstring>(const Date &amp;)</argsstring>
        <name>iso_date</name>
        <qualifiedname>QuantLib::io::iso_date</qualifiedname>
        <param>
          <type>const Date &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>output dates in ISO format (yyyy-mm-dd) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/date.cpp" line="991" column="33" bodyfile="ql/time/date.cpp" bodystart="991" bodyend="993" declfile="ql/time/date.hpp" declline="362" declcolumn="33"/>
      </memberdef>
      <memberdef kind="function" id="group__manips_1ga8fa78f7a218d5b62e45e1a2d3ae369a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>detail::formatted_date_holder</type>
        <definition>detail::formatted_date_holder QuantLib::io::formatted_date</definition>
        <argsstring>(const Date &amp;, const std::string &amp;fmt)</argsstring>
        <name>formatted_date</name>
        <qualifiedname>QuantLib::io::formatted_date</qualifiedname>
        <param>
          <type>const Date &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>output dates in user defined format using boost date functionality </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/date.cpp" line="995" column="39" bodyfile="ql/time/date.cpp" bodystart="995" bodyend="998" declfile="ql/time/date.hpp" declline="366" declcolumn="39"/>
      </memberdef>
      <memberdef kind="function" id="group__manips_1ga21b63d20c9f70f1d56fe664a5d10932e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>detail::long_period_holder</type>
        <definition>detail::long_period_holder QuantLib::io::long_period</definition>
        <argsstring>(const Period &amp;)</argsstring>
        <name>long_period</name>
        <qualifiedname>QuantLib::io::long_period</qualifiedname>
        <param>
          <type>const Period &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>output periods in long format (e.g. &quot;2 weeks&quot;) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/period.cpp" line="442" column="36" bodyfile="ql/time/period.cpp" bodystart="442" bodyend="444" declfile="ql/time/period.hpp" declline="130" declcolumn="36"/>
      </memberdef>
      <memberdef kind="function" id="group__manips_1gafd478859146a0e3cdb97a51a4f7839a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>detail::short_period_holder</type>
        <definition>detail::short_period_holder QuantLib::io::short_period</definition>
        <argsstring>(const Period &amp;)</argsstring>
        <name>short_period</name>
        <qualifiedname>QuantLib::io::short_period</qualifiedname>
        <param>
          <type>const Period &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>output periods in short format (e.g. &quot;2w&quot;) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/period.cpp" line="446" column="37" bodyfile="ql/time/period.cpp" bodystart="446" bodyend="448" declfile="ql/time/period.hpp" declline="134" declcolumn="37"/>
      </memberdef>
      <memberdef kind="function" id="group__manips_1ga9645f8136bf2eabd3bca2955ce5be730" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>detail::ordinal_holder</type>
        <definition>detail::ordinal_holder QuantLib::io::ordinal</definition>
        <argsstring>(Size)</argsstring>
        <name>ordinal</name>
        <qualifiedname>QuantLib::io::ordinal</qualifiedname>
        <param>
          <type>Size</type>
          <defname>n</defname>
        </param>
        <briefdescription>
<para>outputs naturals as 1st, 2nd, 3rd... </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/utilities/dataformatters.hpp" line="116" column="39" bodyfile="ql/utilities/dataformatters.hpp" bodystart="116" bodyend="118" declfile="ql/utilities/dataformatters.hpp" declline="86" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="group__manips_1gad6429b50a94e20956091bff348f5fda3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>detail::percent_holder</type>
        <definition>detail::percent_holder QuantLib::io::percent</definition>
        <argsstring>(Real)</argsstring>
        <name>percent</name>
        <qualifiedname>QuantLib::io::percent</qualifiedname>
        <param>
          <type>Real</type>
          <defname>x</defname>
        </param>
        <briefdescription>
<para>output reals as percentages </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/utilities/dataformatters.hpp" line="125" column="39" bodyfile="ql/utilities/dataformatters.hpp" bodystart="125" bodyend="127" declfile="ql/utilities/dataformatters.hpp" declline="93" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="group__manips_1gac9152aad6a69c41f5d30bb1dcb9b2236" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>detail::percent_holder</type>
        <definition>detail::percent_holder QuantLib::io::rate</definition>
        <argsstring>(Rate)</argsstring>
        <name>rate</name>
        <qualifiedname>QuantLib::io::rate</qualifiedname>
        <param>
          <type>Rate</type>
          <defname>r</defname>
        </param>
        <briefdescription>
<para>output rates and spreads as percentages </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/utilities/dataformatters.hpp" line="129" column="39" bodyfile="ql/utilities/dataformatters.hpp" bodystart="129" bodyend="131" declfile="ql/utilities/dataformatters.hpp" declline="96" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="group__manips_1ga9890b88f8d11494a518492be973b9046" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>detail::percent_holder</type>
        <definition>detail::percent_holder QuantLib::io::volatility</definition>
        <argsstring>(Volatility)</argsstring>
        <name>volatility</name>
        <qualifiedname>QuantLib::io::volatility</qualifiedname>
        <param>
          <type>Volatility</type>
          <defname>v</defname>
        </param>
        <briefdescription>
<para>output volatilities as percentages </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/utilities/dataformatters.hpp" line="133" column="39" bodyfile="ql/utilities/dataformatters.hpp" bodystart="133" bodyend="135" declfile="ql/utilities/dataformatters.hpp" declline="99" declcolumn="32"/>
      </memberdef>
      <memberdef kind="function" id="group__manips_1gadafc7499c9eb17fd7b18d60ca3c797a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Container</type>
          </param>
        </templateparamlist>
        <type>detail::sequence_holder&lt; typename Container::const_iterator &gt;</type>
        <definition>detail::sequence_holder&lt; typename Container::const_iterator &gt; QuantLib::io::sequence</definition>
        <argsstring>(const Container &amp;c)</argsstring>
        <name>sequence</name>
        <qualifiedname>QuantLib::io::sequence</qualifiedname>
        <param>
          <type>const Container &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>output STL-compliant containers as space-separated sequences </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/utilities/dataformatters.hpp" line="139" column="9" bodyfile="ql/utilities/dataformatters.hpp" bodystart="139" bodyend="142" declfile="ql/utilities/dataformatters.hpp" declline="104" declcolumn="9"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Helper functions for creating formatted output. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
